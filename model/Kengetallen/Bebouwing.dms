//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Bebouwing
{
	container BestaandeWoning :=
		model/CalculationSchemes/ModelObjectKentallenImport(
			 '20191206_Woningen_BAG_met_sprongen.csv'
			,'WoningType_str'
			,Classifications/WoningtypeBestaand
			,Classifications/BouwjaarWoningBestaand
		)
	{
		unit<uint32> results
		{
			attribute<Classifications/GebouwOptie> StartOptie_rel := const(Classifications/GebouwOptie/V/HRw, .);
			
			attribute<kW_asl> ASW_EZ_asl := const(Kengetallen/Aansluitwaarde/ASW_w_zonderWP_default, .);
			attribute<kW_asl> ASW_EM_asl := const(Kengetallen/Aansluitwaarde/ASW_w_metWP_default, .);			
			attribute<kW_m2>  ASW_EZ_opp := const(0[kW_m2], .);
			attribute<kW_m2>  ASW_EM_opp := const(0[kW_m2], .);
			
			attribute<kW_asl> ASW_RV_asl := const(Kengetallen/Aansluitwaarde/ASW_woning_RV, .);
			attribute<kW_asl> ASW_WW_asl := const(Kengetallen/Aansluitwaarde/ASW_woning_WW, .);
			attribute<kW_m2>  ASW_RV_opp := const(0[kW_m2], .);
			attribute<kW_m2>  ASW_WW_opp := const(0[kW_m2], .);
		}
	}
	container NieuwbouwWoning :=
		model/CalculationSchemes/EnergieKengetallenImport(
			 '20190704_Woningen_Nieuwbouw_BAG.csv'
			,'WoningType_str'
			,Classifications/WoningtypeNieuwbouw
			,Classifications/BouwJaar
			,Units/nrWoningen
			,Units/nrWoningen
		)
	{
		container results
		{
			parameter<Classifications/GebouwOptie> StartOptie_rel := Classifications/GebouwOptie/V/HRw;
			container Aansluitcapaciteit
			{
				attribute<kW_Woning> Elektriciteit (ModelObject) := const(Kengetallen/Aansluitwaarde/ASW_w_zonderWP_default, ModelObject);
			}
			container Verbeteringen
			{
				container S_X_X  := GebouwTempl(ModelObject, GJ_yr_per_Eenheid, Eur_per_eenheid, Functioneel/Ruimteverwarming_vast, Functioneel/Ruimteverwarming_var, 'X');

				container S_H_T  := S_X_X;
				container S_H_B  := S_X_X;
				container S_H_AP := GebouwTempl(ModelObject, GJ_yr_per_Eenheid, Eur_per_eenheid, Functioneel/Ruimteverwarming_vast, Functioneel/Ruimteverwarming_var, 'C');
				container S_T_B  := S_X_X;
				container S_T_AP := S_X_X;
				container S_B_AP := S_H_AP;
			}
		}
	}
	container BestaandeUtil :=
		model/CalculationSchemes/EnergieKengetallenImport(
			 '20190918_Utiliteiten_BAG.csv'
			,'UtiliteitType_str'
			,Classifications/UtilTypeBestaand
			,Classifications/BouwjaarUtilBestaand
			,Units/m2
			,Units/m2
		)
	{
		container results 
		{
			parameter<Classifications/GebouwOptie> StartOptie_rel := Classifications/GebouwOptie/V/HRu;
			container Aansluitcapaciteit
			{
				attribute<kW_m2> Elektriciteit (ModelObject) := const(Kengetallen/Aansluitwaarde/ASW_u_zonderWP_default, ModelObject);
			}
			container Verbeteringen
			{
				container S_X_X  := GebouwTempl(ModelObject, GJ_yr_per_Eenheid, Eur_per_eenheid, Functioneel/Ruimteverwarming_vast, Functioneel/Ruimteverwarming_var, 'X');

				container S_H_T  := S_X_X;
				container S_H_B  := GebouwTempl(ModelObject, GJ_yr_per_Eenheid, Eur_per_eenheid, Functioneel/Ruimteverwarming_vast, Functioneel/Ruimteverwarming_var, 'B');
				container S_H_AP := GebouwTempl(ModelObject, GJ_yr_per_Eenheid, Eur_per_eenheid, Functioneel/Ruimteverwarming_vast, Functioneel/Ruimteverwarming_var, 'C');
				container S_T_B  := S_X_X;
				container S_T_AP := S_X_X;
				container S_B_AP := GebouwTempl(ModelObject, GJ_yr_per_Eenheid, Eur_per_eenheid, S_H_B/verbruik_na_vast, S_H_B/verbruik_na_var , 'F');
			}
		}
	}
	container NieuwbouwUtil :=
		model/CalculationSchemes/EnergieKengetallenImport(
			'20190704_Utiliteiten_Nieuwbouw_BAG.csv'
			,'UtiliteitType_str'
			,Classifications/UtilTypeNieuwbouw
			,Classifications/BouwJaar
			,Units/m2
			,Units/m2
		)
	{
		container results 
		{
			parameter<Classifications/GebouwOptie> StartOptie_rel := Classifications/GebouwOptie/V/HRu;
			container Aansluitcapaciteit
			{
				attribute<kW_m2> Elektriciteit (ModelObject) := const(Kengetallen/Aansluitwaarde/ASW_u_zonderWP_default, ModelObject);
			}
			container Verbeteringen
			{
				container S_X_X  := GebouwTempl(ModelObject, GJ_yr_per_Eenheid, Eur_per_eenheid, Functioneel/Ruimteverwarming_vast, Functioneel/Ruimteverwarming_var, 'X');

				container S_H_T  := S_X_X;
				container S_H_B  := S_X_X;
				container S_H_AP := S_X_X;
				container S_T_B  := S_X_X;
				container S_T_AP := S_X_X;
				container S_B_AP := S_X_X;
			}
		}
	}
	container BestaandeGlTb :=
		model/CalculationSchemes/EnergieKengetallenImport(
			'20190704_Glastuinbouw_BAG.csv'
			,'UtiliteitType_str'
			,Classifications/GlTb
			,Classifications/bouwjaar
			,Units/m2
			,Units/m2
		)
	{
		container results
		{
			parameter<Classifications/GebouwOptie> StartOptie_rel := Classifications/GebouwOptie/V/HRu;
			container Aansluitcapaciteit
			{
				attribute<kW_m2> Elektriciteit (ModelObject) := const(Kengetallen/Aansluitwaarde/ASW_gltb_zonderWP_default, ModelObject);
			}
			container Verbeteringen
			{
				container S_X_X  := GebouwTempl(ModelObject, GJ_yr_per_Eenheid, Eur_per_eenheid, Functioneel/Ruimteverwarming_vast, Functioneel/Ruimteverwarming_var, 'X');

				container S_H_T  := S_X_X;
				container S_H_B  := S_X_X;
				container S_H_AP := S_X_X;
				container S_T_B  := S_X_X;
				container S_T_AP := S_X_X;
				container S_B_AP := S_X_X;
			}
		}
	}
	container NieuwbouwGlTb :=
		model/CalculationSchemes/EnergieKengetallenImport(
			 '20190704_Glastuinbouw_Nieuwbouw_BAG.csv'
			,'UtiliteitType_str'
			,Classifications/GlTb
			,Classifications/bouwjaar
			,Units/m2
			,Units/m2
		)
	{
		container results 
		{
			parameter<Classifications/GebouwOptie> StartOptie_rel := Classifications/GebouwOptie/V/HRu;
			container Aansluitcapaciteit
			{
				attribute<kW_m2> Elektriciteit (ModelObject) := const(Kengetallen/Aansluitwaarde/ASW_gltb_zonderWP_default, ModelObject);
			}
			container Verbeteringen
			{
				container S_X_X  := GebouwTempl(ModelObject, GJ_yr_per_Eenheid, Eur_per_eenheid, Functioneel/Ruimteverwarming_vast, Functioneel/Ruimteverwarming_var, 'X');

				container S_H_T  := S_X_X;
				container S_H_B  := S_X_X;
				container S_H_AP := S_X_X;
				container S_T_B  := S_X_X;
				container S_T_AP := S_X_X;
				container S_B_AP := S_X_X;
			}
		}
	}
	
	template GebouwTempl
	{
		//parameters
		unit<uint32>                 ModelObject;
		unit<float64>                GJ_yr_per_Eenheid;
		unit<float64>                Eur_per_eenheid;
		attribute<GJ_yr_per_Eenheid> verbruik_prev_vast(ModelObject); // alleen ruimteverwarming
		attribute<GJ_yr_m2>          verbruik_prev_var (ModelObject); // alleen ruimteverwarming
		parameter<string>            VerbeterCode;
		//end parameters
		
		attribute<GJ_yr_per_Eenheid> verbruik_na_vast  (ModelObject) := =(VerbeterCode!='X') ? 'MakeDefined(table/MV'+VerbeterCode+'_EG_vast[GJ_yr_per_Eenheid], Functioneel/Ruimteverwarming_vast)' : 'const(0.0[GJ_yr_per_Eenheid], ModelObject)'; // lees nieuw verbruik uit kentallenbestand
		attribute<GJ_yr_m2>          verbruik_na_var   (ModelObject) := =(VerbeterCode!='X') ? 'MakeDefined(table/MV'+VerbeterCode+'_EG_var[GJ_yr_m2], Functioneel/Ruimteverwarming_var)' : 'const(0.0[GJ_yr_m2], ModelObject)'; // lees nieuw verbruik uit kentallenbestand
		attribute<Eur_per_eenheid>   kosten_min_vast   (ModelObject) := =(VerbeterCode!='X') ? 'MakeDefined(table/MV'+VerbeterCode+'_EG_Eur_MIN_vast [Eur_per_eenheid], 0.0[Eur_per_eenheid])' : 'const(0 / 0, ModelObject, Eur_per_eenheid)' ; // lees min_kosten uit kentallenbestand
		attribute<Eur_m2>            kosten_min_var    (ModelObject) := =(VerbeterCode!='X') ? 'MakeDefined(table/MV'+VerbeterCode+'_EG_Eur_MIN_var  [Eur_m2],          0.0[Eur_m2])'          : 'const(0 / 0, ModelObject, Eur_m2)'          ; // lees min_kosten uit kentallenbestand
		attribute<Eur_per_eenheid>   kosten_max_vast   (ModelObject) := =(VerbeterCode!='X') ? 'MakeDefined(table/MV'+VerbeterCode+'_EG_Eur_MAX_vast [Eur_per_eenheid], 0.0[Eur_per_eenheid])' : 'const(0 / 0, ModelObject, Eur_per_eenheid)' ; // lees max_kosten uit kentallenbestand
		attribute<Eur_m2>            kosten_max_var    (ModelObject) := =(VerbeterCode!='X') ? 'MakeDefined(table/MV'+VerbeterCode+'_EG_Eur_MAX_var  [Eur_m2],          0.0[Eur_m2])'          : 'const(0 / 0, ModelObject, Eur_m2)'          ; // lees max_kosten uit kentallenbestand

		attribute<Ratio>             efficiency_vast   (ModelObject) := makedefined(Functioneel/Ruimteverwarming_vast / verbruik_na_vast, const(1[Ratio], ModelObject));
		attribute<Ratio>             efficiency_var    (ModelObject) := makedefined(Functioneel/Ruimteverwarming_var / verbruik_na_var, const(1[Ratio], ModelObject));
		attribute<GJ_yr_m2>          ExtraVentilatie   (ModelObject) := VerbeterCode == 'B' || VerbeterCode == 'C' || VerbeterCode == 'D' || VerbeterCode == 'E' 
			? Functioneel/V_Ventilatie 
			: const(0.0[GJ_yr_m2], ModelObject);
	}
}
