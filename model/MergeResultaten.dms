//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Merge
{
	parameter<string> SA_root_folder := '%LocalDataProjDir%' + '/20200727_SA2020_Previewversie/';
	container impl
	{
		parameter<string> Slash           : [ '/' ];
		parameter<string> BackSlash       : [ '\\' ];
		parameter<string> NewLine         : [ '\n' ];

		parameter<string> CsvDir          := SA_root_folder + '/01_Hoofdberekening/Results';

		parameter<string> ComSpec         := Expand(., '%env:ComSpec%');
		parameter<string> FileNameDirInfo := '%LocalDataProjDir%/dirinfo_results.str';

		parameter<string> DirCmdOrg       := Expand(., 'Dir '+ CsvDir +'/*.csv > ' + FileNameDirInfo);
		parameter<string> DirCmd          := Replace(DirCmdOrg, Slash, BackSlash) + ' /B /S';
	}

	container writer := exec(impl/ComSpec, '/c ' + impl/DirCmd, Expand(., '%LocalDataProjDir%'));

	parameter<string> bestand: Storagename = "=impl/FileNameDirInfo", ExplicitSuppliers = "Writer";
	
	container bestand_selectie
	{
		unit<uint32> csv_bestand := range(uint32, 0, strcount(bestand,impl/NewLine))
		{
			attribute<string> naam      := 'N' + string(ID(.));
			attribute<string> inhoud    := readLines(bestand, ., 0);
		}
		container csv_attribuut
		{
			container bestanden :=
				for_each_ne(
					csv_bestand/naam,
					'read_csv(' + quote(csv_bestand/naam) + ')'
				);
			unit<uint32> att := = 'union_unit(' + asList('bestanden/' + csv_bestand/naam  + '/att_name' ,',') + ')'
			{
				attribute<string> name_alt            := = 'union_data(att,' + asList('bestanden/' + csv_bestand/naam  + '/att_name/name_alt' ,',') + ')';
				attribute<string> alt                 := = 'union_data(att,' + asList('bestanden/' + csv_bestand/naam  + '/att_name/alt' ,',') + ')';
				attribute<string> ti_name             := = 'union_data(att,' + asList('bestanden/' + csv_bestand/naam  + '/att_name/ti_name' ,',') + ')';
				attribute<string> ti_domain_string    := = 'union_data(att,' + asList('bestanden/' + csv_bestand/naam  + '/att_name/ti_domain_string' ,',') + ')';
			}
			unit<uint32> att_zonder_buurtcode := Subset(strcount(csv_attribuut/att/ti_name,'_BU_CODE_') == 0)
			{
				attribute<string> name_alt            := att/name_alt[nr_OrgEntity];
				attribute<string> alt                 := att/alt[nr_OrgEntity];
				attribute<string> ti_name             := att/ti_name[nr_OrgEntity];
				attribute<string> ti_domain_string    := att/ti_domain_string[nr_OrgEntity];
			}
			
			container find_BU_CODE_src
			{
				unit<uint32> statisch_bu_code := subset(lowercase(csv_attribuut/att/alt) == '01_hoofdberekening_results_statisch.csv' && strcount(csv_attribuut/att/ti_name, 'BU_CODE') > 0)
				{
					attribute<string> name_alt := csv_attribuut/att/name_alt[nr_OrgEntity];
					attribute<string> alt      := csv_attribuut/att/alt[nr_OrgEntity];
					attribute<string> ti_name  := csv_attribuut/att/ti_name[nr_OrgEntity];
					attribute<string> ti_domain_string  := csv_attribuut/att/ti_domain_string[nr_OrgEntity];
				}
			}
			
			unit<uint32> result := = 'bestanden/' + find_BU_CODE_src/statisch_bu_code/ti_domain_string[0]
			, Using = "bestanden"
			{
				container att:= 
					for_each_nedv(
						 'A'+ replace(bestand_selectie/csv_attribuut/att_zonder_buurtcode/name_alt, '.csv','', '__','_metric_')
						,'rjoin(bu_code,' + bestand_selectie/csv_attribuut/att_zonder_buurtcode/ti_domain_string  + '/_BU_CODE_,' + bestand_selectie/csv_attribuut/att_zonder_buurtcode/ti_name + ')'
						,result
						,string)
				{
					attribute<string> bu_code (..):= = 'bestanden/' + find_BU_CODE_src/statisch_bu_code/ti_name[0];
				}
			}
		}
	}

	Template read_csv
	{
		//begin caseparmeters
		parameter<string> naam;
		//end caseparmeters
		
		parameter<string> slash := '\\';
		parameter<string> filenaam                := rjoin(naam,bestand_selectie/csv_bestand/naam,bestand_selectie/csv_bestand/inhoud);
		parameter<string> SA_root_folder_expanded := expand(.,SA_root_folder);
		parameter<string> SA_root_folder_no_slash := replace(SA_root_folder_expanded,'/','_','\','_');
		parameter<string> filename_no_slash       := replace(filenaam, slash,'_');

		parameter<string> alternative             := replace(filename_no_slash, SA_root_folder_no_slash,'');
		
		unit<uint32> src
		:	StorageName     = "=filenaam"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True";
		
		unit<uint32> att_name_src := SubItem_PropValues(src,'name');
		unit<uint32> att_name     := subset(att_name_src/name <> 'Geometry')
		{
			attribute<string> name     := att_name_src/name[nr_OrgEntity];
			attribute<string> alt      := const(alternative,.);
			attribute<string> name_alt := alt + name;
			attribute<string> ti_name  := naam + '/src/' + name;
			attribute<string> ti_domain_string  := const(naam,.) + '/src';
		}
	}
}