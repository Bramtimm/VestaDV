//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container H2kentallen
{
	//CONSTANTEN
	parameter<mj_kg>		H2energie_onder :=	  120.000 [mj_kg]        ,	Source = "CE Delft parameters H2 pp. 6 Tabel  1",	Descr = "Energieinhoud van waterstof - deze wordt gebruikt";
	parameter<mj_kg>		H2energie_boven :=	  141.800 [mj_kg]        ,	Source = "CE Delft parameters H2 pp. 6 Tabel  1",	Descr = "Energieinhoud van waterstof - deze wordt niet gebruikt";

	//OPEX
	parameter<_yr>			R_oh_aansl      :=	  00.0375 [_yr]          ,	Source = "CE Delft parameters H2 pp.18 Tabel 13",	Descr = "jaarlijkse onderhoudskosten aansluiting als aandeel van de initiele investering bepaald als 5-10 euro/yr over 200eur/weq";
	parameter<ratio>		R_lv_admin      :=	  00.2500 [ratio]        ,	Source = "Gelijk warmtenetleveranciers (FO 3.0)",	Descr = "jaarlijkse administratieve lasten voor leverancier als aandeel van het vastrecht";
	
	//VERGOEDINGEN
	parameter<Eur_asl>	Ki_pm_min       :=	  000.000 [Eur_asl]    ,	Source = "20-11-2019 Werkwaarde 24-1-2020 (nul)",	Descr = "minimale vergoeding voor projectmanagement";
	parameter<Eur_asl>	Ki_pm_max       :=	  000.000 [Eur_asl]    ,	Source = "20-11-2019 Werkwaarde 24-1-2020 (nul)",	Descr = "maximale vergoeding voor projectmanagement";
	parameter<Eur_asl>	Ki_ov_min       :=	  000.000 [Eur_asl]    ,	Source = "20-11-2019 Werkwaarde 24-1-2020 (nul)",	Descr = "minimale vergoeding voor ongerief bewoners";
	parameter<Eur_asl>	Ki_ov_max       :=	  000.000 [Eur_asl]    ,	Source = "20-11-2019 Werkwaarde 24-1-2020 (nul)",	Descr = "maximale vergoeding voor ongerief bewoners";
	
	//CAPEX
	parameter<Eur_asl>	K_aansl_w_min   :=	  200.000 [Eur_asl]    ,	Source = "CE Delft parameters H2 pp.18 Tabel 13",	Descr = "maximale kosten voor het vervangen van een regulieren gasmeter en aansluiting voor een meter die geschikt is voor waterstof bij woningen";
	parameter<Eur_asl>	K_aansl_w_max   :=	  200.000 [Eur_asl]    ,	Source = "CE Delft parameters H2 pp.18 Tabel 13",	Descr = "minimale kosten voor het vervangen van een regulieren gasmeter en aansluiting voor een meter die geschikt is voor waterstof bij woningen";
	parameter<eur>			K_section_min   :=	 2000.000 [eur]          ,	Source = "CE Delft parameters H2 pp.18 Tabel 13",	Descr = "maximale kosten voor het afsectioneren van het netwerk om het klaar te maken voor waterstof ";
	parameter<eur>			K_section_max   :=	 2000.000 [eur]          ,	Source = "CE Delft parameters H2 pp.18 Tabel 13",	Descr = "minimale kosten voor het afsectioneren van het netwerk om het klaar te maken voor waterstof ";
	parameter<eur_m2>		K_aansl_u_min   :=	 1.333333 [eur_m2]       ,	Source = "CE Delft parameters H2 pp.18 Tabel 13",	Descr = "maximale kosten voor het vervangen van een regulieren gasmeter en aansluiting voor een meter die geschikt is voor waterstof bij utiliteit (obv. 200/weq van 150m2)";
	parameter<eur_m2>		K_aansl_u_max   :=	 1.333333 [eur_m2]       ,	Source = "CE Delft parameters H2 pp.18 Tabel 13",	Descr = "minimale kosten voor het vervangen van een regulieren gasmeter en aansluiting voor een meter die geschikt is voor waterstof bij utiliteit (obv. 200/weq van 150m2)";
	
	template H2template
	{
		//Case parameters
		parameter<ratio> H2Curve;
		parameter<ratio> InfraCurve;
		parameter<ratio> OMCurve;
		parameter<ratio> KostenMin;
		parameter<ratio> KostenMax;
		parameter<ratio> EffMax;
		//End case parameters	
		parameter<ratio> EffMin := 1.0 - EffMax;
		
		//KOSTEN
		parameter<Eur_asl>	K_aansl_w        :=		InfraCurve * (KostenMin * K_aansl_w_min + KostenMax * K_aansl_w_max);
		parameter<eur_m2>		K_aansl_u        :=		InfraCurve * (KostenMin * K_aansl_u_min + KostenMax * K_aansl_u_max);
		parameter<eur>			K_section        :=		InfraCurve * (KostenMin * K_section_min + KostenMax * K_section_max);
		parameter<Eur_asl>	K_ov             :=		OMCurve * (KostenMin * Ki_ov_min     + KostenMax * Ki_ov_max);
		parameter<Eur_asl>	K_pm             :=		OMCurve * (KostenMin * Ki_pm_min     + KostenMax * Ki_pm_max);
	}
	
	container Emissies
	{
		parameter<kg_GJ> CO2_GJb := 0[kg_GJ];
		parameter<g_GJ>  NOx_GJb := 0[g_GJ];
		parameter<g_GJ>  SO2_GJb := 0[g_GJ];
		parameter<g_GJ>  VOS_GJb := 0[g_GJ];
		parameter<g_GJ>  TS_GJb  := 0[g_GJ];
	}
}
