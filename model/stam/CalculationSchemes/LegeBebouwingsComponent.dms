//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template LegeBebouwingsComponent
{
	// begin case parameters
	unit<float64> JoinedUnit;
	unit<uint8>   BebouwingsTypeDomeinArg;
	// end case parameters

	unit<uint32> results := Range(uint32, 0, 0)
	{
		attribute<string>                             code               := const('', .);
		unit<uint8> BebouwingsTypeDomein := BebouwingsTypeDomeinArg;

		attribute<Geography/rdc_meter>                point              := point(const(0.0, .), const(0.0, .), Geography/rdc_meter);

		attribute<JoinedUnit>                         NrJoinedUnits      := const(0[JoinedUnit], .);

		attribute<Invoer/RuimtelijkeData/StudieGebied/buurt> buurt_rel   := const(0[Invoer/RuimtelijkeData/StudieGebied/buurt   ], .);
		
		attribute<uint8>                              ModelObjectKey     := const(0b, .);
		attribute<BebouwingsTypeDomein>               BebouwingsType     := const(0b, .);
		attribute<Classifications/BouwJaar>           BouwJaar           := const(Classifications/BouwJaar/V/Onbekend, .);
		attribute<nrAansl>                            nrAansluitingen_i  := const(0[nrAansl], .);
		attribute<nrWoningen>                         nrWoonUnits_i      := const(0.0[nrWoningen], .);

		attribute<bool>                               KanBesparen        := const(false, .);
		attribute<float64>                            AandeelWarmteVraag := const(0.0, .);
		attribute<float64>                            pand_aandeel       := const(1.0, .);
		attribute<m2>                                 nrOppUnits_i       := const(0.0[m2], .);
		attribute<string>                             Label              := code;

		container Criteria;
		container Gebied
		{
			attribute<float64> n      (..) := const(0.0, ..);
			attribute<float64> MEAN_x (..) := const(0.0, ..);
			attribute<float64> MEAN_y (..) := const(0.0, ..);
			attribute<float64> SSD_xx (..) := const(0.0, ..);
			attribute<float64> SSD_xy (..) := const(0.0, ..);
			attribute<float64> SSD_yy (..) := const(0.0, ..);
		}
	}
}