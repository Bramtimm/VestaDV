//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template KostenBaten
{
	// begin case parameters
	container bebouwing;
	// end case parameters

	attribute<string> BCname(Classifications/BebouwingsComponent) := Classifications/BebouwingsComponent/name;
	container KanGebiedsOptie := for_each_nednv( BCname
		,	replace('float64(Classifications/WarmteOptie/KanGebiedsOptie[bebouwing/@BC/WarmteOptie_rel])', '@BC', BCname)
		,	bebouwing, BCname, float64
		);
		
	container WarmteVraag := for_each_ne(BCname, replace('CalculationSchemes/WarmteVraagT(bebouwing/@BC, KanGebiedsOptie/@BC)', '@BC', BCname));
	
	unit<uint32> PlanRegio := Invoer/SpecifiekeInstellingen/PlanRegio;

	container Opbrengsten
	{
		container EenmaligD := for_each_nedv(BCname
			,replace('sum(Bebouwing/@BC@/Opbrengsten/AansluitBijdrageT * KanGebiedsOptie/@BC@, Bebouwing/@BC@/PlanRegio_rel)', '@BC@', BCname)
			,PlanRegio, Eur
			)
		{
			attribute<Eur> Oi_Totaal(PlanRegio) := ='add('+AsItemList(BCname)+')';
		}
		container JaarlijksD 
		{
			attribute<Eur_yr> Oj_VastRecht(PlanRegio) := ='add('+AsItemList('sum(WarmteVraag/'+BCname+'/Oj_VastRechtMT,      WarmteVraag/'+BCname+'/BO/PlanRegio_rel)' )+')';
			attribute<Eur_yr> Oj_Warmte   (PlanRegio) := ='add('+AsItemList('sum(WarmteVraag/'+BCname+'/Oj_Warmte,           WarmteVraag/'+BCname+'/BO/PlanRegio_rel)' )+')';
			attribute<Eur_yr> Oj_Totaal   (PlanRegio) := Oj_Warmte + Oj_VastRecht;
		}
	}

	container Kostenkentallen := Kengetallen/Kosten_MT(LeerCurves/MTnet/curve, LeerCurves/OenM/curve, LeerCurves/Inpand/curve);
	
	container KostenD
	{
		container Wonen
		{
			
			container bw := CalculationSchemes/KostenWoningen(bebouwing/BestaandeWoning, KanGebiedsOptie/BestaandeWoning, PlanRegio, false);
			container nw := CalculationSchemes/KostenWoningen(bebouwing/NieuwbouwWoning, KanGebiedsOptie/NieuwbouwWoning, PlanRegio, true);

			attribute<Eur>		Ki_wd     (PlanRegio)	:=	bw/ki_wd + nw/Ki_wd;
			attribute<Eur>		Ki_id     (PlanRegio)	:=	bw/ki_id + nw/Ki_id;
			attribute<Eur>		Ki_ge_ov  (PlanRegio)	:=	bw/ki_ge_ov + nw/Ki_ge_ov;
			attribute<Eur>		Ki_ge_pm  (PlanRegio)	:=	bw/ki_ge_pm + nw/Ki_ge_pm;
			attribute<Eur_yr>	Kj_wd_adm (PlanRegio)	:=	Ki_wd * Kengetallen/Onderhoud/R_wd_admin;
			attribute<Eur_yr>	Kj_wd_oh  (PlanRegio)	:=	Ki_wd * Kengetallen/Onderhoud/R_wd_onderhoud;
			attribute<Eur_yr>	Kj_id_adm (PlanRegio)	:=	Ki_id * Kengetallen/Onderhoud/R_id_admin;
			attribute<Eur_yr>	Kj_id_oh  (PlanRegio)	:=	Ki_id * Kengetallen/Onderhoud/R_id_onderhoud;
			attribute<Eur_yr>	Kj_ge_hv  (PlanRegio)	:=	bw/Kj_hv;
		}
		container Utiliteit
		{
			parameter<kW> afkapgrens_klein := 100[kW];

			container NrAansluitingen
			{
				attribute<nrAansl> Klein (PlanRegio) := 
					sum(
					  bebouwing/BestaandeUtil/nrAansluitingen* KanGebiedsOptie/BestaandeUtil
						* float64(bebouwing/BestaandeUtil/AansluitCapaciteit/Warmte <= afkapgrens_klein) 
					, bebouwing/BestaandeUtil/PlanRegio_rel
					) + 
					sum(
					  bebouwing/NieuwbouwUtil/nrAansluitingen * KanGebiedsOptie/NieuwbouwUtil
						* float64(bebouwing/NieuwbouwUtil/AansluitCapaciteit/Warmte <= afkapgrens_klein) 
					, bebouwing/NieuwbouwUtil/PlanRegio_rel
					);
				attribute<nrAansl> Groot (PlanRegio) := 
					sum(
					  bebouwing/BestaandeUtil/nrAansluitingen * KanGebiedsOptie/BestaandeUtil
						* float64(bebouwing/BestaandeUtil/AansluitCapaciteit/Warmte > afkapgrens_klein) 
					, bebouwing/BestaandeUtil/PlanRegio_rel
					) + 
					sum(
					  bebouwing/NieuwbouwUtil/nrAansluitingen * KanGebiedsOptie/NieuwbouwUtil
						* float64(bebouwing/NieuwbouwUtil/AansluitCapaciteit/Warmte > afkapgrens_klein) 
					, bebouwing/NieuwbouwUtil/PlanRegio_rel
					);
				attribute<nrAansl> Totaal (PlanRegio) := Klein + Groot;
			}

			container CapaciteitsVraag
			{
				attribute<kW>	Klein (PlanRegio) :=	
					Vermogens/GTF_u_RVmt * (
						sum(bebouwing/BestaandeUtil/AansluitCapaciteit/Warmte * KanGebiedsOptie/BestaandeUtil
							* float64(bebouwing/BestaandeUtil/AansluitCapaciteit/Warmte <= afkapgrens_klein) 
						, bebouwing/BestaandeUtil/PlanRegio_rel
						) + 
							sum(bebouwing/NieuwbouwUtil/AansluitCapaciteit/Warmte * KanGebiedsOptie/NieuwbouwUtil
								* float64(bebouwing/NieuwbouwUtil/AansluitCapaciteit/Warmte <= afkapgrens_klein) 
							, bebouwing/NieuwbouwUtil/PlanRegio_rel)
							
					);
															
				attribute<kW>	Groot (PlanRegio) :=	
					Vermogens/GTF_u_RVmt * (
						sum(bebouwing/BestaandeUtil/AansluitCapaciteit/Warmte * KanGebiedsOptie/BestaandeUtil
							* float64(bebouwing/BestaandeUtil/AansluitCapaciteit/Warmte > afkapgrens_klein) 
						, bebouwing/BestaandeUtil/PlanRegio_rel
						) + 
							sum(bebouwing/NieuwbouwUtil/AansluitCapaciteit/Warmte * KanGebiedsOptie/NieuwbouwUtil
								* float64(bebouwing/NieuwbouwUtil/AansluitCapaciteit/Warmte > afkapgrens_klein) 
							, bebouwing/NieuwbouwUtil/PlanRegio_rel)
							
					);
					
				attribute<kW> P_ASW		(PlanRegio)	:=	Vermogens/GTF_u_RVmt * (
						sum(Vermogens/GTF_u_RVmt * 
							bebouwing/BestaandeUtil/AansluitCapaciteit/Warmte * KanGebiedsOptie/BestaandeUtil
						,	bebouwing/BestaandeUtil/PlanRegio_rel
						) + 
						sum(
							bebouwing/NieuwbouwUtil/AansluitCapaciteit/Warmte* KanGebiedsOptie/NieuwbouwUtil
						,	bebouwing/NieuwbouwUtil/PlanRegio_rel)
					);
				attribute<kW> Totaal(PlanRegio) := Klein + Groot;
			}

			//inpandige warmtemeter en leidingwerk utiliteit
			attribute<Eur>		Ki_WarmteMeter       (PlanRegio) :=		Kostenkentallen/K_Wmtr_vast * NrAansluitingen/Totaal + Kostenkentallen/K_Wmtr_var * CapaciteitsVraag/Totaal;		
			attribute<Eur>		Ki_Distributie       (PlanRegio) :=		Kostenkentallen/Ki_id_Dist  * CapaciteitsVraag/Klein;
			attribute<Eur>		Ki_OnderStation      (PlanRegio) :=		Kostenkentallen/K_OS        * CapaciteitsVraag/totaal;
			attribute<Eur>		Ki_Totaal            (PlanRegio) :=		Ki_WarmteMeter + Ki_Distributie + Ki_OnderStation;
			attribute<Eur_yr>	Kj_Admin             (PlanRegio) :=		Ki_Distributie  * Kengetallen/Onderhoud/R_wd_admin
																	+	Ki_OnderStation * Kengetallen/Onderhoud/R_OS_admin
																	+	Ki_WarmteMeter  * Kengetallen/Onderhoud/R_Inst_admin;
			attribute<Eur_yr>	Kj_Onderhoud         (PlanRegio) :=		Ki_Distributie  * Kengetallen/Onderhoud/R_wd_onderhoud
																	+	Ki_OnderStation * Kengetallen/Onderhoud/R_OS_onderhoud
																	+	Ki_WarmteMeter  * Kengetallen/Onderhoud/R_Inst_onderhoud;
		}

		container GlasTuinbouw
		{
			parameter<m2> GemOppGroente          := 11000[m2], Source ="Gem_opp_groente, FO F47b";
			parameter<m2> GemOppbloemen_overig   :=  9000[m2], Source ="Gem_opp_bloemen/Gem_opp_overig, FO F47b";
			parameter<m>  GroenteKasLengteFactor := 2.0 * Sqrt(GemOppGroente), Descr = "noemer in F 50 en F 48";

			

			attribute<Eur_m2> K_dienstleiding_m2 (Classifications/GlTb) :=
				switch(
					 case(id(Classifications/GlTb) == Classifications/GLTB/V/Glastuinbouw_groente_verwarmd, Kostenkentallen/K_Dienst_Gwarm / GemOppGroente)
					,case(id(Classifications/GlTb) == Classifications/GLTB/V/Glastuinbouw_bloemen_verwarmd, Kostenkentallen/K_Dienst_Bwarm / GemOppbloemen_overig)
					,case(id(Classifications/GlTb) == Classifications/GLTB/V/Glastuinbouw_overig_verwarmd , Kostenkentallen/K_Dienst_Owarm / GemOppbloemen_overig)
					,case(id(Classifications/GlTb) == Classifications/GLTB/V/onbekend, 0[Eur_m2] / 0d)
					, 0[Eur_m2]
				)
			,	Source = "F 47b";

			container bestaand
			{
				attribute<m2> Areaal (PlanRegio) := sum(bebouwing/BestaandeGlTb/Oppervlakte* KanGebiedsOptie/BestaandeGlTb
						, bebouwing/BestaandeGlTb/PlanRegio_rel);
				
				attribute<m> SqrtAreaal (PlanRegio) := sum(Sqrt(bebouwing/BestaandeGlTb/Oppervlakte) * KanGebiedsOptie/BestaandeGlTb
						, bebouwing/BestaandeGlTb/PlanRegio_rel);

				attribute<nrAansl> NrAansluitingen (PlanRegio) :=sum(bebouwing/BestaandeGlTb/nrAansluitingen * KanGebiedsOptie/BestaandeGlTb
						, bebouwing/BestaandeGlTb/PlanRegio_rel);
						
				attribute<kW> P_ASW(            PlanRegio) := sum(bebouwing/BestaandeGlTb/AansluitCapaciteit/Warmte * KanGebiedsOptie/BestaandeGlTb
						, bebouwing/BestaandeGlTb/PlanRegio_rel);
				attribute<kW> CapaciteitsVraag (PlanRegio) := Vermogens/GTF_t_RVmt * P_ASW;

				attribute<Eur>		Ki_OnderStation		(PlanRegio)	:=	CapaciteitsVraag * Kostenkentallen/K_OS;
				attribute<Eur> K_dienstleidingen (PlanRegio) := 
					sum(bebouwing/BestaandeGlTb/Oppervlakte * KanGebiedsOptie/BestaandeGlTb
						* K_dienstleiding_m2[Bebouwing/BestaandeGlTb/BebouwingsType]
						, bebouwing/BestaandeGlTb/PlanRegio_rel);
				attribute<float64> n_Zijwegparen (PlanRegio) := Sqrt(2.0) * SqrtAreaal / GroenteKasLengteFactor, Descr = "F 48";
				attribute<float64> n_Zijleiding  (PlanRegio) := (n_Zijwegparen + 0.5) * 2.0, Descr = "F 48: estimate average increase of round-up in a 'best' continuous replacement";
				attribute<MW>      P_Zijleiding  (PlanRegio) : Descr = "F 49: 50% van het piekvermogen wordt door CV-ketels in de OS (dus per kas) geleverd" ,= CapaciteitsVraag / n_Zijleiding / value(1000, kW / MW);
				attribute<m>   lengte_Zijleiding (PlanRegio) := 1.7 * (Areaal / GroenteKasLengteFactor + Sqrt(2.0) * SqrtAreaal), Descr = "F 50";
				container ZijleidingKosten := BuisKosten(PlanRegio, P_Zijleiding);
				attribute<Eur>    K_Zijleiding  (PlanRegio) := lengte_Zijleiding * ZijleidingKosten/K_m;
				attribute<Eur   > Ki_Totaal     (PlanRegio) := K_dienstleidingen + K_Zijleiding + Ki_OnderStation;					
				attribute<Eur_yr>	Kj_Onderhoud (PlanRegio)	:=	(K_dienstleidingen + K_Zijleiding) * Kengetallen/Onderhoud/R_Sec_onderhoud
																	+ Ki_OnderStation                  * Kengetallen/Onderhoud/R_OS_onderhoud;
				attribute<Eur_yr>	Kj_Admin     (PlanRegio)	:=	(K_dienstleidingen + K_Zijleiding) * Kengetallen/Onderhoud/R_Sec_admin
																	+ Ki_OnderStation                  * Kengetallen/Onderhoud/R_OS_admin;	
				
			}
			container nieuw
			{
				attribute<m2> Areaal (PlanRegio) := sum(bebouwing/NieuwbouwGlTb/Oppervlakte * KanGebiedsOptie/NieuwbouwGlTb
						, bebouwing/NieuwbouwGlTb/PlanRegio_rel);
				
				attribute<m> SqrtAreaal (PlanRegio) := sum(Sqrt(bebouwing/NieuwbouwGlTb/Oppervlakte) * KanGebiedsOptie/NieuwbouwGlTb
						, bebouwing/NieuwbouwGlTb/PlanRegio_rel);

				attribute<nrAansl> NrAansluitingen (PlanRegio) :=sum(bebouwing/NieuwbouwGlTb/nrAansluitingen * KanGebiedsOptie/NieuwbouwGlTb
						, bebouwing/NieuwbouwGlTb/PlanRegio_rel);
						
				attribute<kW> P_ASW(            PlanRegio) := sum(bebouwing/NieuwbouwGlTb/AansluitCapaciteit/Warmte * KanGebiedsOptie/NieuwbouwGlTb
						, bebouwing/NieuwbouwGlTb/PlanRegio_rel);
				attribute<kW> CapaciteitsVraag (PlanRegio) := Vermogens/GTF_t_RVmt * P_ASW;
						
				attribute<Eur>		Ki_OnderStation		(PlanRegio)	:=	CapaciteitsVraag * Kostenkentallen/K_OS;
				attribute<Eur> K_dienstleidingen (PlanRegio):=
					sum(bebouwing/NieuwbouwGlTb/Oppervlakte * KanGebiedsOptie/NieuwbouwGlTb
						* K_dienstleiding_m2[Bebouwing/NieuwbouwGlTb/BebouwingsType]
						, bebouwing/NieuwbouwGlTb/PlanRegio_rel)
				,	 Source = "F 47b";		
		
				attribute<float64> n_Zijwegparen (PlanRegio) := Sqrt(2.0) * SqrtAreaal / GroenteKasLengteFactor, Descr = "F 48";
				attribute<float64> n_Zijleiding  (PlanRegio) := (n_Zijwegparen + 0.5) * 2.0, Descr = "F 48"; // add expected increase of round-up as a 'best' continuous replacement of float64(RoundUp(n_Zijwegparen)) * float64(2)

				attribute<MW>      P_Zijleiding  (PlanRegio) := CapaciteitsVraag / n_Zijleiding / 1000[kW / MW], Descr = "F 49: 50% van het piekvermogen wordt door CV-ketels in de OS (dus per kas) geleverd";

				attribute<m>    lengte_Zijleiding(PlanRegio) := 1.3 * (Areaal / GroenteKasLengteFactor + Sqrt(2.0) * SqrtAreaal), Descr = "F 50";

				container ZijleidingKosten := BuisKosten(PlanRegio, P_Zijleiding);
				attribute<Eur>		K_Zijleiding  (PlanRegio) :=	lengte_Zijleiding * ZijleidingKosten/K_m;
				attribute<Eur>		Ki_Totaal     (PlanRegio) :=	K_dienstleidingen + K_Zijleiding + Ki_OnderStation;
				attribute<Eur_yr>	Kj_Onderhoud  (PlanRegio) :=	(K_dienstleidingen + K_Zijleiding) * Kengetallen/Onderhoud/R_Sec_onderhoud
																	+ Ki_OnderStation                  * Kengetallen/Onderhoud/R_OS_onderhoud;
				attribute<Eur_yr>	Kj_Admin     (PlanRegio)	:=	(K_dienstleidingen + K_Zijleiding) * Kengetallen/Onderhoud/R_Sec_admin
																	+ Ki_OnderStation                  * Kengetallen/Onderhoud/R_OS_admin;
			}
			attribute<m2>       opp_gltb              (PlanRegio)   :=  sum(WarmteVraag/BestaandeGlTb/oppervlakte, WarmteVraag/BestaandeGlTb/BO/Planregio_rel) + sum(WarmteVraag/NieuwbouwGlTb/oppervlakte, WarmteVraag/NieuwbouwGlTb/BO/Planregio_rel);
			attribute<Eur_yr>	Kj_CO2Installatie     (PlanRegio)	:=	opp_gltb / 10000[m2 / ha] * (Kostenkentallen/Ki_huur_CO2Inst + Kostenkentallen/V_CO2 * Kostenkentallen/K_CO2);
			attribute<Eur_yr>	Kj_CO2Installatie_oh  (PlanRegio)	:=	Kengetallen/Onderhoud/R_Inst_Onderhoud    * (Kj_CO2Installatie * 1[yr]);
			attribute<Eur_yr>	Kj_CO2Installatie_adm (PlanRegio)	:=	Kengetallen/Onderhoud/R_Inst_Admin        * (Kj_CO2Installatie * 1[yr]);

			attribute<kW>		CapaciteitsVraag      (PlanRegio)	:=	Bestaand/CapaciteitsVraag + Nieuw/CapaciteitsVraag;
			attribute<nrAansl>	NrAansluitingen       (PlanRegio)	:=	Bestaand/NrAansluitingen + Nieuw/NrAansluitingen;

			attribute<Eur>		Ki_WarmteMeter        (PlanRegio)	:=	Kostenkentallen/K_Wmtr_vast * NrAansluitingen + Kostenkentallen/K_Wmtr_var * CapaciteitsVraag;
			attribute<Eur_yr>	Kj_WarmteMeter_oh     (PlanRegio)	:=	Ki_WarmteMeter * Kengetallen/Onderhoud/R_Inst_Onderhoud;
			attribute<Eur_yr>	Kj_WarmteMeter_adm    (PlanRegio)	:=	Ki_WarmteMeter * Kengetallen/Onderhoud/R_Inst_Admin;
			
			attribute<Eur>		Ki_Totaal             (PlanRegio)	:=	bestaand/Ki_Totaal + nieuw/Ki_Totaal + Ki_WarmteMeter;
			attribute<Eur_yr>	Kj_Onderhoud          (PlanRegio)	:=	bestaand/Kj_Onderhoud + nieuw/Kj_Onderhoud + Kj_WarmteMeter_oh  + Kj_CO2Installatie_oh + Kj_CO2Installatie;
			attribute<Eur_yr>	Kj_Admin              (PlanRegio)	:=	bestaand/Kj_Admin     + nieuw/Kj_Admin     + Kj_WarmteMeter_adm + Kj_CO2Installatie_adm;
		}

		container SecundairNet
		{
			unit<uint8>			Prijzen_elec					:= Prijzen/Elektriciteit/Staffel;
			parameter<classifications/gebruiksgrootteklasse>	wd_gebruiksgrootteklasse_rel := last(ID(Prijzen_elec)), Descr = "elektriciteitstarief voor wijkdistributeur";
			container			LeidingKosten					:=	BuisKosten(PlanRegio, P_sec * 0.001[ MW / kW]);
			
			attribute<KW>		P_sec          (PlanRegio)	:=	(Wonen/bw/P_sec + Wonen/nw/P_sec + Utiliteit/CapaciteitsVraag/Totaal + GlasTuinbouw/CapaciteitsVraag) / (1d - Efficiencies/Vermogenverlies_MT);
			attribute<m>		L_hoofdleiding (PlanRegio)	:=	0.25 * /Invoer/RuimtelijkeData/buislengte/per_buurt/L_dist, Descr = "aantal meter distributieleidingen (hoofd)", Source = "aanlevering GreenVis februari 2020";
			attribute<Eur>		K_hoofdleiding (PlanRegio)	:=	L_hoofdleiding * Leidingkosten/K_m;
			attribute<m>		L_zijleiding   (PlanRegio)	:=	0.75 * /Invoer/RuimtelijkeData/buislengte/per_buurt/L_dist, Descr = "aantal meter distributieleidingen (zij)", Source = "aanlevering GreenVis februari 2020";
			attribute<Eur>		K_zijleiding   (PlanRegio)	:=	L_zijleiding * Leidingkosten/K_m;
			attribute<Eur>		K_WOS          (PlanRegio)	:=	Efficiencies/HulpketelVermogensaandeel * P_sec * Kostenkentallen/K_WOS;
			attribute<Eur>		Ki_Totaal      (PlanRegio)	:=	K_hoofdleiding + K_zijleiding + K_WOS;
			attribute<m>		L_transport    (Planregio)	:=	L_hoofdleiding + L_zijleiding;
			attribute<Eur_yr>	Kj_Onderhoud   (PlanRegio)	:=	(K_hoofdleiding + K_zijleiding) * Kengetallen/Onderhoud/R_Sec_onderhoud + K_WOS * Kengetallen/Onderhoud/R_WOS_onderhoud;
			attribute<Eur_yr>	Kj_Admin       (PlanRegio)	:=	(K_hoofdleiding + K_zijleiding) * Kengetallen/Onderhoud/R_Sec_admin     + K_WOS * Kengetallen/Onderhoud/R_WOS_admin;
			
			attribute<GJ_yr>	V_wd_elek      (PlanRegio)	:=	V_warmte * Efficiencies/Pompenergie_Wnet,								Descr = "elektriciteitsverbruik distributiepompen";	
			attribute<Eur_yr>	Kj_wd_elek     (PlanRegio)	:=	V_wd_elek * Prijzen_elec/KGJ_eindgebruik_excl	[wd_gebruiksgrootteklasse_rel],	Descr = "jaarlijkse elektriciteitskosten collectief eindgebruiker";
			attribute<Eur_yr>	Km_wd_elek     (PlanRegio)	:=	V_wd_elek * Prijzen_elec/KGJ_maatschappelijk	[wd_gebruiksgrootteklasse_rel],	Descr = "jaarlijkse elektriciteitskosten collectief maatschappelijk";
			attribute<Eur_yr>	Kj_wd_elek_EH  (PlanRegio)	:=	V_wd_elek * Prijzen_elec/KGJ_EnergieHeffing		[wd_gebruiksgrootteklasse_rel],	Descr = "energieheffing over elektriciteitsverbruik pompenergie";
			attribute<Eur_yr>	Kj_wd_elek_CO2 (PlanRegio)	:=	V_wd_elek * Prijzen_elec/KGJ_CO2Heffing			[wd_gebruiksgrootteklasse_rel],	Descr = "co2heffing over elektriciteitsverbruik pompenergie";
		}
		container PrimairNet
		{
			container			LeidingKosten				:=	BuisKosten(PlanRegio, P_transport * 0.001[ MW / kW]);
			attribute<kw>		P_transport    (PlanRegio)	:=	SecundairNet/P_sec;
			attribute<kw>		P_ASW          (PlanRegio)	:=	SecundairNet/P_sec;												
		}
		attribute<GJ_yr>	V_WarmteVraag    (PlanRegio) := ='add('+AsItemList('sum(WarmteVraag/'+BCname+'/V_Warmte, WarmteVraag/'+BCname+'/BO/PlanRegio_rel)' )+')';
		attribute<GJ_yr>	V_Warmte         (PlanRegio) :=	V_WarmteVraag / (1d - Efficiencies/Leidingverlies_LT * Leercurves/Verl/Curve);
		attribute<GJ_yr>	V_LeidingVerlies (PlanRegio) :=	V_Warmte - V_WarmteVraag;
		attribute<GJ_yr>	V_WarmtePrimair  (PlanRegio) :=	V_Warmte;

		container Bijstook
		{
			attribute<GJ_yr>	V_Vraag       (PlanRegio) :=	V_Warmte,			Descr = "volumevraag naar warmte die jaarlijks wordt geleverd uit de hulpketel";
			attribute<GJ_yr>	V_Bijstook    (PlanRegio) :=	V_Vraag / Efficiencies/Efficiency_piekketel,				Descr = "volumevraag naar warmte uit hulpketel na correctie voor efficientiefactor", Source = "FO v7a F 35";
			attribute<GJ_yr>	V_Verlies     (PlanRegio) :=	V_Bijstook - V_Vraag,										Descr = "gedeelte van de benodigde energie in de hulpketel dat verloren gaat in de omzetting naar warmte";
			attribute<Eur_yr>	Kj_wd_gas     (PlanRegio) :=	Prijzen/AardGas/Bijstook/KGJ_eindgebruik_excl * V_Bijstook,	Descr = "eindgebruikerskosten voor inkoop aardgas voor bijstook ik hulpketels";
			attribute<Eur_yr>	Km_wd_gas     (PlanRegio) :=	Prijzen/AardGas/Bijstook/KGJ_maatschappelijk  * V_Bijstook,	Descr = "maatschappelijke kosten voor inkoop aardgas voor bijstook in hulpketels";
			attribute<Eur_yr>	Kj_wd_gas_EH  (PlanRegio) :=	prijzen/Aardgas/Bijstook/KGJ_EnergieHeffing   * V_Bijstook,	Descr = "energiebelasting betaald over inkoop aardgas voor bijstook in hulpketels door eindgebruikers, als onderdeel van Kj_wd_gas";
			attribute<Eur_yr>	Kj_wd_gas_CO2 (PlanRegio) :=	prijzen/Aardgas/Bijstook/KGJ_CO2Heffing       * V_Bijstook,	Descr = "CO2 heffing betaald over inkoop aardgas voor bijstook in hulpketels door eindgebruikers, als onderdeel van Kj_wd_gas";
		}

		attribute<Eur>    Ki_id           (PlanRegio) := Wonen/Ki_id + Utiliteit/Ki_Totaal + Glastuinbouw/Ki_Totaal, Source = "FO v7a F 2";
		attribute<Eur>    Ki_wd           (PlanRegio) := SecundairNet/Ki_Totaal + Wonen/Ki_wd, Source = "FO v7a F 2";

		attribute<Eur_yr> Kj_id_oh        (PlanRegio) := Leercurves/OenM/Curve * Wonen/Kj_id_oh;
		attribute<Eur_yr> Kj_wd_oh        (PlanRegio) := Leercurves/OenM/Curve * (Wonen/Kj_wd_oh + Utiliteit/Kj_Onderhoud + Glastuinbouw/Kj_Onderhoud + SecundairNet/Kj_Onderhoud);
		attribute<Eur_yr> Kj_Onderhoud    (PlanRegio) := Kj_wd_oh + Kj_id_oh;
		attribute<Eur_yr> Kj_wd_elek      (PlanRegio) := SecundairNet/Kj_wd_elek;
		attribute<Eur_yr> Km_wd_elek      (PlanRegio) := SecundairNet/Km_wd_elek;
		attribute<Eur_yr> Kj_wd_gas       (PlanRegio) := Bijstook/Kj_wd_gas;
		attribute<Eur_yr> Km_wd_gas       (PlanRegio) := Bijstook/Km_wd_gas;
		attribute<Eur_yr> Kj_lv_adm       (PlanRegio) := Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_lv_Admin * (opbrengsten/JaarlijksD/Oj_VastRecht * 1[yr]);
		attribute<Eur_yr> Kj_wd_adm       (PlanRegio) := Leercurves/OenM/Curve * (Wonen/Kj_wd_adm + Utiliteit/Kj_Admin + Glastuinbouw/Kj_Admin + SecundairNet/Kj_Admin);

		attribute<nrAansl>nrAansl_d       (PlanRegio) := ='add('+AsItemList(replace('sum(Bebouwing/@BC@/nrAansluitingen * KanGebiedsOptie/@BC@, Bebouwing/@BC@/PlanRegio_rel)', '@BC@', BCname))+')';
		attribute<nrAansl>nrAansl_g       (PlanRegio) := ='add('+AsItemList(replace('sum(Bebouwing/@BC@/nrAansluitingen * KanGebiedsOptie/@BC@, Bebouwing/@BC@/PlanRegio_rel)', '@BC@', BCname))+')';
		attribute<nrAansl>nrAansl_e       (PlanRegio) := ='add('+AsItemList(replace('sum(Bebouwing/@BC@/nrAansluitingen, Bebouwing/@BC@/PlanRegio_rel)', '@BC@', BCname))+')';
		attribute<m>      L_distr_g       (PlanRegio) := nrAansl_g * Kengetallen/Constanten/L_di_gem;
		attribute<m>      L_distr_e       (PlanRegio) := nrAansl_e * Kengetallen/Constanten/L_di_gem;
		attribute<m>      L_infra_g       (PlanRegio) := L_distr_g + SecundairNet/L_transport;
		attribute<m>      L_infra_e       (PlanRegio) := L_distr_e + SecundairNet/L_transport;

		attribute<Eur_yr> Kj_Totaal       (PlanRegio) := Kj_Onderhoud + Kj_wd_gas + Kj_wd_elek + Kj_wd_adm + Kj_lv_adm + Kj_ge_hv, Source = "FO v7a F 2";
		attribute<Eur_yr> Km_Totaal       (PlanRegio) := Kj_Onderhoud + Km_wd_gas + Km_wd_elek + Kj_wd_adm + Kj_lv_adm ;
	}

	attribute<Eur   > Oi_Aansluitbijdrage (PlanRegio) := Opbrengsten/EenmaligD/Oi_Totaal;
	attribute<Eur_yr> Oji_wd_KL           (PlanRegio) := Oi_Aansluitbijdrage * NCW/wd28/StartDiscountFactor * NCW/wd28/AnnualisationFactor;
	attribute<Eur_yr> Kji_ge_KL           (PlanRegio) := Ki_ge_Bruto * ( NCW/bw28/StartDiscountFactor * NCW/bw28/AnnualisationFactor ) ;
	attribute<Eur_yr> Kji_id_KL           (PlanRegio) := Ki_id_Bruto * ( NCW/id28/StartDiscountFactor * NCW/id28/AnnualisationFactor ) ;

	attribute<Eur>    Ki_ge_ov            (PlanRegio) := KostenD/Wonen/Ki_ge_ov;
	attribute<Eur>    Ki_ge_pm            (PlanRegio) := KostenD/Wonen/Ki_ge_pm;
	attribute<Eur_yr> Kj_ge_hv            (PlanRegio) := KostenD/Wonen/Kj_ge_hv;
	attribute<Eur>    Ki_ge_Bruto         (PlanRegio) := Ki_ge_ov + Ki_ge_pm;
	attribute<Eur   > Ki_id_Bruto         (PlanRegio) := KostenD/Ki_id;
	attribute<Eur   > Ki_wd_Bruto         (PlanRegio) := KostenD/Ki_wd;
	attribute<Eur_yr> Kji_ge_ov           (PlanRegio) := Ki_ge_ov    * ( NCW/bw28/StartDiscountFactor * NCW/bw28/AnnualisationFactor ) ;
	attribute<Eur_yr> Kji_ge_pm           (PlanRegio) := Ki_ge_pm    * ( NCW/bw28/StartDiscountFactor * NCW/bw28/AnnualisationFactor ) ;
	attribute<Eur_yr> Kji_id              (PlanRegio) := Ki_id_Bruto * ( NCW/id28/StartDiscountFactor * NCW/id28/AnnualisationFactor ) ;
	attribute<Eur_yr> Kji_wd              (PlanRegio) := Ki_wd_Bruto * ( NCW/wd28/StartDiscountFactor * NCW/wd28/AnnualisationFactor ) ;
	attribute<Eur_yr> Kmi_ge_ov           (PlanRegio) := Ki_ge_ov    * ( NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor ) ;
	attribute<Eur_yr> Kmi_ge_pm           (PlanRegio) := Ki_ge_pm    * ( NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor ) ;
	attribute<Eur_yr> Kmi_id              (PlanRegio) := Ki_id_Bruto * ( NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor ) ;
	attribute<Eur_yr> Kmi_wd              (PlanRegio) := Ki_wd_Bruto * ( NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor ) ;
	
	attribute<Eur>    Oi_ge_subsidie      (PlanRegio) := Ki_ge_ov * SpecifiekeInstellingen/Beleid/EIA/E_bw/Rs_OngeriefsVergoeding + Ki_ge_pm * SpecifiekeInstellingen/Beleid/EIA/E_bw/Rs_ProjectManagement;
	attribute<Eur>    Oi_id_subsidie      (PlanRegio) := Ki_id_Bruto * SpecifiekeInstellingen/Beleid/EIA/id;
	attribute<Eur>    Oi_wd_subsidie      (PlanRegio) := Ki_wd_Bruto * SpecifiekeInstellingen/Beleid/EIA/wd;
	attribute<Eur_yr> Oji_ge_EIA          (PlanRegio) := Oi_ge_subsidie * ( NCW/bw28/StartDiscountFactor * NCW/bw28/AnnualisationFactor ) ;
	attribute<Eur_yr> Oji_id_EIA          (PlanRegio) := Oi_id_subsidie * ( NCW/id28/StartDiscountFactor * NCW/id28/AnnualisationFactor ) ;
	attribute<Eur_yr> Oji_wd_EIA          (PlanRegio) := Oi_wd_subsidie * ( NCW/wd28/StartDiscountFactor * NCW/wd28/AnnualisationFactor ) ;
	attribute<Eur_yr> Omi_ge_EIA          (PlanRegio) := Oi_ge_subsidie * ( NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor ) ;
	attribute<Eur_yr> Omi_id_EIA          (PlanRegio) := Oi_id_subsidie * ( NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor ) ;
	attribute<Eur_yr> Omi_wd_EIA          (PlanRegio) := Oi_wd_subsidie * ( NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor ) ;
	
	attribute<Eur_yr> Kji_ge_base         (PlanRegio) := (Kji_ge_ov + Kji_ge_pm - Oji_ge_EIA) + Kj_ge_hv;
	attribute<Eur_yr> Kji_id_base         (PlanRegio) := (Kji_id - Oji_id_EIA) + KostenD/Kj_id_oh;
	attribute<Eur_yr> Kji_wd_base         (PlanRegio) := (Kji_wd - Oji_wd_EIA) + KostenD/Kj_wd_oh + KostenD/Kj_wd_adm;
	attribute<Eur_yr> Oe_ge_subsidie      (PlanRegio) := Kji_ge_base * SpecifiekeInstellingen/Beleid/EEA/ge;
	attribute<Eur_yr> Oe_id_subsidie      (PlanRegio) := Kji_wd_base * SpecifiekeInstellingen/Beleid/EEA/id;
	attribute<Eur_yr> Oe_wd_subsidie      (PlanRegio) := Kji_wd_base * SpecifiekeInstellingen/Beleid/EEA/wd;
	attribute<Eur_yr> Kji_ge_Netto        (PlanRegio) := Kji_ge_base - Oe_ge_subsidie;
	attribute<Eur_yr> Kji_id_Netto        (PlanRegio) := Kji_id_base - Oe_id_subsidie;
	attribute<Eur_yr> Kji_wd_Netto        (PlanRegio) := Kji_wd_base  + KostenD/Kj_wd_gas + KostenD/Kj_wd_elek - Oe_wd_subsidie - Oji_wd_KL;
	attribute<Eur_yr> Kji_Netto           (PlanRegio) := Kji_ge_Netto + Kji_id_Netto + Kji_wd_Netto + KostenD/Kj_lv_adm;

	attribute<Eur_yr> Oji_wd              (PlanRegio) := Oji_wd_KL + Opbrengsten/JaarlijksD/Oj_Totaal;
	attribute<Eur_yr> Oji_NettoD          (PlanRegio) := Opbrengsten/JaarlijksD/Oj_Totaal - Kji_Netto;
	attribute<bool>   PartialRendabel     (PlanRegio) := Oji_NettoD > 0[Eur_yr];
	attribute<Eur_yr> Km_totaalD          (PlanRegio) := KostenD/Km_Totaal;
	
	attribute<MW>     CapaciteitsVraagD   (PlanRegio) := KostenD/PrimairNet/P_transport * 0.001 [mw / kw];
	attribute<GJ_yr>  V_WarmtePrimairD    (PlanRegio) := KostenD/V_WarmtePrimair;
	attribute<KG_yr>  CO2_BijstookD       (PlanRegio) := Prijzen/AardGas/CO2_GJ * KostenD/Bijstook/V_Bijstook;
}
