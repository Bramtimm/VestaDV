//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
// Deze file bevat een basis voor de Vesta instellingen die vanuit iedere run           //
// geincludeerd wordt en generiek of per zichtjaar kan worden overruled                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Basis: Using = "Units"
{
	parameter<string> PlanRegioNaam := // te kiezen uit onderstaande opties, let op, bij blokken moet HasStartingArcSet False zijn en Rapportage/RapportageRegio op NL worden ingesteld
		'buurt'; // of 'gemeente' 'blok500m' 'blok1km''blok2km'

	unit<uint32> PlanRegio := ='/Invoer/RuimtelijkeData/StudieGebied/'+ Invoer/SpecifiekeInstellingen/PlanRegioNaam, isHidden = "True";

	parameter<bool> HasStartingArcSet := false; // Moet False zijn voor alle blok PlanRegioNaam configuraties

	container Rapportage
	{
		unit<uint32> Regio := = 
			(Invoer/StudieGebied == 'NL') //'NL', 'Provincie', 'Gemeente', 'Wijk'  Moet NL zijn voor alle blok PlanRegioNaam configuraties
			? 'Geography/RegioIndelingen/Energieregio' 
			: (#Invoer/RuimtelijkeData/StudieGebied/Gemeente == 1)
				? 'Invoer/RuimtelijkeData/StudieGebied/buurt'
				: 'Invoer/RuimtelijkeData/StudieGebied/gemeente';
			
		parameter<Classifications/WoningBestaandRapGroep> WoningBestaandRapGroep_rel: [ 3 ];
		parameter<Classifications/UtilBestaandRapGroep> UtilBestaandRapGroep_rel: [ 3 ];
	}

	parameter<Percent> VAT    := 21[Percent]                , Descr = "BTW percentage";
	parameter<Percent> VAT_gv := 0.5 * (21.0 + 9.0)[Percent], Descr = "BTW percentate op gebouverbetering";
	
	// moet verwijzen naar een geldige .csv trio in %projdir%/data dwz: *filename*_Elek.csv en *filename*_Gas.csv en *filename*_OverigeKosten.csv
	
	parameter<string> prijzenbron := '20190725_Energieprijzen_KEV2019', Descr = "Energieprijzen in het basispad van de Klimaat en Energie Verkenning 2019 (PBL)";		
//	parameter<string> prijzenbron := '20190725_Energieprijzen_KEV2019_GG', Descr = "Energieprijzen in het basispad van de Klimaat en Energie Verkenning 2019 (PBL), met vanaf 2030 prijzen zoals notitie groen gas - Startanalyse Leidraad 2019"; 
	
	container Beleid
	{
		parameter<Eur_ton>			Extra_CO2_heffing   :=	000.00 [Eur_ton];
		
		parameter<Eur_yr_Aansl>		Heffingskorting :=	257.54[Eur_yr_Aansl], Descr = "Belastingvermindering per elektriciteitsaansluiting", Source = "https:www.belastingdienst.nl/wps/wcm/connect/bldcontentnl/belastingdienst/zakelijk/overige_belastingen/belastingen_op_milieugrondslag/tarieven_milieubelastingen/tabellen_tarieven_milieubelastingen?projectid=6750bae7%2D383b%2D4c97%2Dbc7a%2D802790bd1110";
		unit<uint32>				TypeInfoList    :=	invoer/Kengetallen/WarmteBronnen/MetaData/TypeInfoList;
		
		container EIA: Descr = "Investeringssubsidie: bepaald percentage van een investering wordt door de overheid betaald"
		{
			container EigenarenBasis 
			{
				parameter<float64>	R_SplitIncentiveFactor :=	   0.8       ,	Descr = "aandeel van vermeden kosten die de gebouweigenaar ontvangt in plaats van de gebruiker";
				parameter<float64>	Rs_LokaleOpwekking     :=	   0.0       ,	Descr = "subsidie op hWP, ZonPV, zonneboiler, mWKK";
				parameter<float64>	Rs_GebouwVerbetering   :=	   0.0       ,	Descr = "subsidie op gebouwverbetering incl eWP en EWV";
				parameter<float64>	Rs_OngeriefsVergoeding :=	   0.0       ,	Descr = "subsidie op ongeriefsvergoeding tbv gebiedsoptie";
				parameter<float64>	Rs_ProjectManagement   :=	   0.0       ,	Descr = "subsidie op projectmanagement   tbv gebiedsoptie";
				parameter<Eur>		ISDE_eWP               :=	1750.00 [Eur],	Descr = "eenmalige ISDE aanschafsubsidie op elektrische warmtepompen (spreiding van 1000 tot 2500)", Source = "https://www.rvo.nl/subsidies-regelingen/investeringssubsidie-duurzame-energie-isde/apparaten-isde/warmtepompen";
			}
			container E_bw := EigenarenBasis;
			container E_nw := EigenarenBasis;
			container E_bu := EigenarenBasis;
			container E_nu := EigenarenBasis;
			container E_bt := EigenarenBasis;
			container E_nt := EigenarenBasis;

			parameter<float64>	id                := 0.0,						Descr = "Investeringssubsidie inpandige distributie als fractie van de investering";
			parameter<float64>	wd                := 0.0,						Descr = "Investeringssubsidie wijkdistributie als fractie van de investering";
			parameter<float64>	pt                := 0.0,						Descr = "Investeringssubsidie primair transport als fractie van de investering";
			parameter<float64>	WKO               := 0.0,						Descr = "Investeringssubsidie opwekking met WKO als fractie van de investering";
			parameter<float64>	LT                := 0.0,						Descr = "investeringssubsidie opwekking voor lage temperatuur warmtenetten met puntbron";
			attribute<float64>	ow (TypeInfoList) := const(0.0, TypeInfoList),	Descr = "Investeringssubsidie opwekking met MT-bronnen als fractie van de investering";
		}

		container EEA: Descr = "SDE en  Exploitatiesubsidies: per geleverde GJ of op O&M:.per zichtjaar in te stellen"
		{
			container Kosten
			{
				container Basis
				{
					parameter<float64>	Rs_LokaleOpwekking   := 0.0,	Descr = "percentage op totale OenM kosten voor lokale opwekking";
					parameter<float64>	Rs_GebouwVerbetering := 0.0,	Descr = "percentage op totale OenM kosten voor gebouwverbetering";
					parameter<float64>	S_Leverancier        := 0.0,	Descr = "percentage op totale OenM kosten voor warmteleveranciers";
					parameter<float64>	S_OenM               := 0.0,	Descr = "percentage op totale OenM kosten voor individuele gebouwen";
				}
			}
			parameter<float64>	ge       :=	0.0,			Descr = "exploitatiesubsidie O&M tbv gebouweigenaren";
			parameter<float64>	id       :=	0.0,			Descr = "exploitatiesubsidie O&M inpandige distributie";
			parameter<float64>	wd       :=	0.0,			Descr = "exploitatiesubsidie O&M wijkdistributie 0.20 = 20% subsidie op wijkdistributie investeringen";
			parameter<float64>	pt       :=	0.0,			Descr = "exploitatiesubsidie O&M primaire transportleidingen";
			parameter<float64>	WKO      :=	0.0,			Descr = "exploitatiesubsidie O&M WKO en TEO systemen";
			parameter<float64>	LT       :=	0.0,			Descr = "exploitatiesubsidie O&M kosten lage temperatuur warmtenetten";	
			attribute<float64>	ow  (TypeInfoList) :=	const(0.0, TypeInfoList)         ,	Descr = "exploitatiesubsidie O&M voor MT-warmteopwekking";
			
			parameter<Eur_GJ>	SDE_LT   :=	0.0[Eur_GJ],	Descr = "productiesubsidie lage temperatuur warmtenetten met puntbron";	
			parameter<Eur_GJ>	SDE_WKO  :=	0.0[Eur_GJ],	Descr = "productiesubsidie lage temperatuur warmtenetten met WKO en evt. TEO";	
			attribute<Eur_GJ>	SDE      (TypeInfoList) :	[
											0000.0000,		//"STEG",
											0000.0000,		//"Gasturbine", 
											0000.0000,		//"Conventioneel",
											0000.0000,		//"Kolen",
											0000.0000,		//"KVSTEG",
											0000.0000,		//"Gasmotor",
											0000.0000,		//"WijkWKK",
											0000.0000,		//"Industrie",
											0000.0000,		//"Raffinaderij",
											0000.0000,		//"Kern",
											0020.8333,	//"Geothermie", 0.052 € & 0.098 € / kwh, Source : Advies SDE+ 2019 https://www.pbl.nl/sites/default/files/cms/publicaties/pbl-2018-eindadvies-basisbedragen-SDE-plus-2019_3342.pdf - 6.1 Geothermie . 500 meter en <4000 meter (voor 50%, overige 50% = zonder basislast
											0000.0000,		//"AVI",
											0000.0000,		//"BMC",
											0014.7222,	//"BioWKK", 0.053 € / kwh, Source : Advies SDE+ 2019 https://www.pbl.nl/sites/default/files/cms/publicaties/pbl-2018-eindadvies-basisbedragen-SDE-plus-2019_3342.pdf - 8.4: Ketel op vaste of vloeibare biomassa 0,5 - 5 MWth
											0000.0000		//"Onbekend"
															] ,	Descr = "productiesubsidie SDE voor MT-warmteopwekking in euro per gigajoule";
		}
	}
	
	container VraagKentallen
	{
		container BestaandeWoning
		{
			parameter<Units/Ratio> KoudeInvulling  := 0.0[Ratio], Descr = "in hoeverre wordt de koudevraag van deze objecten nu ingevuld (0.0 = 0% invulling, 1.0 = 100% invulling";
			attribute<Units/Ratio> Deelname       (Classifications/WoningtypeBestaand) := const(1[Units/Ratio],Classifications/WoningtypeBestaand);
			container Opbrengsten
			{
				parameter<Eur_yr_Aansl>	VastrechtTarief_min := NMDA_Prijzen/Vastrecht/Maximum2019;
				parameter<Eur_yr_Aansl>	VastrechtTarief_max := VastrechtTarief_min;
				attribute<Eur_Aansl>	AansluitTarief_min (Classifications/WoningtypeBestaand) := const(NMDA_Prijzen/Aansluitbijdrage/Maximum2019, Classifications/WoningtypeBestaand);
				attribute<Eur_Aansl>	AansluitTarief_max (Classifications/WoningtypeBestaand) := AansluitTarief_min;
			}
		}

		container NieuwbouwWoning
		{
			parameter<Units/Ratio> KoudeInvulling  := 1.0[Ratio], Descr = "in hoeverre wordt de koudevraag van deze objecten nu ingevuld (0.0 = 0% invulling, 1.0 = 100% invulling";
			attribute<Units/Ratio> Deelname       (Classifications/WoningtypeNieuwbouw) := const(1[Units/Ratio],Classifications/WoningtypeNieuwbouw); // fractie deelnemers
			container Opbrengsten
			{
				parameter<Eur_yr_Aansl>	VastrechtTarief_min := NMDA_Prijzen/Vastrecht/Maximum2019;
				parameter<Eur_yr_Aansl>	VastrechtTarief_max := VastrechtTarief_min;
				attribute<Eur_Aansl>	AansluitTarief_min (Classifications/WoningtypeNieuwbouw): [4500, 4500, 4500, 4500, 4500, 4500, 4500, 4500, 4500, 4500, 4500, 4500, 4500, 4500, 4500];
				attribute<Eur_Aansl>	AansluitTarief_max (Classifications/WoningtypeNieuwbouw): [5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500];
			}
		}

		container BestaandeUtil
		{
			parameter<Units/Ratio> KoudeInvulling  := 1.0[Ratio], Descr = "in hoeverre wordt de koudevraag van deze objecten nu ingevuld (0.0 = 0% invulling, 1.0 = 100% invulling";
			attribute<Units/Ratio> Deelname       (Classifications/UtilTypeBestaand) := const(1[Units/Ratio],Classifications/UtilTypeBestaand);
			container Opbrengsten
			{
				parameter<Eur_kW_yr>	VastrechtTarief_min :=		108.79[Eur_kw_yr], Source = "In euro2018: Fo v7a F 11";
				parameter<Eur_kW_yr>	VastrechtTarief_max :=		VastrechtTarief_min;
				attribute<Eur_kW>		AansluitTarief_min (Classifications/UtilTypeBestaand):=		const( 56.17[Eur_kW], Classifications/UtilTypeBestaand);
				attribute<Eur_kW>		AansluitTarief_max (Classifications/UtilTypeBestaand):=		const(112.34[Eur_kW], Classifications/UtilTypeBestaand);
			}
		}

		container NieuwbouwUtil
		{
			parameter<Units/Ratio> KoudeInvulling  := 1.0[Ratio], Descr = "in hoeverre wordt de koudevraag van deze objecten nu ingevuld (0.0 = 0% invulling, 1.0 = 100% invulling";
			attribute<Units/Ratio> Deelname       (Classifications/UtilTypeNieuwbouw) := const(1[Units/Ratio],Classifications/UtilTypeNieuwbouw); // fractie deelnemers
			container Opbrengsten
			{
				parameter<Eur_kW_yr>	VastrechtTarief_min :=		108.79[Eur_kw_yr], Source = "In euro2018: Fo v7a F 11";
				parameter<Eur_kW_yr>	VastrechtTarief_max :=		VastrechtTarief_min;
				attribute<Eur_kW>		AansluitTarief_min (Classifications/UtilTypeNieuwbouw) :=		const( 56.17[Eur_kW],Classifications/UtilTypeNieuwbouw);
				attribute<Eur_kW>		AansluitTarief_max (Classifications/UtilTypeNieuwbouw) :=		const(112.35[Eur_kW],Classifications/UtilTypeNieuwbouw);
			}
		}

		container BestaandeGlTb
		{
			parameter<Units/Ratio> KoudeInvulling  := 0.0[Ratio], Descr = "in hoeverre wordt de koudevraag van deze objecten nu ingevuld (0.0 = 0% invulling, 1.0 = 100% invulling";
			attribute<Units/Ratio> Deelname       (Classifications/GLTB) := const(1[Units/Ratio],Classifications/GLTB);
			container Opbrengsten
			{
				parameter<Eur_yr_Aansl> VastrechtTarief_min := NMDA_Prijzen/Vastrecht/Maximum2019;
				parameter<Eur_yr_Aansl> VastrechtTarief_max := VastrechtTarief_min;
				attribute<Eur_Aansl> AansluitTarief_min (Classifications/GLTB) := const(0[Eur_Aansl],Classifications/GLTB);
				attribute<Eur_Aansl> AansluitTarief_max (Classifications/GLTB) := AansluitTarief_min;
			}
		}

		container NieuwbouwGlTb
		{
			parameter<Units/Ratio> KoudeInvulling  := 0.0[Ratio], Descr = "in hoeverre wordt de koudevraag van deze objecten nu ingevuld (0.0 = 0% invulling, 1.0 = 100% invulling";
			attribute<Units/Ratio> Deelname       (Classifications/GLTB) := const(1[Units/Ratio],Classifications/GLTB);
			container Opbrengsten
			{
				parameter<Eur_yr_Aansl> VastrechtTarief_min := NMDA_Prijzen/Vastrecht/Maximum2019;
				parameter<Eur_yr_Aansl> VastrechtTarief_max := VastrechtTarief_min;
				attribute<Eur_Aansl> AansluitTarief_min (Classifications/GLTB) := const(0[Eur_Aansl],Classifications/GLTB);
				attribute<Eur_Aansl> AansluitTarief_max (Classifications/GLTB) := AansluitTarief_min;
			}
			
		}
	}

	container AanbodKentallen := VraagKentallen, Descr = "Blok 3, zie FO $4.2"
	{
		container RestWarmte := VraagKentallen;
		container GeoThermie := VraagKentallen;
		container BioWKK     := VraagKentallen;
		container WijkWKK    := VraagKentallen;
		container WKO        := VraagKentallen
		{
			parameter<Bool> BuitenContour: [false];
		}
		container TEO        := VraagKentallen
		{
			parameter<Bool> BuitenContour: [false];
		}
		container AardGas := VraagKentallen;
		container Lt15_30 := VraagKentallen;
		container Lt15_50 := VraagKentallen;
		container Lt15_70 := VraagKentallen;
		container Lt30_30 := VraagKentallen;
		container Lt30_50 := VraagKentallen;
		container Lt30_70 := VraagKentallen;
	}

	container BAG
	{
		parameter<uint8> IndustrieDoetMee := 1b;
		// 0: in Utilitiet doet alle industrie doet niet mee (dus ook alle vbo die industrie in combinatie met een andere gebruikdoel hebben)
		// 1: in Utiliteit doen vbo's niet mee die alleen een industriefunctie hebben.
		// 2: in Utilitiet doet alle industrie doet mee
	}

	container RuimtelijkeVraag
	{
		container Drager
		{
			parameter<float64> RuimteVerwarming:      [ 1.0 ], Descr = "Schuif om functionele vraag naar ruimteverwarming hoger of lager te schalen (1 = geen schalingsfactor)";
			parameter<float64> Koude:                 [ 1.0 ], Descr = "Schuif om functionele vraag naar koude hoger of lager te schalen (1 = geen schalingsfactor)";
			parameter<float64> WarmWater:             [ 1.0 ], Descr = "Schuif om functionele vraag naar warm water hoger of lager te schalen (1 = geen schalingsfactor)";
			parameter<float64> ElektrischeApparatuur: [ 1.0 ], Descr = "Schuif om functionele vraag naar elektriciteit voor apparatuur hoger of lager te schalen (1 = geen schalingsfactor)";
		}
		container Lokaal
		{
			container Generiek
			{
				container OpwekkingF
				{
					parameter<Ratio> Zon_PV:      [0.0], Descr = "Aandeel van alle mogelijke dakoppervlakken die voor ZonPV worden benut";
					parameter<Ratio> ZonneBoiler: [0.0], Descr = "Aandeel van alle mogelijke dakoppervlakken die voor Zonneboilers worden benut";
					parameter<Ratio> mWKK:        [0.0], Descr = "Aandeel van alle gebruikers dat een micro-WKK heeeft";
					attribute<Ratio> hWP (Classifications/energielabel) := const(0.0, Classifications/energielabel), Descr = "Aandeel van alle gebruikers dat een Hybride warmtepomp heeft";
				}
				
				
				
				container Verbeteringen
				{
					// @USERINPUT: 'Never', 'Always'
					// Letters verwijzen naar kolomheaders in het kentallen-bestand
					parameter<string> S_H_T:    ['Criteria/Never']; // was: Sprong A
					parameter<string> S_H_B:    ['Criteria/Never']; // was: Sprong B
					parameter<string> S_H_AP:   ['Criteria/Never']; // was: Sprong C
					parameter<string> S_T_B:    ['Criteria/Never']; // was: Sprong D
					parameter<string> S_T_AP:   ['Criteria/Never']; // was: Sprong E
					parameter<string> S_B_AP:   ['Criteria/Never']; // was: Sprong F

					// labelsprongen naar B inclusief eWP aan (incl lt-afgiftesysteem)
					parameter<string> S_H_BeWP:  ['Criteria/Never']; // naar A+ met eWP
					parameter<string> S_T_BeWP:  ['Criteria/Never']; // van tussenlabel naar A+ met eWP
					parameter<string> S_B_BeWP:  ['Criteria/Never']; // van B naar A+ met eWP.

					// labelsprongen naar A+ inclusief eWP aan (incl lt-afgiftesysteem)
					parameter<string> S_H_AeWP:  ['Criteria/Never']; // naar A+ met eWP
					parameter<string> S_T_AeWP:  ['Criteria/Never']; // van tussenlabel naar A+ met eWP
					parameter<string> S_B_AeWP:  ['Criteria/Never']; // van B naar A+ met eWP.
					parameter<string> S_AP_AeWP: ['Criteria/Never'];  // van A+ zonder eWP naar A+ met eWP

					// labelsprongen naar A+ inclusief EWV
					parameter<string> S_H_EWV:  ['Criteria/Never']; // naar A+ met EWV
					parameter<string> S_T_EWV:  ['Criteria/Never']; // van tussenlabel naar A+ met EWV
					parameter<string> S_B_EWV:  ['Criteria/Never']; // van B naar A+ met EWV.
					parameter<string> S_AP_EWV: ['Criteria/Never'];  // van A+ zonder eWP naar A+ met EWV

					parameter<bool> SpringMeestRendabel:   [false], Descr = "maak rentabiliteitsafweging tbv bebouwingobject eigenaren indien true";
					parameter<bool> SpringMaatschappelijk: [false], Descr = "maak maatschappelijke rentabiliteitsafweging indien true en SpringMeestRendabel = false";

					parameter<units/yr_uint16> RuimteVerwarmingsJaar : [2020], Descr = "Jaar vanaf wanneer HR107 ketels ingezet worden";
				}
				container Kosten
				{
					parameter<Ratio> LuchtBodemSchuif            := 0.5; // 1.0 = alles LuchtWP, 0.0 = alles BodemWP
					parameter<Ratio> EfficiencySchuif            := 0.5; // 1.0 = maximale efficiency, 0.0 = minimale efficiency
					parameter<Ratio> VerbeterMinMaxSchuif:        [0.5]; // 0.0 = minimale kosten; 1.0 = maximale kosten.
					parameter<Ratio> LeercurveMinMaxSchuif :      [0.5]; // 0.0 = optimistische leercurve; 1.0= pessimistische leercurve
					parameter<Ratio> LeercurveGebruikSchuif:      [1.0]; // 0.0 = kosten constant; 1.0 = Leercurve geheel in gebruik
					parameter<Ratio> IndividueleVerwarmingSchuif: [0.846]; // 0.0 = alle meergezinswoningen hebben blokverwarming; 1.0 = alle meergezinswonigen hebben individuele verwarming
				}
				container Opbrengsten
				{
					// De volgende schuif heeft betrekking op de opbrengsten voor de energieproducenten, dus Vastrecht en Aansluitbijdrage. 
					// Dat zijn kosten voor de eindgebruikers.
					// hoge opbrengsten zijn zo gekoppeld aan lage kosten, dus optimistisch voor de sector, 
					// danwel lage opbrengsten en hoge kosten: pessimistisch. 
					// Kan ook los geschoven worden
					parameter<Ratio> MinMaxSchuif                       := 1.0[Ratio] - Kosten/VerbeterMinMaxSchuif;
					parameter<Ratio> HuurVerlagingBijGebiedsOptieSchuif := 0.5[Ratio]; // @USERINPUT: 0.0 is geen huurverlaging; 1.0 is volledige verlaging (E 160,-) per woning
				}
			}

			unit<uint32> sprongtabel {
				attribute<string> BAG_VBO_ID;
				attribute<string> Sprong;
			}
			container BestaandeWoning := Generiek;
			container BestaandeUtil   := Generiek;
			container BestaandeGlTb   := Generiek;
			container NieuwbouwWoning := BestaandeWoning;
			container NieuwbouwUtil   := BestaandeUtil;
			container NieuwbouwGlTb   := BestaandeGlTb;
		}
	}

	container Voorkeuren
	{
		container GebiedsOpties
		{
			parameter<uint32> Aantal: [ 0 ]; // @USERINPUT
		}

		parameter<float64>	MinderDanAndersFactor :=	1.0        ,		Descr = "niet minder dan anders: zet op bijvoorbeeld 0.9 voor 10% korting op de volgens de WarmteWet berekende prijs";
		parameter<bool>		IsVasteWarmtePrijs    :=	false      ,		Descr = "indien true: er geldt een vaste warmteprijs";
		parameter<Eur_GJ>	VasteWarmtePrijs      :=	25[Eur_GJ] ,		Descr = "wordt alleen gebruikt indien IsVasteWarmtePrijs";
		parameter<float64>	GroenGasFactor        :=	0.006      ,		Descr = "aandeel van de aardgasvraag die door groengas wordt ingevuld(zonder Co2 uitstoot)", Source = "Functioneel Ontwerp 4.0";//TODO paginanummer
		
		container Afweging
		{
			parameter<Bool>		LTversusWP   :=		false        ,	Descr = "indien true worden maatschappelijke kosten van eWP opgeteld bij contributiemarge TEO, LT en WKO (bij woningen met B of AP schillabel";
			parameter<Bool>		AlwaysBIO    :=		false        ,	Descr = "indien true worden krijgen alle buurten bioWKK opgelegd ongeacht de rentabiliteitsafweging";
			parameter<Bool>		AlwaysGEO    :=		false        ,	Descr = "indien true worden krijgen alle buurten geothermie opgelegd ongeacht de rentabiliteitsafweging";
			parameter<Bool>		GEOcontour   :=		true         ,	Descr = "indien true worden bij geothermieafwegingen de contour voor kansgebieden gebruikt, bij false worden alle gebieden als kansrijk aangemerkt";
			parameter<Bool>		IsGroenGas   :=		false        ,	Descr = "zet dit op true indien _GG prijzen worden gebruikt (t.b.v. rapportage PlanregioResults)";
			parameter<Eur_gj>	OnrendabelMT :=		0000[Eur_gj] ,	Descr = "extra ruimte om MT restwarmtenetten aan te leggen ondanks onrendabele toppen (als vervanging voor SDE)";
		}
	}

	// vooalsnog beschikbaar: van 2 WLO scenario's afgeleide resultaten nieuwbouw en sloop projecties t/m 2050, te weten
	// - %SourceDataProjDir%/RO/20151123_RO_WLO_hoog_concentratie  &  %SourceDataProjDir%/RO/20151123_RO_WLO_laag_spreiding
	parameter<string>		WloScenarioFolder     :=	'%SourceDataProjDir%/RO/20151123_RO_WLO_hoog_concentratie',	url="%sourceDataProjDir%/RO/20180802_MutatieRecept.htm";
	
	container Investering
	{
		parameter<Yr> BeginOpbrengstJaar : [ 2];
		parameter<Yr> EindOpbrengstJaar  : [30];
	}

	container Discontovoet
	{
		parameter<Percent_yr>   mr :=	3.0[Percent_yr],	Descr = "Maatschappelijke discontovoet";
		parameter<Percent_yr>   ow :=	6.0[Percent_yr],	Descr = "Discontovoet voor opwekking door energieproducenten; kan per aanbod-technologie worden overruled";
		parameter<Percent_yr>   wd :=	6.0[Percent_yr],	Descr = "Discontovoet voor wijkdistributeurs";
		parameter<Percent_yr>   pt :=	6.0[Percent_yr],	Descr = "Discontovoet voor primaire transporteurs";
		parameter<Percent_yr>   id :=	6.0[Percent_yr],	Descr = "Discontovoet voor inpandige distributeurs";
		parameter<Percent_yr> E_bw :=	5.5[Percent_yr],	Descr = "Discontovoet voor eigenaars van bestaande woningen";
		parameter<Percent_yr> E_nw :=	5.5[Percent_yr],	Descr = "Discontovoet voor eigenaars van nieuwe woningen";
		parameter<Percent_yr> E_bu :=	8.0[Percent_yr],	Descr = "Discontovoet voor eigenaars van bestaande utiliteiten";
		parameter<Percent_yr> E_nu :=	8.0[Percent_yr],	Descr = "Discontovoet voor eigenaars van nieuwe utiliteiten";
		parameter<Percent_yr> E_bt :=	8.0[Percent_yr],	Descr = "Discontovoet voor eigenaars van bestaande gtb";
		parameter<Percent_yr> E_nt :=	8.0[Percent_yr],	Descr = "Discontovoet voor eigenaars van nieuwe gtb";
	}

	container NMDA_Prijzen
	{
		container Aansluitbijdrage
		{
			parameter<Eur_Aansl>	Maximum2019 :=	 805.80 [Eur_Aansl]    ,	Descr = "maximale aansluitbijdrage voor nieuwe warmtenetten(ACM Warmtebesluit 2019)";
		}
		container Vastrecht
		{
			parameter<Eur_yr_Aansl>	Maximum2019 :=	 267.47 [Eur_yr_Aansl] ,	Descr = "maximaal vastrecht voor warmtelevering(ACM Warmtebesluit 2019)";
		}
	}
}
