//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////


container NieuwbouwUtilOperaties
{
	template Select
	{
		// begin case parameters
		attribute<int32>           att (Geography/rdc_grids/m100);
		parameter<string>          utiliteit_lbl;
		parameter<units/yr_uint16> zichtjaar;
		// einde case parameters

		unit<uint32> results := Subset(att > 0i && IsDefined(Geography/rdc_grids/m100/buurt_Rel) && Invoer/RuimtelijkeData/StudieGebied/selected_per_m100)
		,	DialogType = "map"
		,	DialogData = "Point"
		{
			attribute<m2>                                 oppervlakte        : = value(att[nr_OrgEntity], m2);
			attribute<m2>                                 nrJoinedUnits      : = oppervlakte;

			attribute<Geography/rdc_meter>                Point              := Geography/rdc_grids/m100/Point       [nr_OrgEntity];
			attribute<Geography/RegioIndelingen/blok500m> blok500m_rel       := Geography/rdc_grids/m100/blok500m_rel[nr_OrgEntity];
			attribute<Geography/RegioIndelingen/blok1km>  blok1km_rel        := Geography/rdc_grids/m100/blok1km_rel [nr_OrgEntity];
			attribute<Geography/RegioIndelingen/blok2km>  blok2km_rel        := Geography/rdc_grids/m100/blok2km_rel [nr_OrgEntity];
			attribute<Invoer/RuimtelijkeData/StudieGebied/buurt>                 buurt_rel          := Geography/rdc_grids/m100/buurt_rel   [nr_OrgEntity];
			attribute<Classifications/UtilTypeNieuwbouw>  BebouwingsType     := const(rlookup(utiliteit_lbl, Classifications/UtilTypeNieuwbouw/label), .);
			attribute<Classifications/BouwJaar>           Bouwjaar           := const(classify(value(zichtjaar, Units/Yr) - 0.5[units/yr], classifications/bouwjaar/ClassBreak), .);
			attribute<float64>                            AandeelWarmteVraag := const(1.0, .); // alle util Nieuwbouw is geschikt voor WarmteOpties
//			attribute<float64>                            pand_aandeel       := const(Classifications/WoningtypeNieuwbouw/pand_aandeel[type], BebouwingsObject);

			container Gebied
			{
				attribute<float64> n      (..) := const(1.0, ..);
				attribute<float64> MEAN_x (..) := float64(PointCol(Point));
				attribute<float64> MEAN_y (..) := float64(PointRow(Point));
				attribute<float64> SSD_xx (..) := const(10000.0 / 12.0, ..);
				attribute<float64> SSD_xy (..) := const(    0.0 / 12.0, ..);
				attribute<float64> SSD_yy (..) := const(10000.0 / 12.0, ..);
			}

			container Criteria 
			{
			}
		}
	}

	template Unite
	{
		// begin case parameters
		container bron;
		// einde case parameters
		
		unit<uint32> results := ='Union_Unit(' + asItemList('bron/' + Classifications/UtilTypeNieuwbouw/Name + '/results') + ')'
		,	DialogType ="Map"
		,	DialogData ="Point"
		{
			unit<uint8> BebouwingsTypeDomein := Classifications/UtilTypeNieuwbouw;

			attribute<string>                   Code               := Label;
			attribute<string>                   TypeName           := ='Union_Data(., ' + asItemList('const(' + Quote(BebouwingsTypeDomein/Name) + ',bron/' + BebouwingsTypeDomein/Label + '/results)') + ')';
			attribute<string>                   Label              := TypeName+string(BouwJaar)+string(Point), DialogType = "LabelText";

			attribute<m2>                       nrJoinedUnits      := ='Union_Data(., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/nrJoinedUnits') + ')';
			attribute<Geography/rdc_meter>      Point              := ='Union_Data(., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/Point') + ')';
			attribute<RegioIndelingen/blok500m> blok500m_rel       := ='Union_Data(., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/blok500m_rel') + ')';
			attribute<RegioIndelingen/blok1km>  blok1km_rel        := ='Union_Data(., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/blok1km_rel') + ')';
			attribute<RegioIndelingen/blok2km>  blok2km_rel        := ='Union_Data(., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/blok2km_rel') + ')';
			attribute<RegioIndelingen/buurt>    buurt_rel          := ='Union_Data(., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/buurt_rel'  ) + ')';

			attribute<BebouwingsTypeDomein>     BebouwingsType     := ='Union_Data(., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/BebouwingsType') + ')';
			attribute<Classifications/BouwJaar> BouwjaarOrg        := ='Union_Data(., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/Bouwjaar') + ')';
			attribute<Classifications/bouwjaar> bouwjaar           := max_elem(bouwjaarOrg, Classifications/BouwJaar/V/n2010);
			attribute<uint8>                    ModelObjectKey     := BebouwingsType * uint8(#Classifications/BouwJaar) + BouwJaar;
			attribute<nrAansl>                  nrAansluitingen_i  := const(1, ., nrAansl);
			attribute<nrWoningen>               nrWoonUnits_i      := nrJoinedUnits / 100[ m2 / nrWoningen];
			attribute<m2>                       nrOppUnits_i       := nrJoinedUnits;
			 
			attribute<float64>                  AandeelWarmteVraag := ='Union_Data(., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/AandeelWarmteVraag') + ')';
			attribute<float64>                  pand_aandeel       := const(1.0, .);

			container Gebied
			{
				attribute<float64> n      (..) := ='Union_Data(.., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/Gebied/n'     ) + ')';
				attribute<float64> MEAN_x (..) := ='Union_Data(.., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/Gebied/MEAN_x') + ')';
				attribute<float64> MEAN_y (..) := ='Union_Data(.., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/Gebied/MEAN_y') + ')';
				attribute<float64> SSD_xx (..) := ='Union_Data(.., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/Gebied/SSD_xx') + ')';
				attribute<float64> SSD_xy (..) := ='Union_Data(.., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/Gebied/SSD_xy') + ')';
				attribute<float64> SSD_yy (..) := ='Union_Data(.., ' + asItemList('bron/' + BebouwingsTypeDomein/Name + '/results/Gebied/SSD_yy') + ')';
			}
			container Criteria
			{
			}
		}
	}
}