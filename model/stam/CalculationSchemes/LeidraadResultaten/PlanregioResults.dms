//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container PlanregioResults
{
	attribute<nrWoningen> nrWEQ    (Planregio) :=
		  sum(bebouwing/BestaandeWoning/nrAansluitingen / 1.0[nrAansl / nrWoningen], bebouwing/BestaandeWoning/Planregio_rel)
		+ sum(bebouwing/BestaandeUtil/Oppervlakte / 130[m2 / nrWoningen], bebouwing/BestaandeUtil/Planregio_rel);
	attribute<Ratio>      R_StadV  (Planregio) := Invoer/RuimtelijkeData/StudieGebied/buurt/R_StadV;
	attribute<Ratio>      R_AardG  (Planregio) := 1D - R_StadV;
	attribute<string>     IsWater  (Planregio) := Invoer/RuimtelijkeData/StudieGebied/buurt/IsWater;
	parameter<bool>       Groengas             := Tussenresultaten/Voorkeuren/Afweging/IsGroenGas;

	container Hulpvariabelen
	{
		unit<uint32>  table := PlanRegio
		{
			attribute<string>     BU_CODE   := Statisch/table/I01_buurtcode;
			attribute<nrWoningen> nrWEQ     := .../nrWEQ;
			attribute<Ratio>      R_StadV   := .../R_StadV;
			attribute<GJ_yr>      VraagH2   := StateNaAllocatie/Totaal/Verbruik/V_H2;
			attribute<GJ_yr>      VraagGG    := 
					(Statisch/Uitgesloten_bool || !GroenGas || nrWEQ == 0[nrWoningen])
						? 0[GJ_yr] 
						: makedefined(
								  R_AardG * sum(Allocatie/BestaandeWoning/metervraag/Aardgas, bebouwing/BestaandeWoning/PlanRegio_rel)
								+ R_AardG * sum(Allocatie/BestaandeUtil/metervraag/Aardgas, bebouwing/BestaandeUtil/PlanRegio_rel)
							,0[GJ_yr]);
			attribute<string> Uitgesloten := string(Statisch/uitgesloten_bool);
			attribute<string> MT_nr         := Tussenresultaten/GebiedsAllocatie/RestWarmte/results/RestWarmte/bron_naam;//lijst nr uit csv-bestand MT
			attribute<string> LT_nr         := Tussenresultaten/AllocatieResultaten/AfnamegebiedenPerPlanregioReport;//lijst nr uit csv-bestand LT
		}

		parameter<string> OutputFolder := '%localDataProjDir%/Results/' + Expand( . , '%configName%') + '/'+ 'Leidraad';
		unit<uint32>      variable     := SubItem_PropValues(table,'name');
		container         export_csv   := Rapportage/WriteTable32ToCSV(table, AsList(variable/name, ';'), OutputFolder+'/Hulpvariabelen.csv');
	}
	
	container GevoeligheidsAnalyse //TODO Verwijzen naar gevoeligheidsanalyses
	{
		unit<uint32>  table := PlanRegio
		{
			attribute<string>     BU_CODE   := Statisch/table/I01_buurtcode;
			
			attribute<Eur_ton>    G01_Nat_meerkost_CO2_Kost_Reductie_Hoog := =Invoer/G01_aan ? 'Hoofdindicatoren/Table/H17_Nat_meerkost_CO2' : 'const(999[eur_ton],PlanRegio)';
			attribute<Eur_ton>    G02_Nat_meerkost_CO2_Kost_Reductie_Laag := =Invoer/G02_aan ? 'Hoofdindicatoren/Table/H17_Nat_meerkost_CO2' : 'const(999[eur_ton],PlanRegio)';
			attribute<Eur_ton>    G03_Nat_meerkost_CO2_En_Prijzen_Laag    := =Invoer/G03_aan ? 'Hoofdindicatoren/Table/H17_Nat_meerkost_CO2' : 'const(999[eur_ton],PlanRegio)';
			attribute<Eur_ton>    G04_Nat_meerkost_CO2_En_Prijzen_Hoog    := =Invoer/G04_aan ? 'Hoofdindicatoren/Table/H17_Nat_meerkost_CO2' : 'const(999[eur_ton],PlanRegio)';
		}
		parameter<string> RefExpr := isStap0 ? 'Ref_2019_' : isReferentie ? 'Ref_2030_' : '%configName%/';
		parameter<string> OutputFolder := '%localDataProjDir%/Results/' + Expand( . , RefExpr) + ''+ '';
		unit<uint32>      variable     := SubItem_PropValues(table,'name');
		container         export_csv   := Rapportage/WriteTable32ToCSV(table, AsList(variable/name, ';'), OutputFolder+'GevoeligheidsAnalyse.csv');
	}

	
	//Statische indicatoren per buurt. Met Statisch wordt bedoeld dat resultaten niet verschillen per run.
	container Statisch
	{
		attribute<bool> uitgesloten_bool (Planregio) := Invoer/RuimtelijkeData/leidraad_oktober_2019/uitgesloten_bool;

		unit<uint32>  table := PlanRegio
		{
			attribute<string>     BU_CODE                := I01_buurtcode;
			attribute<string>     I01_buurtcode          := Invoer/RuimtelijkeData/StudieGebied/buurt/BU_CODE;
			attribute<string>     I02_buurtnaam          := uitgesloten_bool ? 'UITGESLOTEN' : replace(Invoer/RuimtelijkeData/StudieGebied/buurt/BU_NAAM, ',' , '');
			attribute<string>     I03_wijkcode           := Invoer/RuimtelijkeData/StudieGebied/buurt/WK_CODE;
			attribute<string>     I04_wijknaam           := uitgesloten_bool ? 'UITGESLOTEN' : replace(Invoer/RuimtelijkeData/StudieGebied/buurt/WK_NAAM, ',' , '');
			attribute<string>     I05_gemeentecode       := Invoer/RuimtelijkeData/StudieGebied/buurt/GM_CODE;
			attribute<string>     I06_gemeentenaam       := uitgesloten_bool ? 'UITGESLOTEN' : replace(Invoer/RuimtelijkeData/StudieGebied/buurt/GM_NAAM, ',' , '');
			attribute<string>     I07_energieregionaam   := uitgesloten_bool ? 'UITGESLOTEN' : replace(Invoer/RuimtelijkeData/StudieGebied/buurt/ER_NAAM, ',' , '');
			attribute<string>     I08_provincienaam      := uitgesloten_bool ? 'UITGESLOTEN' : replace(Invoer/RuimtelijkeData/StudieGebied/buurt/PROV_NAAM, ',' , '');
			attribute<nrAansl>    I09_aantal_woningen    := uitgesloten_bool ? 0[nrAansl]    : roundUp(sum(bebouwing/BestaandeWoning/nrAansluitingen, bebouwing/BestaandeWoning/PlanRegio_rel))[nrAansl];
			attribute<nrAansl>    I10_aantal_utiliteit   := uitgesloten_bool ? 0[nrAansl]    : roundUp(sum(bebouwing/BestaandeUtil/nrAansluitingen  , bebouwing/BestaandeUtil/PlanRegio_rel))[nrAansl];
			attribute<nrWoningen> I11_woningequivalenten := uitgesloten_bool ? 0[nrwoningen] : roundUp(nrWEQ)[nrWoningen]; //130m2 utiliteit = 1 WEQ
			
			attribute<ton_yr>     I12_CO2_startjaar      := 
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[ton_yr] 
						: makedefined( StartJaar/OrigKosten/Orig_CO2_ton
					,0[ton_yr]);
			
			attribute<string>     I13_Uitgesloten        := string(uitgesloten_bool);
		}
		parameter<string> OutputFolder := '%localDataProjDir%/Results' + Expand( . , '') + ''+ '';
		unit<uint32> variable := SubItem_PropValues(table,'name');
		container export_csv := Rapportage/WriteTable32ToCSV(table, AsList(variable/name, ';'), OutputFolder+'/Statisch.csv');
		
		unit<uint32> table_vergelijking := table, StorageName = "=FolderInfo/OutputFolder+'/Statisch.fss'"
		{
			attribute<String>     BU_CODE                := I01_buurtcode;
			attribute<nrWoningen> I11_woningequivalenten := Uitgesloten_bool ? 0.0[nrwoningen] : nrWEQ; // voor de vergelijking, daarvoor GEEN integers wegschrijven.
		}
	}

	//dynamische indicatoren op hoofdlijnen
	container Hoofdindicatoren
	{
		unit<uint32> extensief := Invoer/DefaultInstellingen/Basis/PlanRegio
		{
			
			//                VRAAG
			
			attribute<GJ_yr> H01_Vraag_totaal := add(H02_Vraag_RV, H03_Vraag_TW, H04_Vraag_Vent, H05_Vraag_K, H06_Vraag_App);

			attribute<GJ_yr> H02_Vraag_RV :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
						  sum(Allocatie/BestaandeWoning/BO/Functioneel/V_RV, bebouwing/BestaandeWoning/PlanRegio_rel)
						+ sum(Allocatie/BestaandeUtil/BO/Functioneel/V_RV, bebouwing/BestaandeUtil/PlanRegio_rel)
						,0[GJ_yr]);

			attribute<GJ_yr> H03_Vraag_TW :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
						  sum(Allocatie/BestaandeWoning/BO/Functioneel/V_TW, bebouwing/BestaandeWoning/PlanRegio_rel)
						+ sum(Allocatie/BestaandeUtil/BO/Functioneel/V_TW, bebouwing/BestaandeUtil/PlanRegio_rel)
						,0[GJ_yr]);

			attribute<GJ_yr> H04_Vraag_Vent :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
						  sum(Allocatie/BestaandeWoning/BO/Functioneel/V_Vent, bebouwing/BestaandeWoning/PlanRegio_rel)
						+ sum(Allocatie/BestaandeUtil/BO/Functioneel/V_Vent, bebouwing/BestaandeUtil/PlanRegio_rel)
						,0[GJ_yr]);

			attribute<GJ_yr> H05_Vraag_K :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr]
					: makedefined(
						  sum(Allocatie/BestaandeWoning/BO/Functioneel/V_K, bebouwing/BestaandeWoning/PlanRegio_rel)
						+ sum(Allocatie/BestaandeUtil/BO/Functioneel/V_K, bebouwing/BestaandeUtil/PlanRegio_rel)
						,0[GJ_yr]);

			attribute<GJ_yr> H06_Vraag_App :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
						  sum(Allocatie/BestaandeWoning/BO/Functioneel/V_App, bebouwing/BestaandeWoning/PlanRegio_rel)
						+ sum(Allocatie/BestaandeUtil/BO/Functioneel/V_App, bebouwing/BestaandeUtil/PlanRegio_rel)
						,0[GJ_yr]);
						
			//            INPUTS
			
			attribute<GJ_yr> H08_Input_totaal := H09_Input_aardgas + H10_Input_duurzaamgas + H11_Input_elektriciteit + H12_input_MTwarmtebronnen + H13_input_LTwarmtebronnen + H14_Saldo_Omgevingswarmte;
						
			attribute<GJ_yr> H09_Input_aardgas :=
				(Statisch/Uitgesloten_bool || GroenGas || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
							  R_AardG * sum(Allocatie/BestaandeWoning/metervraag/Aardgas, bebouwing/BestaandeWoning/PlanRegio_rel)
							+ R_AardG * sum(Allocatie/BestaandeUtil/metervraag/Aardgas, bebouwing/BestaandeUtil/PlanRegio_rel)
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_id_gas
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_wd_gas
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_ow_gas
							+ WarmteBestaand/V_Bijstook
						,0[GJ_yr]);
						
			attribute<GJ_yr> H10_Input_duurzaamgas :=
				(Statisch/Uitgesloten_bool || !GroenGas || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
							  R_AardG * sum(Allocatie/BestaandeWoning/metervraag/Aardgas, bebouwing/BestaandeWoning/PlanRegio_rel)
							+ R_AardG * sum(Allocatie/BestaandeUtil/metervraag/Aardgas, bebouwing/BestaandeUtil/PlanRegio_rel)
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_id_gas
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_wd_gas
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_ow_gas
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_H2
							+ WarmteBestaand/V_Bijstook
						,0[GJ_yr]);
						
			attribute<GJ_yr> H11_Input_elektriciteit :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
							  R_AardG * sum(Allocatie/BestaandeWoning/metervraag/Elektriciteit, bebouwing/BestaandeWoning/PlanRegio_rel)
							+ R_AardG * sum(Allocatie/BestaandeUtil/metervraag/Elektriciteit, bebouwing/BestaandeUtil/PlanRegio_rel)
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_id_elek
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_wd_elek
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_ow_elek
							+ WarmteBestaand/V_wd_elek
							+ WarmteBestaand/V_elek_w
							+ WarmteBestaand/V_elek_u
						,0[GJ_yr]);
						
			attribute<GJ_yr> H12_input_MTwarmtebronnen :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
							  (sum(Allocatie/BestaandeWoning/metervraag/Warmte_LT, bebouwing/BestaandeWoning/PlanRegio_rel) > 0.0[gj_yr] ? 0.0[gj_yr] :
							  R_AardG * StateNaAllocatie/Totaal/Verbruik/V_warmte)
							+ WarmteBestaand/V_ow_warmte
						,0[GJ_yr]);
						
			attribute<GJ_yr> H13_input_LTwarmtebronnen :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
							  sum(Allocatie/BestaandeWoning/metervraag/Warmte_LT, bebouwing/BestaandeWoning/PlanRegio_rel) > 0.0[gj_yr]?
							  R_AardG * StateNaAllocatie/Totaal/Verbruik/V_warmte : 0.0[gj_yr]
						,0[GJ_yr]);
						
			attribute<GJ_yr> H14_Saldo_Omgevingswarmte :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
							H01_Vraag_totaal - H09_Input_aardgas - H10_Input_duurzaamgas - H11_Input_elektriciteit - H12_input_MTwarmtebronnen - H13_input_LTwarmtebronnen
						,0[GJ_yr]);

			attribute<Eur_yr> H16_Nat_meerkost :=
				(statisch/uitgesloten_bool || isStap0)
					? 0[Eur_yr] 
					: makedefined(
						 NationaleKosten/TotaalUitstoot/Delta_nat_kosten //nationale meerkosten per woningequivalent
						,0[Eur_yr]);
		}

		unit<uint32> table := extensief
		{
			attribute<string>  BU_CODE              := Statisch/table/I01_buurtcode;
			attribute<string>  V01_Strategievariant := const(Variantcode, Planregio);
			attribute<GJ_yr_WEQ> H01_vraag_totaal := round(makedefined(extensief/H01_vraag_totaal  / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H02_Vraag_RV     := round(makedefined(extensief/H02_Vraag_RV      / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H03_Vraag_TW     := round(makedefined(extensief/H03_Vraag_TW      / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H04_Vraag_Vent   := round(makedefined(extensief/H04_Vraag_Vent    / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H05_Vraag_K      := round(makedefined(extensief/H05_Vraag_K       / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H06_Vraag_App    := round(makedefined(extensief/H06_Vraag_App     / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];

			attribute<GJ_yr_ha>  H07_vraag_tot_ha := 
				round(
					statisch/Uitgesloten_bool || nrWEQ == 0.0[nrWoningen] 
						? 0.0[GJ_yr_ha]
						: makedefined(
							 (extensief/H02_Vraag_RV + extensief/H03_Vraag_TW) / Invoer/RuimtelijkeData/StudieGebied/buurt/Area_ov_r_land_com
							,0.0[GJ_yr_ha])
				)[GJ_yr_ha];

			attribute<GJ_yr_WEQ> H08_input_totaal          := round(makedefined(extensief/H08_input_totaal          / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H09_input_aardgas         := round(makedefined(extensief/H09_input_aardgas         / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H10_input_duurzaamgas     := round(makedefined(extensief/H10_input_duurzaamgas     / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H11_input_elektriciteit   := round(makedefined(extensief/H11_input_elektriciteit   / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H12_input_MTwarmtebronnen := round(makedefined(extensief/H12_input_MTwarmtebronnen / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H13_input_LTwarmtebronnen := round(makedefined(extensief/H13_input_LTwarmtebronnen / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H14_saldo_omgevingswarmte := round(makedefined(extensief/H14_saldo_omgevingswarmte / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			
			attribute<ton_yr> H15_CO2_uitstoot :=round(
					statisch/uitgesloten_bool
						? 0[ton_yr]
						: makedefined(
							NationaleKosten/TotaalUitstoot/New_CO2_ton
							,0[ton_yr])
				)[ton_yr];

			attribute<Eur_yr> H16_Nat_meerkost :=
				round(
					(statisch/uitgesloten_bool || isReferentie)
						? 0[Eur_yr] 
						: makedefined(
							 NationaleKosten/TotaalUitstoot/Delta_nat_kosten  //nationale meerkosten ten opzichte van startjaar
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_ton> H17_Nat_meerkost_CO2 :=
				round(
					(statisch/Uitgesloten_bool || isStap0 )
						? 0[eur_ton]
						: makedefined(
							 (NationaleKosten/TotaalUitstoot/Delta_nat_kosten / NationaleKosten/TotaalUitstoot/Delta_CO2) //nationale meerkosten per vermeden ton CO2
							,0.0[EUR_ton])
				)[Eur_ton];

			attribute<Eur_yr_WEQ> H18_Nat_meerkost_WEQ := round(makedefined(extensief/H16_Nat_meerkost / nrWEQ, 0[Eur_yr_WEQ]))[Eur_yr_WEQ];
			
			attribute<eur_m3> H19_waarde_hernieuwbaar_gas          := const(0.0[eur_m3], PlanRegio);
			attribute<string> H20_beschikbaarheid_hernieuwbaar_gas := const('onbekend', PlanRegio);
		}
		parameter<string> RefExpr := isStap0 ? 'Ref_2019_' : isReferentie ? 'Ref_2030_' : '%configName%/';
		
		parameter<string> OutputFolder := '%localDataProjDir%/Results/' + Expand( . , RefExpr) + ''+ '';
		unit<uint32> variable := SubItem_PropValues(table,'name');
		container export_csv := Rapportage/WriteTable32ToCSV(table, AsList(variable/name, ';'), OutputFolder+'Hoofdindicatoren.csv');
	}

	//nationale kosten absoluut en CO2 uitstoot
	container NationaleKosten
	{
		unit<uint32> Recap := Invoer/DefaultInstellingen/Basis/PlanRegio
		{
			attribute<Eur_yr> K09_Gebouw_installatie :=
				round(
					statisch/Uitgesloten_bool 
					? 0[Eur_yr] 
					: makedefined(
						  R_AardG * Maatschappelijk/LokaleEnergieProductie/Kmi_30
						+ R_AardG * Maatschappelijk/LokaleEnergieProductie/Kmi_20 
						+ R_AardG * Maatschappelijk/LokaleEnergieProductie/Kmi_15 
						+ R_AardG * StateNaAllocatie/totaal/jaarlijks/id/Kmi_id_LO
						- Origkosten/table/K09_Gebouw_installatie
						,0[Eur_yr])
				)[Eur_yr];
		}
		unit<uint32> table := Invoer/DefaultInstellingen/Basis/PlanRegio
		{
			attribute<string>  BU_CODE              := Statisch/table/I01_buurtcode;
			attribute<string>  V01_Strategievariant := const(Variantcode, Planregio);
			
			attribute<Eur_yr> K01_Enet_verzwaren :=
				round(
					statisch/Uitgesloten_bool || IsStap0 || IsReferentie
						? 0[Eur_yr]
						: makedefined(
							  R_AardG * Netwerken/Kosten/Ki_verzw_e_aansl        * NCW/mr50/AnnualisationFactor
							+ R_AardG * Netwerken/Kosten/cumulatief/Ki_verzw_MSR * NCW/mr50/AnnualisationFactor
							+ R_AardG * Netwerken/Kosten/cumulatief/Ki_verzw_LS  * NCW/mr50/AnnualisationFactor //jaarlijkse kapitaallasten verzwaren elektriciteits
							- Origkosten/table/K01_Enet_verzwaren
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K02_Gnet_verwijderen :=
				round(
					statisch/Uitgesloten_bool  || IsStap0 || IsReferentie
						? 0[Eur_yr]
						: makedefined(
							  R_AardG * Netwerken/Aardgas/Kji_verwijderen //jaarlijkse kapitaallasten verwijderen gasnetten
							- Origkosten/table/K02_Gnet_verwijderen
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K03_Gnet_aanpassen :=
				round(
					statisch/Uitgesloten_bool  || IsStap0 || IsReferentie
						? 0[Eur_yr]
						: makedefined(
							  R_AardG * StateNaAllocatie/totaal/jaarlijks/wd/Kmi_wd_Gnet       //jaarlijkse kapitaallasten aanpassen gasnetten
							- Origkosten/table/K03_Gnet_aanpassen
							,0[Eur_yr])
					)[Eur_yr];

			attribute<Eur_yr> K04_Wnet_buurt :=
				round(
					statisch/Uitgesloten_bool  || IsStap0 || IsReferentie
					? 0[Eur_yr] 
					: makedefined(
						  R_AardG * StateNaAllocatie/totaal/jaarlijks/wd/Kmi_wd       //jaarlijkse kapitaallasten wijkdistributie nieuwe warmtenetten
						- Origkosten/table/K04_Wnet_buurt
						,0[Eur_yr])
				)[Eur_yr];
				
			attribute<Eur_yr> K05_Wnet_pand :=
				round(
					statisch/Uitgesloten_bool  || IsStap0 || IsReferentie
					? 0[Eur_yr] 
					: makedefined(
						  R_AardG * StateNaAllocatie/totaal/jaarlijks/id/Kmi_id       //jaarlijkse kapitaallasten inpandig nieuwe warmtenetten
						+ R_AardG * StateNaAllocatie/totaal/jaarlijks/ge/Kmi_ge_ov    //jaarlijkse kapitaallasten ongeriefsvergoeding nieuwe warmtenetten
						+ R_AardG * StateNaAllocatie/totaal/jaarlijks/ge/Kmi_ge_pm    //jaarlijkse kapitaallasten projectmanagement nieuwe warmtenetten
						- Origkosten/table/K05_Wnet_pand
						,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K06_Wnet_transport :=
				round(
					statisch/Uitgesloten_bool  || IsStap0 || IsReferentie
						? 0[Eur_yr] 
						: makedefined(
							 R_StadV > 0[ratio] 
								? 0[Eur_yr] 
								: R_AardG * StateNaAllocatie/totaal/jaarlijks/pt/Kmi_pt //transportleidingen nieuwe warmtenetten
								- Origkosten/table/K06_Wnet_transport
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K07_Wnet_opwekking :=
				round(
					statisch/Uitgesloten_bool || IsStap0 || IsReferentie
						? 0[Eur_yr]
						: makedefined(
							  R_AardG * StateNaAllocatie/totaal/jaarlijks/ow/Kmi_ow //realisatie bronnen nieuwe warmtenetten
							- Origkosten/table/K07_Wnet_opwekking
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K08_Gebouw_schil :=
				round(
					statisch/Uitgesloten_bool  || IsStap0 || IsReferentie
						? 0[Eur_yr] 
						: makedefined(
							  maatschappelijk/gebouwen/Kmi_GebouwVerbetering //kosten schilverbetering
							- Origkosten/table/K08_Gebouw_schil
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K09_Gebouw_installatie :=
				round(
					statisch/Uitgesloten_bool || IsStap0 || IsReferentie
					? 0[Eur_yr] 
					: makedefined(
						  R_AardG * Maatschappelijk/LokaleEnergieProductie/Kmi_30
						+ R_AardG * Maatschappelijk/LokaleEnergieProductie/Kmi_20 
						+ R_AardG * Maatschappelijk/LokaleEnergieProductie/Kmi_15 
						+ R_AardG * StateNaAllocatie/totaal/jaarlijks/id/Kmi_id_LO
						- Origkosten/table/K09_Gebouw_installatie
						,0[Eur_yr])
				)[Eur_yr];
				
			attribute<eur_yr> K10_Totaal_Kapitaalslasten :=
				  K01_Enet_verzwaren + K02_Gnet_verwijderen + K03_Gnet_aanpassen
				+ K04_Wnet_buurt     + K05_Wnet_pand        + K06_Wnet_transport + K07_Wnet_opwekking
				+ K08_Gebouw_schil   + K09_Gebouw_installatie;

			attribute<Eur_yr> K11_Inkoop_Warmte :=
				round(
					statisch/Uitgesloten_bool 
					? 0[Eur_yr] 
					: makedefined(
						 R_AardG * StateNaAllocatie/totaal/jaarlijks/ow/Kj_ow_productie //productie warmte nieuwe warmtenetten
						+ WarmteBestaand/Kj_ow_productie
						,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K12_Inkoop_Gas:= 
				round(
					statisch/Uitgesloten_bool 
						? 0[Eur_yr] 
						: makedefined(
							  R_AardG * StateNaAllocatie/totaal/jaarlijks/ow/Km_ow_gas //kosten gas opwekking warmte nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/wd/Km_wd_gas //kosten gas hulpketels in nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/id/Km_id_gas //waterstof H2 opties
							+ WarmteBestaand/Kj_wd_gas
							+ R_AardG * maatschappelijk/gebouwen/AardGasVerbruik/Km_Totaal
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K13_Inkoop_Elek :=
				round(
					statisch/Uitgesloten_bool
						? 0[Eur_yr] 
						: makedefined(
							  R_AardG * StateNaAllocatie/totaal/jaarlijks/ow/Km_ow_elek //elektriciteitskosten opwekking in nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/id/Km_id_elek //elektriciteitskosten inpandig in nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/wd/Km_wd_elek //elektriciteitskosten distributie in nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/ge/Om_ge_comfort //jaarlijkse comfortwinst nieuwe warmtenetten
							+ WarmteBestaand/Kj_wd_elek
							+ R_AardG * maatschappelijk/gebouwen/ElektriciteitsVraag/Km_Totaal
							+ WarmteBestaand/Kj_elek_gebouw
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K14_Gebouw_OenM :=
				round(
					statisch/Uitgesloten_bool 
						? 0[Eur_yr] 
						: makedefined(
							  R_AardG * maatschappelijk/LokaleEnergieProductie/Kj_Onderhoud //onderhoud lodake opwekkingsinstallaties
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/id/Kj_id_LO_oh  //onderhoudskosten gebouwinstallaties gebiedsopties
							+ R_AardG * maatschappelijk/LokaleEnergieProductie/Kj_Admin //administratie lokale opwekkingsinstallaties
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K15_Wnet_OenM :=
				round(
					statisch/Uitgesloten_bool
						? 0[Eur_yr]
						: makedefined(
							  R_AardG * StateNaAllocatie/totaal/jaarlijks/ow/Kj_ow_oh  //onderhoudskosten opwekking nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/ow/Kj_ow_adm //administratiekosten opwekking nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/pt/Kj_pt_oh  //onderhoudskosten transport nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/pt/Kj_pt_adm //administratiekosten transport nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/id/Kj_id_oh  //onderhoudskosten inpandig nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/id/Kj_id_adm //administratiekosten inpandig nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/wd/Kj_wd_oh  //onderhoudskosten distributie nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/wd/Kj_wd_adm //administratiekosten distributie nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/lv/Oj_lv_vastrecht * Tussenresultaten/Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_lv_Admin * 1[yr] //administratiekosten leverancier nieuwe warmtenetten
							+ WarmteBestaand/Kj_lv_admin
							+ WarmteBestaand/Kj_id_oh
							+ WarmteBestaand/Kj_wd_oh
							+ WarmteBestaand/Kj_wd_adm
							+ WarmteBestaand/Kj_pt_oh
							+ WarmteBestaand/Kj_pt_adm
							+ WarmteBestaand/Kj_ow_oh
							+ WarmteBestaand/Kj_ow_adm
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K16_Enet_Gnet_OenM :=
				round(
					statisch/Uitgesloten_bool 
						? 0[Eur_yr] 
						: makedefined(
							  R_AardG * Netwerken/Aardgas/Kj_oh //onderhoudskosten gasnet
							+ WarmteBestaand/Kj_gnet_oh
							+ R_AardG * Netwerken/Elektriciteit/Kj_oh	//onderhoudskosten elektriciteitsnet
							+ WarmteBestaand/Kj_enet_oh
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/wd/Kj_wd_Gnet_oh
							,0[Eur_yr])
				)[Eur_yr];
				
			attribute<eur_yr> K17_Totaal_VariabeleKosten :=
				  K11_Inkoop_Warmte + K12_Inkoop_Gas + K13_Inkoop_Elek
				+ K14_Gebouw_OenM   + K15_Wnet_OenM  + K16_Enet_Gnet_OenM;
				
			attribute<eur_yr> K18_Extra_VariabeleKosten := 
				  K17_Totaal_VariabeleKosten
				- Ref2030/PlanregioResults/NationaleKosten/Table/K17_Totaal_VariabeleKosten;
		}
		parameter<string> RefExpr := isStap0 ? 'Ref_2019_' : isReferentie ? 'Ref_2030_' : '%configName%/';
		parameter<string> OutputFolder := '%localDataProjDir%/Results/' + Expand( . , RefExpr) + ''+ '';
		unit<uint32> variable := SubItem_PropValues(table,'name');
		container export_csv := Rapportage/WriteTable32ToCSV(table, AsList(variable/name, ';'), OutputFolder+'NationaleKosten.csv');		

		container TotaalUitstoot
		{
			attribute<Eur_yr> Natkosten_abs (Planregio) :=
				  table/K01_Enet_verzwaren         
				+ table/K02_Gnet_verwijderen       
				+ table/K03_Gnet_aanpassen         
				+ table/K04_Wnet_buurt             
				+ table/K05_Wnet_pand              
				+ table/K06_Wnet_transport         
				+ table/K07_Wnet_opwekking         
				+ table/K08_Gebouw_schil           
				+ table/K09_Gebouw_installatie     
				
				+ table/K17_Totaal_VariabeleKosten
				- Origkosten/table/K11_Inkoop_Warmte
				- Origkosten/table/K12_Inkoop_Gas
				- Origkosten/table/K13_Inkoop_Elek
				- Origkosten/table/K14_Gebouw_OenM
				- Origkosten/table/K15_Wnet_OenM
				- Origkosten/table/K16_Enet_Gnet_OenM;

			attribute<ton_yr> Orig_CO2_ton (Planregio) := OrigKosten/Orig_CO2_ton;

			attribute<ton_yr> New_CO2_ton (Planregio) :=
				Groengas
					? const(0[ton_yr], PlanRegio)
					:  EnergyResults/CO2/gebouwen/Aardgas/totaal / 1000.0[kg_yr / ton_yr]
					 + EnergyResults/CO2/GebiedsOpties/totaal    / 1000.0[kg_yr / ton_yr];

			attribute<ton_yr> Delta_CO2        (Planregio) := Orig_CO2_ton - New_CO2_ton;
			attribute<Eur_yr> Delta_nat_kosten (Planregio) := Natkosten_abs;
		}
	}
	
	container Aansluitingen
	{
		unit<uint32>  table := Invoer/DefaultInstellingen/Basis/PlanRegio
		{
			attribute<string>  BU_CODE              := Statisch/table/I01_buurtcode;
			attribute<string>  V01_Strategievariant := const(Variantcode, Planregio);

			attribute<nrAansl> A01_Aansl_aardgas :=
				round(
					(statisch/Uitgesloten_bool || GroenGas)
					? 0[nrAansl]
					: makedefined(
						 R_AardG * Allocatie/aant_g_aansl_per_planregio
						,0[nrAansl])
				)[nrAansl];

			attribute<nrAansl> A02_Aansl_eWP :=
				round(
					statisch/Uitgesloten_bool
					? 0[nrAansl] 
					: makedefined(
						   R_AardG * Allocatie/BestaandeWoning/Aansluitingen/nrAsl_e_ewp
						 + R_AardG * Allocatie/BestaandeUtil/Aansluitingen/nrAsl_e_ewp
						,0[nrAansl])
				)[nrAansl];

			attribute<nrAansl> A03_Aansl_MT :=
				round(
					statisch/Uitgesloten_bool 
					? 0[nrAansl] 
					: makedefined(
						  R_AardG * StateNaAllocatie/nrAansluitinging/Restwarmte //nieuwe aansluitingen restwarmte
						+ R_AardG * StateNaAllocatie/nrAansluitinging/Geothermie //nieuwe aansluitingen geothermie
						+ R_AardG * StateNaAllocatie/nrAansluitinging/WijkWKK //nieuwe aansluitingen wijkwkk
						+ R_AardG * StateNaAllocatie/nrAansluitinging/BioWKK  //nieuwe aansluitingen biowkk
						+ WarmteBestaand/nrAansl_w_MT
						+ WarmteBestaand/nrAansl_u_MT
						,0[nrAansl])
				)[nrAansl];

			attribute<nrAansl> A04_Aansl_LT :=
				round(
					statisch/Uitgesloten_bool
					? 0[nrAansl]
					: makedefined(
						   R_AardG * StateNaAllocatie/nrAansluitinging/WKO
						 + R_AardG * StateNaAllocatie/nrAansluitinging/LT15_30
						 + R_AardG * StateNaAllocatie/nrAansluitinging/LT15_50
						 + R_AardG * StateNaAllocatie/nrAansluitinging/LT15_70
						 + R_AardG * StateNaAllocatie/nrAansluitinging/LT30_30
						 + R_AardG * StateNaAllocatie/nrAansluitinging/LT30_50
						 + R_AardG * StateNaAllocatie/nrAansluitinging/LT30_70
						 + R_AardG * StateNaAllocatie/nrAansluitinging/TEO
						 + R_AardG * StateNaAllocatie/nrAansluitinging/BuurtWKO
						,0[nrAansl])
				)[nrAansl];

			attribute<nrAansl> A05_Aansl_hWP_HG :=
				round(
					statisch/Uitgesloten_bool
						? 0[nrAansl]
						: makedefined(
							   R_AardG * Allocatie/BestaandeUtil/Aansluitingen/nrAsl_e_hwp
							 + R_AardG * Allocatie/BestaandeWoning/Aansluitingen/nrAsl_e_hwp
							,0[nrAansl])
				)[nrAansl];

			attribute<nrAansl>	A06_Aansl_HR_HG := 
				round(
					(statisch/Uitgesloten_bool || !GroenGas) 
						? 0[nrAansl] 
						: makedefined(
							   R_AardG * sum(Allocatie/BestaandeUtil/BO/Aansluitingen/Gnet   * float64(Allocatie/BestaandeUtil/BO/Aansluitingen/Enet_hwp   == 0[nrAansl]), Allocatie/BestaandeUtil/BO/Planregio_rel)
							 + R_AardG * sum(Allocatie/BestaandeWoning/BO/Aansluitingen/Gnet * float64(Allocatie/BestaandeWoning/BO/Aansluitingen/Enet_hwp == 0[nrAansl]), Allocatie/BestaandeWoning/BO/Planregio_rel)
							 + R_AardG * StateNaAllocatie/nrAansluitinging/WaterstofHR
							,0[nrAansl])
				)[nrAansl];
		}
		parameter<string> RefExpr := isStap0 ? 'Ref_2019_' : isReferentie ? 'Ref_2030_' : '%configName%/';
		parameter<string> OutputFolder := '%localDataProjDir%/Results/' + Expand( . , RefExpr) + ''+ '';
		unit<uint32> variable := SubItem_PropValues(table,'name');
		container export_csv := Rapportage/WriteTable32ToCSV(table, AsList(variable/name, ';'), OutputFolder+'Aansluitingen.csv');
	}
}