//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
// Deze file bevat een basis voor de Vesta instellingen die vanuit iedere run           //
// geincludeerd wordt en per run per Zichtjaar kan worden overreden                     //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////
container Rekenstap_AllesB_LT30_30
{
	container Stap_1 := Basis, using = "Units"
	{
		container RuimtelijkeVraag := Basis/RuimtelijkeVraag
		{
			container Lokaal := Basis/RuimtelijkeVraag/Lokaal
			{
				container Generiek := Basis/RuimtelijkeVraag/Lokaal/Generiek
				{
					container GebouwOpties := Basis/RuimtelijkeVraag/Lokaal/Generiek/GebouwOpties
					{
	//					criterium x -> Arrangement y;
						// @USERINPUT: 'Never', 'Always'
						parameter<string> geen:  ['Criteria/Always']; // geen labelsprong - behoud huidig label en installaties

						parameter<bool> KiesMaatschappelijk: [false], Descr = "maak maatschappelijke rentabiliteitsafweging indien true, anders obv eindgebruikerskosten";
					}
				}
				container BestaandeWoning := Generiek
				{
					container GebouwOpties := Generiek/GebouwOpties
					{
						parameter<string> geen:     ['Criteria/never']; // geen labelsprong - behoud huidig label en installaties
						parameter<string> NaarB_w:  ['Criteria/Always']; // Sprong naar label B - behoud huidig label en installaties
						parameter<string> LeWPw:    ['Criteria/WP_na_gebied']; // Sprong naar label B - behoud huidig label en installaties
						parameter<string> BeWPw:    ['Criteria/WP_na_gebied']; // Sprong naar label B - behoud huidig label en installaties
					}
				}
				container BestaandeUtil   := Generiek
				{
					container GebouwOpties := Generiek/GebouwOpties
					{
						parameter<string> geen:     ['Criteria/never']; // geen labelsprong - behoud huidig label en installaties
						parameter<string> NaarB_u:  ['Criteria/Always']; // Sprong naar label B - behoud huidig label en installaties
						parameter<string> LeWPu:    ['Criteria/WP_na_gebied']; // Sprong naar label B - behoud huidig label en installaties
						parameter<string> BeWPuG:   ['Criteria/WP_na_gebied']; // Sprong naar label B - behoud huidig label en installaties
						parameter<string> BeWPuK:   ['Criteria/WP_na_gebied']; // Sprong naar label B - behoud huidig label en installaties
					}
				}
				container BestaandeGlTb   := Generiek;
				container NieuwbouwWoning := BestaandeWoning;
				container NieuwbouwUtil   := BestaandeUtil;
				container NieuwbouwGlTb   := BestaandeGlTb;
			}
		}
		container Voorkeuren := Basis/Voorkeuren
		{
			container GebiedsOpties_old
			{
				parameter<UInt32> Aantal: [ 1 ];
				parameter<Classifications/GebiedsOptie> Optie1 := Classifications/GebiedsOptie/V/Lt30_30;
			}
			container GebiedsOpties_alles := for_each_nedv('Optie'+string(ID(Classifications/GebiedsOptie)+1b), 'Classifications/GebiedsOptie/V/' + Classifications/GebiedsOptie/Name
				, void, Classifications/GebiedsOptie)
			{
				parameter<UInt32> Aantal := #Classifications/GebiedsOptie;
			}
			container GebiedsOpties := GebiedsOpties_old;
			
			container Afweging
			{
				parameter<Bool>		LTversusWP   :=		true         ,	Descr = "indien true worden maatschappelijke kosten van eWP opgeteld bij contributiemarge TEO, LT en WKO (bij woningen met B of AP schillabel";
				parameter<Bool>		AlwaysBIO    :=		false        ,	Descr = "indien true worden krijgen alle buurten bioWKK opgelegd ongeacht de rentabiliteitsafweging";
				parameter<Bool>		AlwaysGEO    :=		false        ,	Descr = "indien true worden krijgen alle buurten geothermie opgelegd ongeacht de rentabiliteitsafweging";
				parameter<Bool>		AlwaysH2     :=		false        ,	Descr = "indien true worden krijgen alle buurten waterstof opgelegd ongeacht de rentabiliteitsafweging";
				parameter<Bool>		GEOcontour   :=		true         ,	Descr = "indien true worden bij geothermieafwegingen de contour voor kansgebieden gebruikt, bij false worden alle gebieden als kansrijk aangemerkt";
				parameter<Bool>		IsGroenGas   :=		true         ,	Descr = "zet dit op true indien _GG prijzen worden gebruikt (t.b.v. rapportage PlanregioResults)";
				parameter<Eur_GJ>	OnrendabelMT :=		0000[Eur_GJ] ,	Descr = "extra ruimte om MT restwarmtenetten aan te leggen ondanks onrendabele toppen (als vervanging voor SDE)";
			}
		}
	}
}