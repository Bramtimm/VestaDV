//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container MaatregelenRapportage: isHidden = "true"
	{
		unit<uint32> RapportageRegio := SpecifiekeInstellingen/Rapportage/Regio;
		container BestaandeWoning :=
			for_each_ne(
				 RapportageRegio/Name
				, 'Rapportage/RegionaleRapportage(
					  RapportageRegio, '+string(id(RapportageRegio))+'[RapportageRegio]
					, Allocatie/BestaandeWoning, '+quote('BestaandeWoning')+'
					, '+Classifications/WoningBestaandRapGroep/ClassRef[SpecifiekeInstellingen/Rapportage/WoningBestaandRapGroep_rel]+'
					, '+quote('BebouwingsObject/'+Classifications/WoningBestaandRapGroep/AttrRef [ SpecifiekeInstellingen/Rapportage/WoningBestaandRapGroep_rel ])+'
					, Classifications/WoningBestaandRapGroep/ExportLabel [ SpecifiekeInstellingen/Rapportage/WoningBestaandRapGroep_rel ]
					, units/nrWoningen
				)'
			);

		container NieuwbouwWoning :=
			for_each_ne(
				 RapportageRegio/Name
				, 'Rapportage/RegionaleRapportage(
					  RapportageRegio, '+string(id(RapportageRegio))+'[RapportageRegio]
					, Allocatie/NieuwbouwWoning, '+quote('NieuwbouwWoning')+'
					, BebouwingsComponenten/NieuwbouwWoning/BebouwingsTypeDomein
					, '+quote('RuimtelijkeVraagComponent/BebouwingsType')+'
					, '+quote('WoningType')+'
					, units/nrWoningen
				)'
			);

		container BestaandeUtil:=
			for_each_ne(
				 RapportageRegio/Name
				, 'Rapportage/RegionaleRapportage(
					  RapportageRegio, '+string(id(RapportageRegio))+'[RapportageRegio]
					, Allocatie/BestaandeUtil, '+quote('BestaandeUtil')+'
					, BebouwingsComponenten/BestaandeUtil/BebouwingsTypeDomein
					, '+quote('RuimtelijkeVraagComponent/BebouwingsType')+'
					, '+quote('UtiliteitsType')+'
					, units/m2
				)'
			);

		container NieuwbouwUtil:=
			for_each_ne(
				 SpecifiekeInstellingen/Rapportage/Regio/Name
				, 'Rapportage/RegionaleRapportage(
					  RapportageRegio, '+string(id(RapportageRegio))+'[RapportageRegio]
					, Allocatie/NieuwbouwUtil, '+quote('NieuwbouwUtil')+'
					, BebouwingsComponenten/NieuwbouwUtil/BebouwingsTypeDomein
					, '+quote('RuimtelijkeVraagComponent/BebouwingsType')+'
					, '+quote('UtiliteitsType')+'
					, units/m2
				)'
			);

		container BestaandeGlTb :=
			for_each_ne(
				 SpecifiekeInstellingen/Rapportage/Regio/Name
				, 'Rapportage/RegionaleRapportage(
					  RapportageRegio, '+string(id(RapportageRegio))+'[RapportageRegio]
					, Allocatie/BestaandeGlTb, '+quote('BestaandeGlTb')+'
					, Classifications/GLTB
					, '+quote('RuimtelijkeVraagComponent/BebouwingsType')+'
					, '+quote('GlasTuinBouwType')+'
					, units/m2
				)'
			);

		container NieuwbouwGlTb:=
			for_each_ne(
				 SpecifiekeInstellingen/Rapportage/Regio/Name
				, 'Rapportage/RegionaleRapportage(
					  RapportageRegio, '+string(id(RapportageRegio))+'[RapportageRegio]
					, Allocatie/NieuwbouwGlTb, '+quote('NieuwbouwGlTb')+'
					, Classifications/GlTb
					, '+quote('RuimtelijkeVraagComponent/BebouwingsType')+'
					, '+quote('NieuwbouwGlTb')+'
					, units/m2
				)'
			);
	}