//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
// Deze file bevat een basis voor de Vesta instellingen die vanuit iedere run4          //
// geincludeerd wordt en per run per Zichtjaar kan worden overreden                     //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////
container Toekomst
{
	container Stap_1 := Basis, using = "Units"
	{
		container RuimtelijkeVraag := Basis/RuimtelijkeVraag
		{
			container Lokaal := Basis/RuimtelijkeVraag/Lokaal
			{
				container Generiek := Basis/RuimtelijkeVraag/Lokaal/Generiek
				{
					container Verbeteringen := Basis/RuimtelijkeVraag/Lokaal/Generiek/Verbeteringen
					{
						parameter<String> S_H_B:   ['Criteria/always']; // was: Sprong B (een initiele sprong)
						parameter<String> S_H_AP:  ['Criteria/always']; // was: Sprong C (een initiele sprong)
						parameter<String> S_T_B:   ['Criteria/always']; // was: Sprong D (een vervolgsprong)
						parameter<String> S_T_AP:  ['Criteria/always']; // was: Sprong E (een vervolgsprong)
						parameter<String> S_B_AP:  ['Criteria/always']; // was: Sprong F (een vervolgsprong)
	
						parameter<String> S_H_BeWP: ['Criteria/never']; // naar A+ met eWP
						parameter<String> S_T_BeWP: ['Criteria/never']; // van tussenlabel naar A+ met eWP
						parameter<String> S_B_BeWP: ['Criteria/never']; // van B naar A+ met eWP.
						
						parameter<String> S_H_AeWP: ['Criteria/never']; // naar A+ met eWP
						parameter<String> S_T_AeWP: ['Criteria/never']; // van tussenlabel naar A+ met eWP
						parameter<String> S_B_AeWP: ['Criteria/never']; // van B naar A+ met eWP.
						parameter<String> S_AP_AeWP:['Criteria/never'];  // van A+ zonder eWP naar A+ met eWP
	
						parameter<bool> SpringRendabel : [ true ] ;
					}
				}
				container BestaandeWoning := Generiek;
				container BestaandeUtil   := Generiek;
				container BestaandeGlTb   := Generiek;
				container NieuwbouwWoning := BestaandeWoning;
				container NieuwbouwUtil   := BestaandeUtil;
				container NieuwbouwGlTb   := BestaandeGlTb;
			}
		}
	
		container Voorkeuren := Basis/Voorkeuren
		{
			container GebiedsOpties
			{
				parameter<UInt32> Aantal: [ 8 ];
				
				parameter<Classifications/GebiedsOptie> Optie1 := Classifications/GebiedsOptie/V/Restwarmte;
				parameter<Classifications/GebiedsOptie> Optie2 := Classifications/GebiedsOptie/V/BioWKK;
				parameter<Classifications/GebiedsOptie> Optie3 := Classifications/GebiedsOptie/V/Geothermie;
				parameter<Classifications/GebiedsOptie> Optie4 := Classifications/GebiedsOptie/V/Lt30_30;
				parameter<Classifications/GebiedsOptie> Optie5 := Classifications/GebiedsOptie/V/Lt30_50;
				parameter<Classifications/GebiedsOptie> Optie6 := Classifications/GebiedsOptie/V/Lt30_70;
				parameter<Classifications/GebiedsOptie> Optie7 := Classifications/GebiedsOptie/V/TEO;
				parameter<Classifications/GebiedsOptie> Optie8 := Classifications/GebiedsOptie/V/WKO;
				
				
				
			}
		}
	}
	
	container Stap_2 := Basis, using = "Units"
	{
		container RuimtelijkeVraag := Basis/RuimtelijkeVraag
		{
			container Lokaal := Basis/RuimtelijkeVraag/Lokaal
			{
				container Generiek := Basis/RuimtelijkeVraag/Lokaal/Generiek
				{
					container Verbeteringen := Basis/RuimtelijkeVraag/Lokaal/Generiek/Verbeteringen
					{
						parameter<String> S_H_B:   ['Criteria/never']; // was: Sprong B (een initiele sprong)
						parameter<String> S_H_AP:  ['Criteria/never']; // was: Sprong C (een initiele sprong)
						parameter<String> S_T_B:   ['Criteria/never']; // was: Sprong D (een vervolgsprong)
						parameter<String> S_T_AP:  ['Criteria/never']; // was: Sprong E (een vervolgsprong)
						parameter<String> S_B_AP:  ['Criteria/never']; // was: Sprong F (een vervolgsprong)
	
						parameter<String> S_H_BeWP: ['Criteria/always']; // naar A+ met eWP
						parameter<String> S_T_BeWP: ['Criteria/always']; // van tussenlabel naar A+ met eWP
						parameter<String> S_B_BeWP: ['Criteria/always']; // van B naar A+ met eWP.
						
						parameter<String> S_H_AeWP: ['Criteria/always']; // naar A+ met eWP
						parameter<String> S_T_AeWP: ['Criteria/always']; // van tussenlabel naar A+ met eWP
						parameter<String> S_B_AeWP: ['Criteria/always']; // van B naar A+ met eWP.
						parameter<String> S_AP_AeWP:['Criteria/always'];  // van A+ zonder eWP naar A+ met eWP
	
						parameter<bool> SpringMaatschappelijk : [ true ] ;
					}
				}
				container BestaandeWoning := Generiek;
				container BestaandeUtil   := Generiek;
				container BestaandeGlTb   := Generiek;
				container NieuwbouwWoning := BestaandeWoning;
				container NieuwbouwUtil   := BestaandeUtil;
				container NieuwbouwGlTb   := BestaandeGlTb;
			}
		}
	
		container Voorkeuren := Basis/Voorkeuren
		{
			container GebiedsOpties
			{
				parameter<UInt32> Aantal: [ 0 ];
				
// 				parameter<Classifications/GebiedsOptie> Optie1 := Classifications/GebiedsOptie/V/TEO;
// 				parameter<Classifications/GebiedsOptie> Optie2 := Classifications/GebiedsOptie/V/Lt30_70;
// 				parameter<Classifications/GebiedsOptie> Optie3 := Classifications/GebiedsOptie/V/Lt30_50;
// 				parameter<Classifications/GebiedsOptie> Optie4 := Classifications/GebiedsOptie/V/Lt30_30;
// 				parameter<Classifications/GebiedsOptie> Optie5 := Classifications/GebiedsOptie/V/WKO;
// 				parameter<Classifications/GebiedsOptie> Optie6 := Classifications/GebiedsOptie/V/BioWKK;
// 				parameter<Classifications/GebiedsOptie> Optie7 := Classifications/GebiedsOptie/V/Geothermie;
// 				parameter<Classifications/GebiedsOptie> Optie8 := Classifications/GebiedsOptie/V/Restwarmte;
			}
		}
	}
}