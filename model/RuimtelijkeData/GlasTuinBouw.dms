//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//       Deze DMS-file wordt aangeroepen door stam.dms                                  //
//       In deze configuratiefile wordt de brondata voor de GlasTuinBouw geconfigureerd //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container GlasTuinBouw
{
	// TODO @Bas: SourceData Opschonen: REMOVE "%sourceDataProjDir%/vraag/glastuinbouw/gltb_180219_leeg.*"
	unit<uint32> bestaand:
		StorageName     = "%sourceDataProjDir%/vraag/glastuinbouw/gltb_180219.dbf",
		DialogData      = "point",
		DialogType      = "Map",
		StorageReadOnly = "True",
		SyncMode        = "All",
		url             = "%sourceDataProjDir%/vraag/glastuinbouw/Werkwijze_aanmaak_huidige_glastuinbouw_tbv_Vesta33.pdf",
		FreeData        = "False"
	{
		attribute<rdc_meter> point:
			StorageName     = "%sourceDataProjDir%/vraag/glastuinbouw/gltb_180219.shp",
			StorageReadOnly = "True";

		attribute<Invoer/RuimtelijkeData/StudieGebied/buurt>    buurt_rel    := point_in_polygon(point, Invoer/RuimtelijkeData/StudieGebied/buurt/geometry);
		attribute<Invoer/RuimtelijkeData/StudieGebied/gemeente> gemeente_rel := point_in_polygon(point, Invoer/RuimtelijkeData/StudieGebied/gemeente/geometry);

		attribute<Classifications/GLTB> GLTB_Code;
		attribute<m2>                   Opp_M2;
	}

	container Af :=
		for_each_ndva(Classifications/ZichtJaar/HasMutations ? Classifications/ZichtJaar/name : '',
			Geography/rdc_grids/m100, bool,
			SpecifiekeInstellingen/WloScenarioFolder+'/'+Classifications/ZichtJaar/period_name+'/GLTB/Af.tif'
		);

	container Bij :=
		for_each_ndva(Classifications/ZichtJaar/HasMutations ? Classifications/ZichtJaar/name : '',
			Geography/rdc_grids/m100, bool,
			SpecifiekeInstellingen/WloScenarioFolder+'/'+Classifications/ZichtJaar/period_name+'/GLTB/Bij.tif'
		);

	unit<uint32> bestaand_studiegebied:= Subset(IsDefined(bestaand/gemeente_rel))
	,	DialogData  = "point"
	,	DialogType  = "Map"
	{
		attribute<rdc_meter>            point     := bestaand/point[nr_OrgEntity];
		attribute<Studiegebied/buurt>   buurt_rel := bestaand/buurt_rel[nr_OrgEntity];
		attribute<Classifications/GLTB> GLTB_Code := bestaand/GLTB_Code[nr_OrgEntity];
		attribute<m2>                   Opp_M2    := bestaand/Opp_M2[nr_OrgEntity];
		attribute<string>               TYPE_GLTB := bestaand/TYPE_GLTB[nr_OrgEntity];
	}

	container Af_studiegebied :=
		for_each_nedv(Classifications/ZichtJaar/HasMutations ? Classifications/ZichtJaar/name : ''
			, 'Af/' +  Classifications/ZichtJaar/name  + '&& Studiegebied/selected_per_m100'
			, Geography/rdc_grids/m100
			, bool
		);

	container Bij_studiegebied :=
		for_each_nedv(Classifications/ZichtJaar/HasMutations ? Classifications/ZichtJaar/name : ''
			, 'Bij/' +  Classifications/ZichtJaar/name  + '&& Studiegebied/selected_per_m100'
			, Geography/rdc_grids/m100
			, bool
		);

	container verdeling
	{
		container NL
		{
			attribute<units/m2>    Oppervlakte  (Classifications/GLTB) := sum(GlasTuinBouw/bestaand/Opp_M2 , GlasTuinBouw/bestaand/GLTB_Code);
			attribute<units/ratio> GLTB         (Classifications/GLTB) := scalesum(Oppervlakte, 1.0);
		}
	}
}