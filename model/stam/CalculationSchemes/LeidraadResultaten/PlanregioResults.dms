//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container PlanregioResults
{
	attribute<nrWoningen> nrWEQ    (Planregio) :=
		  sum(BebouwingsComponenten/BestaandeWoning/RuimtelijkeVraagComponent/nrAansluitingen / 1.0[nrAansl / nrWoningen], BebouwingsComponenten/BestaandeWoning/Planregio_rel)
		+ sum(BebouwingsComponenten/BestaandeUtil/RuimtelijkeVraagComponent/Oppervlakte / 130[m2 / nrWoningen], BebouwingsComponenten/BestaandeUtil/Planregio_rel);
	attribute<Ratio>      R_StadV  (Planregio) := Invoer/RuimtelijkeData/StudieGebied/buurt/R_StadV;
	attribute<Ratio>      R_AardG  (Planregio) := 1D - R_StadV;
	attribute<string>     IsWater  (Planregio) := Invoer/RuimtelijkeData/StudieGebied/buurt/IsWater;
	parameter<bool>       Groengas             := Tussenresultaten/Voorkeuren/Afweging/IsGroenGas;

	//Statische indicatoren per buurt. Met Statisch wordt bedoeld dat resultaten niet verschillen per run.
	container Statisch
	{
		attribute<bool> uitgesloten_bool (Planregio) := Invoer/RuimtelijkeData/leidraad_oktober_2019/uitgesloten_bool;

		unit<uint32>  table := PlanRegio
		{
			attribute<string>     BU_CODE                := I01_buurtcode;
			attribute<string>     I01_buurtcode          := Invoer/RuimtelijkeData/StudieGebied/buurt/BU_CODE;
			attribute<string>     I02_buurtnaam          := uitgesloten_bool ? 'UITGESLOTEN' : replace(Invoer/RuimtelijkeData/StudieGebied/buurt/BU_NAAM, ',' , '');
			attribute<string>     I03_wijkcode           := Invoer/RuimtelijkeData/StudieGebied/buurt/WK_CODE;
			attribute<string>     I04_wijknaam           := uitgesloten_bool ? 'UITGESLOTEN' : replace(Invoer/RuimtelijkeData/StudieGebied/buurt/WK_NAAM, ',' , '');
			attribute<string>     I05_gemeentecode       := Invoer/RuimtelijkeData/StudieGebied/buurt/GM_CODE;
			attribute<string>     I06_gemeentenaam       := uitgesloten_bool ? 'UITGESLOTEN' : replace(Invoer/RuimtelijkeData/StudieGebied/buurt/GM_NAAM, ',' , '');
			attribute<string>     I07_energieregionaam   := uitgesloten_bool ? 'UITGESLOTEN' : replace(Invoer/RuimtelijkeData/StudieGebied/buurt/ER_NAAM, ',' , '');
			attribute<string>     I08_provincienaam      := uitgesloten_bool ? 'UITGESLOTEN' : replace(Invoer/RuimtelijkeData/StudieGebied/buurt/PROV_NAAM, ',' , '');
			attribute<nrAansl>    I09_aantal_woningen    := uitgesloten_bool ? 0[nrAansl]    : roundUp(sum(BebouwingsComponenten/BestaandeWoning/RuimtelijkeVraagComponent/nrAansluitingen, BebouwingsComponenten/BestaandeWoning/PlanRegio_rel))[nrAansl];
			attribute<nrAansl>    I10_aantal_utiliteit   := uitgesloten_bool ? 0[nrAansl]    : roundUp(sum(BebouwingsComponenten/BestaandeUtil/RuimtelijkeVraagComponent/nrAansluitingen  , BebouwingsComponenten/BestaandeUtil/PlanRegio_rel))[nrAansl];
			attribute<nrWoningen> I11_woningequivalenten := uitgesloten_bool ? 0[nrwoningen] : roundUp(nrWEQ)[nrWoningen]; //130m2 utiliteit = 1 WEQ
			attribute<string>     I12_Uitgesloten        := string(uitgesloten_bool);
		}
		unit<uint32> variable := SubItem_PropValues(table,'name');
		container export_csv := Rapportage/WriteTable32ToCSV(table, AsList(variable/name, ';'), FolderInfo/OutputFolder+'/Statisch.csv');
		
		unit<uint32> table_vergelijking := table, StorageName = "=FolderInfo/OutputFolder+'/Statisch.fss'"
		{
			attribute<String>     BU_CODE                := I01_buurtcode;
			attribute<nrWoningen> I11_woningequivalenten := Uitgesloten_bool ? 0.0[nrwoningen] : nrWEQ; // voor de vergelijking, daarvoor GEEN integers wegschrijven.
		}
	}

	//dynamische indicatoren op hoofdlijnen
	container Hoofdindicatoren
	{
		unit<uint32> extensief := Invoer/DefaultInstellingen/Basis/PlanRegio
		{
			
			//                VRAAG
			
			attribute<GJ_yr> H01_Vraag_totaal := add(H02_Vraag_RV, H03_Vraag_TW, H04_Vraag_Vent, H05_Vraag_K, H06_Vraag_App);

			attribute<GJ_yr> H02_Vraag_RV :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
						  sum(BebouwingsComponenten/BestaandeWoning/results/Functioneel/Vj_RV, BebouwingsComponenten/BestaandeWoning/PlanRegio_rel)
						+ sum(BebouwingsComponenten/BestaandeUtil/results/Functioneel/Vj_RV, BebouwingsComponenten/BestaandeUtil/PlanRegio_rel)
						,0[GJ_yr]);

			attribute<GJ_yr> H03_Vraag_TW :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
						  sum(BebouwingsComponenten/BestaandeWoning/results/Functioneel/Vj_TW, BebouwingsComponenten/BestaandeWoning/PlanRegio_rel)
						+ sum(BebouwingsComponenten/BestaandeUtil/results/Functioneel/Vj_TW, BebouwingsComponenten/BestaandeUtil/PlanRegio_rel)
						,0[GJ_yr]);

			attribute<GJ_yr> H04_Vraag_Vent :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
						  sum(BebouwingsComponenten/BestaandeWoning/results/Functioneel/Vj_Vent, BebouwingsComponenten/BestaandeWoning/PlanRegio_rel)
						+ sum(BebouwingsComponenten/BestaandeUtil/results/Functioneel/Vj_Vent, BebouwingsComponenten/BestaandeUtil/PlanRegio_rel)
						,0[GJ_yr]);

			attribute<GJ_yr> H05_Vraag_K :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr]
					: makedefined(
						  sum(BebouwingsComponenten/BestaandeWoning/results/Functioneel/Vj_K, BebouwingsComponenten/BestaandeWoning/PlanRegio_rel)
						+ sum(BebouwingsComponenten/BestaandeUtil/results/Functioneel/Vj_K, BebouwingsComponenten/BestaandeUtil/PlanRegio_rel)
						,0[GJ_yr]);

			attribute<GJ_yr> H06_Vraag_App :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
						  sum(BebouwingsComponenten/BestaandeWoning/results/Functioneel/Vj_App, BebouwingsComponenten/BestaandeWoning/PlanRegio_rel)
						+ sum(BebouwingsComponenten/BestaandeUtil/results/Functioneel/Vj_App, BebouwingsComponenten/BestaandeUtil/PlanRegio_rel)
						,0[GJ_yr]);
						
			//            INPUTS
			
			attribute<GJ_yr> H08_Input_totaal := H09_Input_aardgas + H10_Input_duurzaamgas + H11_Input_elektriciteit + H12_input_MTwarmtebronnen + H13_input_LTwarmtebronnen + H14_Saldo_Omgevingswarmte;
						
			attribute<GJ_yr> H09_Input_aardgas :=
				(Statisch/Uitgesloten_bool || GroenGas || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
							  R_AardG * sum(Allocatie/BestaandeWoning/metervraag/Aardgas, BebouwingsComponenten/BestaandeWoning/PlanRegio_rel)
							+ R_AardG * sum(Allocatie/BestaandeUtil/metervraag/Aardgas, BebouwingsComponenten/BestaandeUtil/PlanRegio_rel)
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_id_gas
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_wd_gas
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_ow_gas
							+ Ref2030/WarmteBestaand/Vj_Bijstook
						,0[GJ_yr]);
						
			attribute<GJ_yr> H10_Input_duurzaamgas :=
				(Statisch/Uitgesloten_bool || !GroenGas || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
							  R_AardG * sum(Allocatie/BestaandeWoning/metervraag/Aardgas, BebouwingsComponenten/BestaandeWoning/PlanRegio_rel)
							+ R_AardG * sum(Allocatie/BestaandeUtil/metervraag/Aardgas, BebouwingsComponenten/BestaandeUtil/PlanRegio_rel)
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_id_gas
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_wd_gas
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_ow_gas
							+ Ref2030/WarmteBestaand/Vj_Bijstook
						,0[GJ_yr]);
						
			attribute<GJ_yr> H11_Input_elektriciteit :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
							  R_AardG * sum(Allocatie/BestaandeWoning/metervraag/Elektriciteit, BebouwingsComponenten/BestaandeWoning/PlanRegio_rel)
							+ R_AardG * sum(Allocatie/BestaandeUtil/metervraag/Elektriciteit, BebouwingsComponenten/BestaandeUtil/PlanRegio_rel)
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_id_elek
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_wd_elek
							+ R_AardG * StateNaAllocatie/totaal/verbruik/V_ow_elek
							+ Ref2030/WarmteBestaand/Vj_wd_elek
						,0[GJ_yr]);
						
			attribute<GJ_yr> H12_input_MTwarmtebronnen :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
							 (sum(Allocatie/BestaandeWoning/metervraag/Warmte_LT, BebouwingsComponenten/BestaandeWoning/PlanRegio_rel) <= 0.0[gj_yr]?
							  R_AardG * StateNaAllocatie/Totaal/Verbruik/V_warmte : 0.0[gj_yr])
							+ Ref2030/WarmteBestaand/Vj_ow_warmte
						,0[GJ_yr]);
						
			attribute<GJ_yr> H13_input_LTwarmtebronnen :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
							  sum(Allocatie/BestaandeWoning/metervraag/Warmte_LT, BebouwingsComponenten/BestaandeWoning/PlanRegio_rel) > 0.0[gj_yr]?
							  R_AardG * StateNaAllocatie/Totaal/Verbruik/V_warmte : 0.0[gj_yr]
						,0[GJ_yr]);
						
			attribute<GJ_yr> H14_Saldo_Omgevingswarmte :=
				(Statisch/Uitgesloten_bool || nrWEQ == 0[nrWoningen])
					? 0[GJ_yr] 
					: makedefined(
							H01_Vraag_totaal - H09_Input_aardgas - H10_Input_duurzaamgas - H11_Input_elektriciteit - H12_input_MTwarmtebronnen - H13_input_LTwarmtebronnen
						,0[GJ_yr]);

			attribute<Eur_yr> H16_Nat_meerkost :=
				(statisch/uitgesloten_bool || isStap0)
					? 0[Eur_yr] 
					: makedefined(
						 NationaleKosten/TotaalUitstoot/Delta_nat_kosten //nationale meerkosten per woningequivalent
						,0[Eur_yr]);
		}

		unit<uint32> table := extensief
		{
			attribute<string>    BU_CODE          := Statisch/table/I01_buurtcode;
			attribute<GJ_yr_WEQ> H01_vraag_totaal := round(makedefined(extensief/H01_vraag_totaal  / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H02_Vraag_RV     := round(makedefined(extensief/H02_Vraag_RV      / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H03_Vraag_TW     := round(makedefined(extensief/H03_Vraag_TW      / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H04_Vraag_Vent   := round(makedefined(extensief/H04_Vraag_Vent    / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H05_Vraag_K      := round(makedefined(extensief/H05_Vraag_K       / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H06_Vraag_App    := round(makedefined(extensief/H06_Vraag_App     / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];

			attribute<GJ_yr_ha>  H07_vraag_tot_ha := 
				round(
					statisch/Uitgesloten_bool || nrWEQ == 0.0[nrWoningen] 
						? 0.0[GJ_yr_ha]
						: makedefined(
							 extensief/H01_vraag_totaal / Invoer/RuimtelijkeData/StudieGebied/buurt/Area_ov_r_land_com
							,0.0[GJ_yr_ha])
				)[GJ_yr_ha];

			attribute<GJ_yr_WEQ> H08_input_totaal          := round(makedefined(extensief/H08_input_totaal          / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H09_input_aardgas         := round(makedefined(extensief/H09_input_aardgas         / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H10_input_duurzaamgas     := round(makedefined(extensief/H10_input_duurzaamgas     / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H11_input_elektriciteit   := round(makedefined(extensief/H11_input_elektriciteit   / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H12_input_MTwarmtebronnen := round(makedefined(extensief/H12_input_MTwarmtebronnen / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H13_input_LTwarmtebronnen := round(makedefined(extensief/H13_input_LTwarmtebronnen / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			attribute<GJ_yr_WEQ> H14_saldo_omgevingswarmte := round(makedefined(extensief/H14_saldo_omgevingswarmte / nrWEQ, 0[GJ_yr_WEQ]))[GJ_yr_WEQ];
			
			attribute<ton_yr> H15_CO2_reductie :=
				round(
					statisch/uitgesloten_bool
						? 0[ton_yr]
						: makedefined(
							 NationaleKosten/TotaalUitstoot/Delta_CO2 //verschil in CO2 uitstoot tov startjaar
							,0[ton_yr])
				)[ton_yr];

			attribute<Eur_yr> H16_Nat_abskosten :=
				round(
					statisch/uitgesloten_bool
						? 0[Eur_yr] 
						: makedefined(
							 NationaleKosten/TotaalUitstoot/Delta_nat_kosten //nationale meerkosten ten opzichte van startjaar
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_ton> H17_Nat_meerkost_CO2 :=
				round(
					(statisch/Uitgesloten_bool || isStap0 )
						? 0[eur_ton]
						: makedefined(
							 (NationaleKosten/TotaalUitstoot/Delta_nat_kosten / NationaleKosten/TotaalUitstoot/Delta_CO2) //nationale meerkosten per vermeden ton CO2
							,0.0[EUR_ton])
				)[Eur_ton];

			attribute<Eur_yr_WEQ> H18_Nat_meerkost_WEQ := round(makedefined(extensief/H16_Nat_meerkost / nrWEQ, 0[Eur_yr_WEQ]))[Eur_yr_WEQ];
			
			attribute<eur_m3> H19_waarde_hernieuwbaar_gas          := const(0.0[eur_m3], PlanRegio);
			attribute<string> H20_beschikbaarheid_hernieuwbaar_gas := const('onbekend', PlanRegio);
		}

		unit<uint32> variable := SubItem_PropValues(table,'name');
		container export_csv := Rapportage/WriteTable32ToCSV(table, AsList(variable/name, ';'), FolderInfo/OutputFolder+'/Hoofdindicatoren.csv');
	}

	//nationale kosten absoluut en CO2 uitstoot
	container NationaleKosten
	{
		container OrigKosten
		{
			attribute<Eur_yr> K09_Inkoop_Warmte  (Planregio) := = isStap0 ? 'const(0[Eur_yr], PlanRegio)' : 'StartJaar/PlanRegioResults/NationaleKosten/Table/K09_Inkoop_Warmte';
			attribute<Eur_yr> K10_Inkoop_Gas     (Planregio) := = isStap0 ? 'const(0[Eur_yr], PlanRegio)' : 'StartJaar/PlanRegioResults/NationaleKosten/Table/K10_Inkoop_Gas';
			attribute<Eur_yr> K11_Inkoop_Elek    (Planregio) := = isStap0 ? 'const(0[Eur_yr], PlanRegio)' : 'StartJaar/PlanRegioResults/NationaleKosten/Table/K11_Inkoop_Elek';
			attribute<Eur_yr> K12_Gebouw_OenM    (Planregio) := = isStap0 ? 'const(0[Eur_yr], PlanRegio)' : 'StartJaar/PlanRegioResults/NationaleKosten/Table/K12_Gebouw_OenM';
			attribute<Eur_yr> K13_Wnet_OenM      (Planregio) := = isStap0 ? 'const(0[Eur_yr], PlanRegio)' : 'StartJaar/PlanRegioResults/NationaleKosten/Table/K13_Wnet_OenM';
			attribute<Eur_yr> K14_Enet_Gnet_OenM (Planregio) := = isStap0 ? 'const(0[Eur_yr], PlanRegio)' : 'StartJaar/PlanRegioResults/NationaleKosten/Table/K14_Enet_Gnet_OenM';
		}

		unit<uint32> table := Invoer/DefaultInstellingen/Basis/PlanRegio
		{
			attribute<string> BU_CODE            := Statisch/table/I01_buurtcode;
			attribute<Eur_yr> K01_Enet_verzwaren :=
				round(
					statisch/Uitgesloten_bool
						? 0[Eur_yr]
						: makedefined(
							  R_AardG * Netwerken/Kosten/Ki_verzw_e_aansl        * NCW/mr50/AnnualisationFactor
							+ R_AardG * Netwerken/Kosten/cumulatief/Ki_verzw_MSR * NCW/mr50/AnnualisationFactor
							+ R_AardG * Netwerken/Kosten/cumulatief/Ki_verzw_LS  * NCW/mr50/AnnualisationFactor //jaarlijkse kapitaallasten verzwaren elektriciteits
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K02_Gnet_verwijderen :=
				round(
					statisch/Uitgesloten_bool 
						? 0[Eur_yr]
						: makedefined(
							 R_AardG * Netwerken/Aardgas/Kji_verwijderen //jaarlijkse kapitaallasten verwijderen gasnetten
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K03_Gnet_aanpassen :=
				round(
					statisch/Uitgesloten_bool 
						? 0[Eur_yr]
						: makedefined(
							 R_AardG * StateNaAllocatie/totaal/jaarlijks/wd/Kmi_wd_Gnet       //jaarlijkse kapitaallasten aanpassen gasnetten
							,0[Eur_yr])
					)[Eur_yr];

			attribute<Eur_yr> K04_Wnet_buurt :=
				round(
					statisch/Uitgesloten_bool 
					? 0[Eur_yr] 
					: makedefined(
						 R_AardG * StateNaAllocatie/totaal/jaarlijks/wd/Kmi_wd       //jaarlijkse kapitaallasten wijkdistributie nieuwe warmtenetten
						,0[Eur_yr])
				)[Eur_yr];
				
			attribute<Eur_yr> K05_Wnet_pand :=
				round(
					statisch/Uitgesloten_bool 
					? 0[Eur_yr] 
					: makedefined(
						  R_AardG * StateNaAllocatie/totaal/jaarlijks/id/Kmi_id       //jaarlijkse kapitaallasten inpandig nieuwe warmtenetten
						+ R_AardG * StateNaAllocatie/totaal/jaarlijks/ge/Kmi_ge_ov    //jaarlijkse kapitaallasten ongeriefsvergoeding nieuwe warmtenetten
						+ R_AardG * StateNaAllocatie/totaal/jaarlijks/ge/Kmi_ge_pm    //jaarlijkse kapitaallasten projectmanagement nieuwe warmtenetten
						,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K06_Wnet_transport :=
				round(
					statisch/Uitgesloten_bool 
						? 0[Eur_yr] 
						: makedefined(
							 R_StadV > 0[ratio] 
								? 0[Eur_yr] 
								: R_AardG * StateNaAllocatie/totaal/jaarlijks/pt/Kmi_pt //transportleidingen nieuwe warmtenetten
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K07_Wnet_opwekking :=
				round(
					statisch/Uitgesloten_bool
						? 0[Eur_yr]
						: makedefined(
							 R_AardG * StateNaAllocatie/totaal/jaarlijks/ow/Kmi_ow //realisatie bronnen nieuwe warmtenetten
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K08_Gebouw_schil :=
				round(
					statisch/Uitgesloten_bool 
						? 0[Eur_yr] 
						: makedefined(
							 maatschappelijk/gebouwen/Kmi_GebouwVerbetering //kosten schilverbetering
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K09_Gebouw_installatie :=
				round(
					statisch/Uitgesloten_bool 
					? 0[Eur_yr] 
					: makedefined(
						  R_AardG * Maatschappelijk/LokaleEnergieProductie/Ki_Totaal30 * NCW/mr30/AnnualisationFactor//jaarlijkse kapitaallasten lokale opwekkingsinstallaties (over 30 jaar)
						+ R_AardG * Maatschappelijk/LokaleEnergieProductie/Ki_Totaal15 * NCW/mr15/AnnualisationFactor //jaarlijkse kapitaallasten lokale opwekkingsinstallaties (over 15 jaar)
						- R_AardG * Eindgebruiker/BestaandeWoning/LokaleEnergieProductie/Oi_HR * NCW/mr15/AnnualisationFactor //opbrengsten vermeden gasketels bestaande woningen zonder bestaand warmtenet
						- R_AardG * Eindgebruiker/BestaandeUtil/LokaleEnergieProductie/Oi_HR * NCW/mr15/AnnualisationFactor //opbrengsten vermeden gasketels bestaande utiliteit zonder bestaand warmtenet
						+ R_AardG * Eindgebruiker/BestaandeWoning/LokaleEnergieProductie/Ki_HR_afschrijving * NCW/mr15/AnnualisationFactor //afschrijvingen gasketels bestaande woningen zonder bestaand warmtenet
						+ R_AardG * Eindgebruiker/BestaandeUtil/LokaleEnergieProductie/Ki_HR_afschrijving * NCW/mr15/AnnualisationFactor //afschrijvingen gasketels bestaande utiliteit zonder bestaand warmtenet
						,0[Eur_yr])
				)[Eur_yr];
				
			attribute<eur_yr> K10_Totaal_Kapitaalslasten :=
				  K01_Enet_verzwaren + K02_Gnet_verwijderen + K03_Gnet_aanpassen
				+ K04_Wnet_buurt     + K05_Wnet_pand        + K06_Wnet_transport + K07_Wnet_opwekking
				+ K08_Gebouw_schil   + K09_Gebouw_installatie;

			attribute<Eur_yr> K09_Inkoop_Warmte :=
				round(
					statisch/Uitgesloten_bool 
					? 0[Eur_yr] 
					: makedefined(
						 R_AardG * StateNaAllocatie/totaal/jaarlijks/ow/Kj_ow_productie //productie warmte nieuwe warmtenetten
						+ Ref2030/WarmteBestaand/Kj_ow_productie
						- OrigKosten/K09_Inkoop_Warmte
						,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K10_Inkoop_Gas:= 
				round(
					statisch/Uitgesloten_bool 
						? 0[Eur_yr] 
						: makedefined(
							  R_AardG * StateNaAllocatie/totaal/jaarlijks/ow/Km_ow_gas //kosten gas opwekking warmte nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/wd/Km_wd_gas //kosten gas hulpketels in nieuwe warmtenetten
							+ Ref2030/WarmteBestaand/Kj_wd_gas
							+ R_AardG * GasKostenGebouwen/Km_totaal //kosten gas in gebouwen
							- OrigKosten/K10_Inkoop_Gas
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K11_Inkoop_Elek :=
				round(
					statisch/Uitgesloten_bool
						? 0[Eur_yr] 
						: makedefined(
							  R_AardG * StateNaAllocatie/totaal/jaarlijks/ow/Km_ow_elek //elektriciteitskosten opwekking in nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/id/Km_id_elek //elektriciteitskosten inpandig in nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/wd/Km_wd_elek //elektriciteitskosten distributie in nieuwe warmtenetten
							+ Ref2030/WarmteBestaand/Kj_wd_elek
							+ R_AardG * ElekKostenGebouwen_eWP/Km_totaal //elektriciteitskosten warmtepompen in gebouwen zonder bestaande warmtenetten
							+ R_AardG * ElekKostenGebouwen_CVpomp/Km_totaal //elektriciteitskosten pompenergie in gebouwen zonder bestaande warmtenetten
							+ Ref2030/WarmteBestaand/Kj_ge_elekK
							+ R_AardG * ElekKostenGebouwen_APP/Km_totaal //elektriciteitskosten gebouwen volgens nieuwe staffel
							+ /Ref2030/WarmteBestaand/Kj_ge_elekAp
							+ R_AardG * ElekKostenGebouwen_Koude/Km_totaal //elektriciteitskosten gebouwen volgens staffel in bestaand warmtenet
							- OrigKosten/K11_Inkoop_Elek
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K12_Gebouw_OenM :=
				round(
					statisch/Uitgesloten_bool 
						? 0[Eur_yr] 
						: makedefined(
							  R_AardG * maatschappelijk/LokaleEnergieProductie/Kj_Onderhoud //onderhoud lodake opwekkingsinstallaties
							+ R_AardG * maatschappelijk/LokaleEnergieProductie/Kj_Admin //administratie lokale opwekkingsinstallaties
							+ maatschappelijk/gebouwen/Kj_Onderhoud //onderhoud schilsprongen
							+ maatschappelijk/gebouwen/Kj_Admin //administratie schilsprongen
							- OrigKosten/K12_Gebouw_OenM
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K13_Wnet_OenM :=
				round(
					statisch/Uitgesloten_bool
						? 0[Eur_yr]
						: makedefined(
							  R_AardG * StateNaAllocatie/totaal/jaarlijks/ow/Kj_ow_oh  //onderhoudskosten opwekking nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/ow/Kj_ow_adm //administratiekosten opwekking nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/pt/Kj_pt_oh  //onderhoudskosten transport nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/pt/Kj_pt_adm //administratiekosten transport nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/id/Kj_id_oh  //onderhoudskosten inpandig nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/id/Kj_id_adm //administratiekosten inpandig nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/wd/Kj_wd_oh  //onderhoudskosten distributie nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/wd/Kj_wd_adm //administratiekosten distributie nieuwe warmtenetten
							+ R_AardG * StateNaAllocatie/totaal/jaarlijks/lv/Oj_lv_vastrecht * Tussenresultaten/Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_lv_Admin * 1[yr] //administratiekosten leverancier nieuwe warmtenetten
							+ Ref2030/WarmteBestaand/Kj_lv_admin
							+ Ref2030/WarmteBestaand/Kj_id_oh
							+ Ref2030/WarmteBestaand/Kj_wd_oh
							+ Ref2030/WarmteBestaand/Kj_wd_adm
							+ Ref2030/WarmteBestaand/Kj_pt_oh
							+ Ref2030/WarmteBestaand/Kj_pt_adm
							+ Ref2030/WarmteBestaand/Kj_ow_oh
							+ Ref2030/WarmteBestaand/Kj_ow_adm
							- OrigKosten/K13_Wnet_OenM
							,0[Eur_yr])
				)[Eur_yr];

			attribute<Eur_yr> K14_Enet_Gnet_OenM :=
				round(
					statisch/Uitgesloten_bool 
						? 0[Eur_yr] 
						: makedefined(
							  R_AardG * Netwerken/Aardgas/Kj_oh //onderhoudskosten gasnet
							+ Ref2030/WarmteBestaand/Kj_gnet_oh
							+ R_AardG * Netwerken/Elektriciteit/Kj_oh	//onderhoudskosten elektriciteitsnet
							+ Ref2030/WarmteBestaand/Kj_enet_oh
							+ OrigKosten/K14_Enet_Gnet_OenM
							,0[Eur_yr])
				)[Eur_yr];
		}
		unit<uint32> variable := SubItem_PropValues(table,'name');
		container export_csv := Rapportage/WriteTable32ToCSV(table, AsList(variable/name, ';'), FolderInfo/OutputFolder+'/NationaleKosten.csv');		

		container TotaalUitstoot
		{
			attribute<Eur_yr> Natkosten_abs (Planregio) :=
				  Table/K01_Enet_verzwaren  + Table/K02_Gnet_verwijderen   + Table/K03_Gnet_vervangen + Table/K14_Enet_Gnet_OenM
				+ Table/K04_Wnet_pand_buurt + Table/K05_Wnet_transport     + Table/K06_Wnet_opwekking + Table/K13_Wnet_OenM
				+ Table/K07_Gebouw_schil    + Table/K08_Gebouw_installatie + Table/K12_Gebouw_OenM
				+ Table/K09_Inkoop_Warmte   + Table/K10_Inkoop_Gas         + Table/K11_Inkoop_Elek;

			attribute<ton_yr> Orig_CO2_ton (Planregio) :=
				  StartJaar/EnergyResults/CO2/gebouwen/Aardgas/totaal / 1000.0[kg_yr / ton_yr]
				+ StartJaar/EnergyResults/CO2/GebiedsOpties/totaal    / 1000.0[kg_yr / ton_yr];

			attribute<ton_yr> New_CO2_ton (Planregio) :=
				Groengas
					? const(0[ton_yr], PlanRegio)
					:  EnergyResults/CO2/gebouwen/Aardgas/totaal / 1000.0[kg_yr / ton_yr]
					 + EnergyResults/CO2/GebiedsOpties/totaal    / 1000.0[kg_yr / ton_yr];

			attribute<ton_yr> Delta_CO2        (Planregio) := Orig_CO2_ton - New_CO2_ton;
			attribute<Eur_yr> Orig_nat_kosten  (Planregio) := StartJaar/PlanRegioResults/NationaleKosten/TotaalUitstoot/Natkosten_abs;
			attribute<Eur_yr> Delta_nat_kosten (Planregio) := Natkosten_abs;
		}

		container ElekKostenGebouwen_APP :=
			for_each_nedv(Classifications/BebouwingsComponent/Name, 
				replace(
					'sum(Allocatie/@BC@/Elektriciteit/Km_elek_APP, BebouwingsComponenten/@BC@/PlanRegio_rel)'
				,	'@BC@', Classifications/BebouwingsComponent/Name
				)
				,PlanRegio
				,Eur_yr
			)
		{
			attribute<Eur_yr> Km_Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
		}
		container ElekKostenGebouwen_APP_exWP :=
			for_each_nedv(Classifications/BebouwingsComponent/Name, 
				replace(
					'sum(Allocatie/@BC@/Elektriciteit/Km_elek_APP_exWP, BebouwingsComponenten/@BC@/PlanRegio_rel)'
				,	'@BC@', Classifications/BebouwingsComponent/Name
				)
				,PlanRegio
				,Eur_yr
			)
		{
			attribute<Eur_yr> Km_Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
		}
		container ElekKostenGebouwen_CVpomp :=
			for_each_nedv(Classifications/BebouwingsComponent/Name, 
				replace(
					'sum(Allocatie/@BC@/Elektriciteit/Km_elek_CVpomp, BebouwingsComponenten/@BC@/PlanRegio_rel)'
				,	'@BC@', Classifications/BebouwingsComponent/Name
				)
				,PlanRegio
				,Eur_yr
			)
		{
			attribute<Eur_yr> Km_Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
		}
		container ElekKostenGebouwen_CVpomp_exWP :=
			for_each_nedv(Classifications/BebouwingsComponent/Name, 
				replace(
					'sum(Allocatie/@BC@/Elektriciteit/Km_elek_CVpomp_exWP, BebouwingsComponenten/@BC@/PlanRegio_rel)'
				,	'@BC@', Classifications/BebouwingsComponent/Name
				)
				,PlanRegio
				,Eur_yr
			)
		{
			attribute<Eur_yr> Km_Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
		}
		container ElekKostenGebouwen_eWP :=
			for_each_nedv(Classifications/BebouwingsComponent/Name, 
				replace(
					'sum(Allocatie/@BC@/Elektriciteit/Km_elek_eWP, BebouwingsComponenten/@BC@/PlanRegio_rel)'
				,	'@BC@', Classifications/BebouwingsComponent/Name
				)
				,PlanRegio
				,Eur_yr
			)
		{
			attribute<Eur_yr> Km_Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
		}
		container ElekKostenGebouwen_eWP_exWP :=
			for_each_nedv(Classifications/BebouwingsComponent/Name, 
				replace(
					'sum(Allocatie/@BC@/Elektriciteit/Km_elek_eWP_exWP, BebouwingsComponenten/@BC@/PlanRegio_rel)'
				,	'@BC@', Classifications/BebouwingsComponent/Name
				)
				,PlanRegio
				,Eur_yr
			)
		{
			attribute<Eur_yr> Km_Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
		}
		container ElekKostenGebouwen_Koude_exWP :=
			for_each_nedv(Classifications/BebouwingsComponent/Name, 
				replace(
					'sum(Allocatie/@BC@/Elektriciteit/Km_elek_Koude_exWP, BebouwingsComponenten/@BC@/PlanRegio_rel)'
				,	'@BC@', Classifications/BebouwingsComponent/Name
				)
				,PlanRegio
				,Eur_yr
			)
		{
			attribute<Eur_yr> Km_Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
		}
		container ElekKostenGebouwen_Koude :=
			for_each_nedv(Classifications/BebouwingsComponent/Name, 
				replace(
					'sum(Allocatie/@BC@/Elektriciteit/Km_elek_Koude, BebouwingsComponenten/@BC@/PlanRegio_rel)'
				,	'@BC@', Classifications/BebouwingsComponent/Name
				)
				,PlanRegio
				,Eur_yr
			)
		{
			attribute<Eur_yr> Km_Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
		}
		container GasKostenGebouwen :=
			for_each_nedv(Classifications/BebouwingsComponent/Name, 
				replace(
					'sum(Allocatie/@BC@/Aardgas/maatschappelijk, BebouwingsComponenten/@BC@/PlanRegio_rel)'
				,	'@BC@', Classifications/BebouwingsComponent/Name
				)
				,PlanRegio
				,Eur_yr
			)
		{
			attribute<Eur_yr> Km_Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
		}
	}
	
	container Aansluitingen
	{
		unit<uint32>  table := Invoer/DefaultInstellingen/Basis/PlanRegio
		{
			attribute<string> BU_CODE:= Statisch/table/I01_buurtcode;

			attribute<nrAansl> A01_Aansl_aardgas :=
				round(
					(statisch/Uitgesloten_bool || GroenGas)
					? 0[nrAansl]
					: makedefined(
						 R_AardG * Allocatie/aant_g_aansl_per_planregio
						,0[nrAansl])
				)[nrAansl];

			attribute<nrAansl> A02_Aansl_eWP :=
				round(
					statisch/Uitgesloten_bool
					? 0[nrAansl] 
					: makedefined(
						 R_AardG * Allocatie/BestaandeWoning/nrAsl_e_ewp
						,0[nrAansl])
				)[nrAansl];

			attribute<nrAansl> A03_Aansl_MT :=
				round(
					statisch/Uitgesloten_bool 
					? 0[nrAansl] 
					: makedefined(
						  R_AardG * StateNaAllocatie/nrAansluitinging/Restwarmte //nieuwe aansluitingen restwarmte
						+ R_AardG * StateNaAllocatie/nrAansluitinging/Geothermie //nieuwe aansluitingen geothermie
						+ R_AardG * StateNaAllocatie/nrAansluitinging/WijkWKK //nieuwe aansluitingen wijkwkk
						+ R_AardG * StateNaAllocatie/nrAansluitinging/BioWKK  //nieuwe aansluitingen biowkk
						+ Ref2030/WarmteBestaand/nrAansl_w_MT
						+ Ref2030/WarmteBestaand/nrAansl_i_MT
						,0[nrAansl])
				)[nrAansl];

			attribute<nrAansl> A04_Aansl_LT :=
				round(
					statisch/Uitgesloten_bool
					? 0[nrAansl]
					: makedefined(
						 R_AardG * StateNaAllocatie/nrAansluitinging/WKO +
						 R_AardG * StateNaAllocatie/nrAansluitinging/LT15_30 +
						 R_AardG * StateNaAllocatie/nrAansluitinging/LT15_50 +
						 R_AardG * StateNaAllocatie/nrAansluitinging/LT15_70 +
						 R_AardG * StateNaAllocatie/nrAansluitinging/LT30_30 +
						 R_AardG * StateNaAllocatie/nrAansluitinging/LT30_50 +
						 R_AardG * StateNaAllocatie/nrAansluitinging/LT30_70 +
						 R_AardG * StateNaAllocatie/nrAansluitinging/TEO
						,0[nrAansl])
				)[nrAansl];

			attribute<nrAansl> A05_Aansl_hWPgroengas :=
				round(
					statisch/Uitgesloten_bool
						? 0[nrAansl]
						: makedefined(
							 R_AardG * Allocatie/BestaandeWoning/nrAsl_e_hwp
							,0[nrAansl])
				)[nrAansl];

			attribute<nrAansl>	A06_Aansl_HRgroengas := 
				round(
					(statisch/Uitgesloten_bool || !GroenGas) 
						? 0[nrAansl] 
						: makedefined(
							 R_AardG * Allocatie/aant_g_aansl_per_planregio
							,0[nrAansl])
				)[nrAansl];
		}

		unit<uint32> variable := SubItem_PropValues(table,'name');
		container export_csv := Rapportage/WriteTable32ToCSV(table, AsList(variable/name, ';'), FolderInfo/OutputFolder+'/Aansluitingen.csv');
	}
}