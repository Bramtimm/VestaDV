//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//       Deze DMS-file wordt aangeroepen door stam.dms                                  //
//       In deze configuratiefile worden items voor de energie transformaties           //
//       inclusief bijbehorende emissies geconfigureerd                                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Verbruik: Using = "Units;Geography", KeepData = "True"
{
	unit<uint8> BC := Classifications/BebouwingsComponent, isHidden = "True";

	unit<uint8> EmissieType : nrofrows = 2
	{
		attribute<string> name : [ 'Aardgasverbruik', 'Elektriciteitsverbruik'];
		attribute<string> code : [ 'G', 'E'];

		// indirecte rekenregel, te evalueren binnen de context van een Rekenstap.
		attribute<string> CO2_2010 := union_data(., 'Prijzen/Aardgas/CO2_GJ', 'Prijzen/Elektriciteit/CO2_GJ');
		attribute<string> CO2_2020 := union_data(., 'Prijzen/Aardgas/CO2_GJ', 'Prijzen/Elektriciteit/CO2_GJ');
		attribute<string> CO2_2030 := union_data(., 'Prijzen/Aardgas/CO2_GJ', 'Prijzen/Elektriciteit/CO2_GJ');
		attribute<string> CO2_2040 := union_data(., 'Prijzen/Aardgas/CO2_GJ', 'Prijzen/Elektriciteit/CO2_GJ');
		attribute<string> CO2_2050 := union_data(., 'Prijzen/Aardgas/CO2_GJ', 'Prijzen/Elektriciteit/CO2_GJ');

		attribute<string> NOx_2010 := union_data(., '20.0', '76.0');
		attribute<string> NOx_2020 := union_data(., '20.0', '35.0');
		attribute<string> NOx_2030 := union_data(., '20.0', '10.0');
		attribute<string> NOx_2040 := union_data(., '20.0',  '8.0');
		attribute<string> NOx_2050 := union_data(., '20.0',  '6.0');

		attribute<string> SO2_2010 := union_data(.,  '0.0', '25.0');
		attribute<string> SO2_2020 := union_data(.,  '0.0', '11.0');
		attribute<string> SO2_2030 := union_data(.,  '0.0',  '3.0');
		attribute<string> SO2_2040 := union_data(.,  '0.0',  '3.0');
		attribute<string> SO2_2050 := union_data(.,  '0.0',  '2.0');

		attribute<string> VOS_2010 := union_data(.,  '0.0',  '2.0');
		attribute<string> VOS_2020 := union_data(.,  '0.0',  '1.0');
		attribute<string> VOS_2030 := union_data(.,  '0.0',  '0.0');
		attribute<string> VOS_2040 := union_data(.,  '0.0',  '0.0');
		attribute<string> VOS_2050 := union_data(.,  '0.0',  '0.0');

		attribute<string> TS_2010  := union_data(.,  '0.0',  '1.0');
		attribute<string> TS_2020  := union_data(.,  '0.0',  '0.0');
		attribute<string> TS_2030  := union_data(.,  '0.0',  '0.0');
		attribute<string> TS_2040  := union_data(.,  '0.0',  '0.0');
		attribute<string> TS_2050  := union_data(.,  '0.0',  '0.0');
	}
	
	unit<uint32> mutatieSchema: nrofrows = 25
	{
		parameter<uint32> nrAttr := 5, isHidden = "True";
		unit<uint32> Elements := Range(uint32, 0, nrAttr * #.), isHidden = "True"
		{
			parameter<string> PRR := 'Bebouwing/@BC@/PlanRegio_rel';

			attribute<string> Text := union_data(.,
				// technology, location
					// expr, 
					// aggr, emission_rel

		// ===== Gas en Electriciteitsleveringen aan eindgebruikers
				'A1_GLevering', 'e10_GNet', 
					'-Allocatie/@BC@/MeterVraag/AardGas',
					PRR, ''

			,	'A1_GLevering', 'a@BN@1_Gas_@BC@',
					'Allocatie/@BC@/MeterVraag/AardGas',
					PRR, ''

			,	'A2_eLevering', 'e20_eNet', 
					'-Allocatie/@BC@/MeterVraag/Elektriciteit', 
					PRR, ''

			,	'A2_eLevering', 'a@BN@2_Elektra_@BC@', 
					'Allocatie/@BC@/MeterVraag/Elektriciteit', 
					PRR, ''

			// ===== WKO
			,	'C_@RON@_@ROC@', 'a@BN@_@BC@_RV',
					'float64(Allocatie/@BC@/WarmteAllocatie == Classifications/WarmteOptie/V/@ROC@)*Allocatie/@BC@/BO/Functioneel/V_RV',
					PRR, ''
	
			,	'C_@RON@_@ROC@', 'a@BN@_@BC@_WW',
					'float64(Allocatie/@BC@/WarmteAllocatie == Classifications/WarmteOptie/V/@ROC@)*Allocatie/@BC@/BO/Functioneel/V_TW',
					PRR, ''

			,	'C_@RON@_@ROC@', 'a@WKON@_@WKOC@_Koude',
					'-float64(Allocatie/@BC@/WarmteAllocatie == Classifications/WarmteOptie/V/@ROC@)*Allocatie/@BC@/BO/Functioneel/V_K',
					PRR, ''

			,	'C_@RON@_@ROC@', 'e10_GNet',
					'-StateNaAllocatie/@ROC@/Verbruik/V_id_gas', 
					'', 'G' 

			,	'C_@RON@_@ROC@', 'e20_eNet',
					'-StateNaAllocatie/@ROC@/Verbruik/V_id_elek', 
					'', 'E'

			,	'C_@RON@_@ROC@', 'b2_InpandigeWarmte',
					'-StateNaAllocatie/@ROC@/Verbruik/V_id_warmte',
					'', ''

			,	'D2_Bijstook', 'e10_GNet',
					'-StateNaAllocatie/@ROC@/Verbruik/V_wd_gas', 
					'', 'G'

			,	'D2_Bijstook', 'e20_eNet',
					'-StateNaAllocatie/@ROC@/Verbruik/V_wd_elek', 
					'', 'E'

			,	'D2_Bijstook', 'c10_WijkWarmte',
					'-StateNaAllocatie/Cumulaties/@ROC@/Verbruik/V_wd_gas', 
					'', ''

			,	'D2_Bijstook', 'i10_OmgevingVerlies',
					'StateNaAllocatie/@ROC@/Verbruik/V_wd_verlies', 
					'', ''

			,	'D2_Bijstook', 'b2_InpandigeWarmte',
					'StateNaAllocatie/@ROC@/Verbruik/V_id_warmte', 
					'', ''

			,	'E@RON@_@ROC@', 'h10_OmgevingsWarmteWinst',
					'StateNaAllocatie/@ROC@/Verbruik/V_ow_warmte', 
					'', ''

			,	'E@RON@_@ROC@', 'e10_GNet',
					'StateNaAllocatie/@ROC@/Verbruik/V_ow_gas', 
					'', 'G'

			,	'E@RON@_@ROC@', 'e20_eNet',
					'StateNaAllocatie/@ROC@/Verbruik/V_ow_elek', 
					'', 'E'

			,	'E@RON@_@ROC@', 'c10_WijkWarmte',
					'StateNaAllocatie/@ROC@/Verbruik/V_wd_warmte', 
					'', ''

			,	'E@RON@_@ROC@', 'f10_Biogas',  //Biogas
					'-(GebiedsAllocatie/@ROC@/results/@ROC@/P_vol * StateNaAllocatie/KostenBaten/V_WarmtePrimairD) * float64(StateNaAllocatie/PlanRegioWarmteAllocatie_REMOVE == Classifications/GebiedsOptie/V/@ROC@) * GebiedsAllocatie/@ROC@/Results/Factoren/Biogas', 
					'', ''

			,	'E@RON@_@ROC@', 'f20_Biovast',  //Biovast
					'-(GebiedsAllocatie/@ROC@/results/@ROC@/P_vol * StateNaAllocatie/KostenBaten/V_WarmtePrimairD) * float64(StateNaAllocatie/PlanRegioWarmteAllocatie_REMOVE == Classifications/GebiedsOptie/V/@ROC@) * GebiedsAllocatie/@ROC@/Results/Factoren/Biovast', 
					'', ''

			,	'E@RON@_@ROC@', 'h10_OmgevingsWarmteWinst',  //Ondergrond
					'-(GebiedsAllocatie/@ROC@/results/@ROC@/P_vol * StateNaAllocatie/KostenBaten/V_WarmtePrimairD) * float64(StateNaAllocatie/PlanRegioWarmteAllocatie_REMOVE == Classifications/GebiedsOptie/V/@ROC@) * GebiedsAllocatie/@ROC@/Results/Factoren/Ondergrond', 
					'', ''

			,	'E@RON@_@ROC@', 'h20_Opwekking',  // Opwekking
					'-(GebiedsAllocatie/@ROC@/results/@ROC@/P_vol * StateNaAllocatie/KostenBaten/V_WarmtePrimairD) * float64(StateNaAllocatie/PlanRegioWarmteAllocatie_REMOVE == Classifications/GebiedsOptie/V/@ROC@) * GebiedsAllocatie/@ROC@/Results/Factoren/Opwekking', 
					'', ''

			,	'E@RON@_@ROC@', 'i10_OmgevingVerlies', 
					'(GebiedsAllocatie/@ROC@/results/@ROC@/P_vol * StateNaAllocatie/KostenBaten/V_WarmtePrimairD) * float64(StateNaAllocatie/PlanRegioWarmteAllocatie_REMOVE == Classifications/GebiedsOptie/V/@ROC@) * '
					'(GebiedsAllocatie/@ROC@/Results/Factoren/Aardgas + GebiedsAllocatie/@ROC@/Results/Factoren/Elektriciteit + GebiedsAllocatie/@ROC@/Results/Factoren/Biogas + GebiedsAllocatie/@ROC@/Results/Factoren/Biovast + GebiedsAllocatie/@ROC@/Results/Factoren/Ondergrond + GebiedsAllocatie/@ROC@/Results/Factoren/Opwekking + - 1.0)', 
					'', ''

			,	'E@RON@_@ROC@', 'c10_WijkWarmte', 
					'(GebiedsAllocatie/@ROC@/results/@ROC@/P_vol * StateNaAllocatie/KostenBaten/V_WarmtePrimairD) * float64(StateNaAllocatie/PlanRegioWarmteAllocatie_REMOVE == Classifications/GebiedsOptie/V/@ROC@)', 
					'', ''

			);
		}

		attribute<string> name         := Elements/Text[value(id(.)* nrAttr + 0, Elements)];
		attribute<string> Actor        := Elements/Text[value(id(.)* nrAttr + 1, Elements)];
		attribute<string> Expr         := Elements/Text[value(id(.)* nrAttr + 2, Elements)];
		attribute<string> PlanRegioRel := Elements/Text[value(id(.)* nrAttr + 3, Elements)];
		attribute<string> ET_code      := Elements/Text[value(id(.)* nrAttr + 4, Elements)];

		attribute<EmissieType>  ET_rel := rlookup(ET_code, EmissieType/code);

		attribute<string> CO2_2010     := MakeDefined(EmissieType/CO2_2010[ET_rel], '0.0');
		attribute<string> CO2_2020     := MakeDefined(EmissieType/CO2_2020[ET_rel], '0.0');
		attribute<string> CO2_2030     := MakeDefined(EmissieType/CO2_2030[ET_rel], '0.0');
		attribute<string> CO2_2040     := MakeDefined(EmissieType/CO2_2040[ET_rel], '0.0');
		attribute<string> CO2_2050     := MakeDefined(EmissieType/CO2_2050[ET_rel], '0.0');
		attribute<string> NOx_2010     := MakeDefined(EmissieType/CO2_2050[ET_rel], '0.0');
		attribute<string> NOx_2020     := MakeDefined(EmissieType/NOx_2020[ET_rel], '0.0');
		attribute<string> NOx_2030     := MakeDefined(EmissieType/NOx_2030[ET_rel], '0.0');
		attribute<string> NOx_2040     := MakeDefined(EmissieType/NOx_2040[ET_rel], '0.0');
		attribute<string> NOx_2050     := MakeDefined(EmissieType/NOx_2050[ET_rel], '0.0');
		attribute<string> SO2_2010     := MakeDefined(EmissieType/SO2_2010[ET_rel], '0.0');
		attribute<string> SO2_2020     := MakeDefined(EmissieType/SO2_2020[ET_rel], '0.0');
		attribute<string> SO2_2030     := MakeDefined(EmissieType/SO2_2030[ET_rel], '0.0');
		attribute<string> SO2_2040     := MakeDefined(EmissieType/SO2_2040[ET_rel], '0.0');
		attribute<string> SO2_2050     := MakeDefined(EmissieType/SO2_2050[ET_rel], '0.0');
		attribute<string> VOS_2010     := MakeDefined(EmissieType/VOS_2010[ET_rel], '0.0');
		attribute<string> VOS_2020     := MakeDefined(EmissieType/VOS_2020[ET_rel], '0.0');
		attribute<string> VOS_2030     := MakeDefined(EmissieType/VOS_2030[ET_rel], '0.0');
		attribute<string> VOS_2040     := MakeDefined(EmissieType/VOS_2040[ET_rel], '0.0');
		attribute<string> VOS_2050     := MakeDefined(EmissieType/VOS_2050[ET_rel], '0.0');
		attribute<string> TS_2010      := MakeDefined(EmissieType/TS_2010 [ET_rel], '0.0');
		attribute<string> TS_2020      := MakeDefined(EmissieType/TS_2020 [ET_rel], '0.0');
		attribute<string> TS_2030      := MakeDefined(EmissieType/TS_2030 [ET_rel], '0.0');
		attribute<string> TS_2040      := MakeDefined(EmissieType/TS_2040 [ET_rel], '0.0');
		attribute<string> TS_2050      := MakeDefined(EmissieType/TS_2050 [ET_rel], '0.0');
	}

	unit<uint32> mutatie := mutatieSchema, isHidden = "True";
}
