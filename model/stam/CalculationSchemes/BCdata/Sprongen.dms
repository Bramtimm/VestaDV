//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Sprongen
{
	container RuimteVerwarming
	{
		attribute<units/yr_uint16> Jaar          (BebouwingsObject) := const(LocatieSpecifiekeOpties/Verbeteringen/RuimteVerwarmingsJaar, BebouwingsObject);
		attribute<Ratio>           Efficiency    (BebouwingsObject) := EnergieVraagModellen/Verbeteringen/RuimteVerwarming/Efficiency[Model_rel];
		attribute<bool>            KanVerbeteren (BebouwingsObject) := Jaar <= zichtjaar_jaar && Efficiency > EnergieVraagModellen/Efficiency/RuimteVerwarming/AardGas[Model_rel];
	}

	container Toegestaan :=	for_each_nedv(Classifications/LabelSprong/code, '=LocatieSpecifiekeOpties/Verbeteringen/'+Classifications/LabelSprong/code, BebouwingsObject, bool); //obv userinput toekomst.dms
	
	container Toepasbaar := for_each_nedv(Classifications/LabelSprong/code,
							Replace( 'Toegestaan/@code@ && Toepasbaar_manual/@code@', '@code@', Classifications/LabelSprong/code), BebouwingsObject, Bool);
		
	
// 	container Toepasbaar :=	for_each_nedv(Classifications/LabelSprong/code,
// 							'Toegestaan/'+Classifications/LabelSprong/code+' &&
// 							'+(Classifications/LabelSprong/NaWijziging ? '' : '!')+'EnergieLabel/WasChanged' , BebouwingsObject, bool);
// 							
	attribute<bool>       AofBofeWP (BebouwingsObject) :=	    EnergieLabel/LastValue ==  classifications/energielabel/V/AeWP
															||  EnergieLabel/LastValue ==  classifications/energielabel/V/BeWP
															||  EnergieLabel/LastValue ==  classifications/energielabel/V/Aplus
															||  EnergieLabel/LastValue ==  classifications/energielabel/V/LabelB;
	container Toepasbaar_manual //TODO remove, update table in classifications
	{
		attribute<bool>    S_H_T     (BebouwingsObject) :=	!EnergieLabel/WasChanged && !AofBofeWP;
		attribute<bool>    S_H_B     (BebouwingsObject) :=	!EnergieLabel/WasChanged && !AofBofeWP;
		attribute<bool>    S_H_AP    (BebouwingsObject) :=	!EnergieLabel/WasChanged && !AofBofeWP;
		attribute<bool>    S_T_B     (BebouwingsObject) :=	 EnergieLabel/WasChanged && !AofBofeWP;
		attribute<bool>    S_T_AP    (BebouwingsObject) :=	 EnergieLabel/WasChanged && !AofBofeWP;
		attribute<bool>    S_B_AP    (BebouwingsObject) :=	 EnergieLabel/LastValue ==  classifications/energielabel/V/LabelB; //alleen van B naar AP(zonder eWP) als label nu B is zonder eWP
		attribute<bool>    S_H_BeWP  (BebouwingsObject) :=	!EnergieLabel/WasChanged && !AofBofeWP;
		attribute<bool>    S_T_BeWP  (BebouwingsObject) :=	 EnergieLabel/WasChanged && !AofBofeWP;
		attribute<bool>    S_B_BeWP  (BebouwingsObject) :=	 EnergieLabel/LastValue ==  classifications/energielabel/V/LabelB; //alleen van B naar BeWP als label nu B is zonder eWP
		attribute<bool>    S_H_AeWP  (BebouwingsObject) :=	!EnergieLabel/WasChanged && !AofBofeWP;
		attribute<bool>    S_T_AeWP  (BebouwingsObject) :=	 EnergieLabel/WasChanged && !AofBofeWP;
		attribute<bool>    S_B_AeWP  (BebouwingsObject) :=	 EnergieLabel/LastValue ==  classifications/energielabel/V/LabelB || EnergieLabel/LastValue ==  classifications/energielabel/V/BeWP; //alleen van B naar AeWP als label nu B is - met of zonder eWP
		attribute<bool>    S_AP_AeWP (BebouwingsObject) :=	 EnergieLabel/LastValue ==  classifications/energielabel/V/Aplus;
		
		
		attribute<bool>    S_H_EWV   (BebouwingsObject) :=		const(false, BebouwingsObject);
		attribute<bool>    S_T_EWV   (BebouwingsObject) :=		const(false, BebouwingsObject);
		attribute<bool>    S_B_EWV   (BebouwingsObject) :=		const(false, BebouwingsObject);
		attribute<bool>    S_AP_EWV  (BebouwingsObject) :=		const(false, BebouwingsObject);
		
	}

					
	container VermedenGas
	{
		attribute<units/GJ_yr>	RV_H_vast		(BebouwingsObject)	:=	Functioneel/RuimteVerwarming_vast / (Efficiency/RuimteVerwarming/Aardgas * DragerOpties/RuimteVerwarming/Aardgas_leidingverliesfactor);
		attribute<units/GJ_yr>	RV_H_var		(BebouwingsObject)	:=	Functioneel/RuimteVerwarming_var  / (Efficiency/RuimteVerwarming/Aardgas * DragerOpties/RuimteVerwarming/Aardgas_leidingverliesfactor);
		attribute<units/GJ_yr>	RV_vast			(BebouwingsObject)	:=	RV_H_vast / Efficiency/gebouw/LaatsteWaarde_vast;
		attribute<units/GJ_yr>	RV_var			(BebouwingsObject)	:=	RV_H_var / Efficiency/gebouw/LaatsteWaarde_var;
		attribute<units/GJ_yr>	RV_AP_vast		(BebouwingsObject)	:=	RV_H_vast / EnergieVraagModellen/Verbeteringen/S_H_AP/efficiency_vast[Model_rel];
		attribute<units/GJ_yr>	RV_AP_var		(BebouwingsObject)	:=	RV_H_var / EnergieVraagModellen/Verbeteringen/S_H_AP/efficiency_var[Model_rel];

		attribute<units/GJ_yr> WW     (BebouwingsObject) := (Functioneel/WarmWater - Opwekking/Zonneboiler) / (Efficiency/WarmWater/Aardgas * DragerOpties/WarmWater/Aardgas_leidingverliesfactor);
		attribute<units/GJ_yr> S_H_T  (BebouwingsObject) := max_elem( 0.0[GJ_yr] , (RV_H_vast * (1.0 - 1.0 / EnergieVraagModellen/Verbeteringen/S_H_T/efficiency_vast )	[Model_rel] + RV_H_var * (1.0 - 1.0 / EnergieVraagModellen/Verbeteringen/S_H_T/efficiency_var)	[Model_rel]));
		attribute<units/GJ_yr> S_H_B  (BebouwingsObject) := max_elem( 0.0[GJ_yr] , (RV_H_vast * (1.0 - 1.0 / EnergieVraagModellen/Verbeteringen/S_H_B/efficiency_vast )		[Model_rel] + RV_H_var * (1.0 - 1.0 / EnergieVraagModellen/Verbeteringen/S_H_B/efficiency_var)	[Model_rel]));
		attribute<units/GJ_yr> S_H_AP (BebouwingsObject) := max_elem( 0.0[GJ_yr] , (RV_H_vast * (1.0 - 1.0 / EnergieVraagModellen/Verbeteringen/S_H_AP/efficiency_vast )	[Model_rel] + RV_H_var * (1.0 - 1.0 / EnergieVraagModellen/Verbeteringen/S_H_AP/efficiency_var)	[Model_rel]));
		attribute<units/GJ_yr> S_T_B  (BebouwingsObject) := max_elem( 0.0[GJ_yr] , (S_H_B  - S_H_T ));
		attribute<units/GJ_yr> S_T_AP (BebouwingsObject) := max_elem( 0.0[GJ_yr] , (S_H_AP - S_H_T ));
		attribute<units/GJ_yr> S_B_AP (BebouwingsObject) := max_elem( 0.0[GJ_yr] , (S_H_AP - S_H_B ));
		
		unit<uint32>		check	:=	Subset(S_H_AP < 1.0[GJ_yr])
		{
			attribute<ModelObject> type := Model_rel[nr_OrgEntity];
			attribute<m2> opp  := RuimtelijkeVraagComponent/functioneel/var_f[nr_OrgEntity];
		}
	}
	container ExtraVentilatie := for_each_nedv(Classifications/SchilSprong/code,
				replace('EnergieVraagModellen/Verbeteringen/@code@/ExtraVentilatie[Model_rel] * RuimtelijkeVraagComponent/functioneel/var_f *
				float64(energielabel/LastValue > /Classifications/energielabel/V/LabelB)', '@code@', Classifications/SchilSprong/code),
				BebouwingsObject, GJ_yr);

	container ComfortVerbetering := for_each_nedv(Classifications/SchilSprong/code,
				replace('VermedenGas/@code@ * EnergieVraagModellen/Verbeteringen/@code@/ComfortFactor_stap[Model_rel]',
				'@code@', Classifications/SchilSprong/code),
				BebouwingsObject, GJ_yr);
	attribute<Eur>		Ki_HR      (BebouwingsObject) :=	RuimtelijkeVraagComponent/nrAansluitingen * BC_kentallen/Ki_HR_vast +
																RuimtelijkeVraagComponent/Aansluitcapaciteit/RV * BC_kentallen/Ki_HR_var;			
	container VermedenKosten_eg_excl := for_each_nedv(Classifications/SchilSprong/code,
				replace('VermedenGas/@code@  * AardgasPrijs', '@code@', Classifications/SchilSprong/code),
				BebouwingsObject, Eur_yr)
	{
		attribute<Eur_GJ> AardgasPrijs       (BebouwingsObject) := PrijzenAardgas/KGJ_eindgebruik_excl[classify(VermedenGas/RV_vast + VermedenGas/RV_var +VermedenGas/WW, PrijzenAardgas/ClassBreak)];
		attribute<Eur_GJ> ElektriciteitPrijs (BebouwingsObject) := PrijzenElektriciteit/KGJ_eindgebruik_excl[classify(Functioneel/Apparatuur+Functioneel/PompEnergie, PrijzenElektriciteit/ClassBreak)];
		attribute<Eur_yr> K_Pomp    (BebouwingsObject) := Functioneel/PompEnergie * ElektriciteitPrijs;
		attribute<Eur_yr> GeenGas_H (BebouwingsObject) := (VermedenGas/RV_H_vast + VermedenGas/RV_H_var + VermedenGas/WW)* AardgasPrijs + opbrengsten/VastRechtBijdrage + K_Pomp;

		attribute<Eur_yr>	Kji_HR     (BebouwingsObject) :=	NcwRefs/_15/AnnualisationFactor * Ki_HR;
		
		attribute<Eur_yr>	KostenBasis_BeWP	(BebouwingsObject)	:=	ElektriciteitPrijs *
																	((Functioneel/RuimteVerwarming_vast / EnergieVraagModellen/Verbeteringen/S_H_B/efficiency_vast [Model_rel]
																	+ Functioneel/RuimteVerwarming_var  / EnergieVraagModellen/Verbeteringen/S_H_B/efficiency_var  [Model_rel])
																	/ Efficiency/RuimteVerwarming/BeWP 
																	+ (Functioneel/WarmWater - Opwekking/Zonneboiler) / Efficiency/WarmWater/eWP);

		attribute<Eur_yr>	KostenBasis_AeWP	(BebouwingsObject)	:=	ElektriciteitPrijs *
																	((Functioneel/RuimteVerwarming_vast / EnergieVraagModellen/Verbeteringen/S_H_AP/efficiency_vast [Model_rel]
																	+ Functioneel/RuimteVerwarming_var  / EnergieVraagModellen/Verbeteringen/S_H_AP/efficiency_var  [Model_rel])
																	/ Efficiency/RuimteVerwarming/AeWP 
																	+ (Functioneel/WarmWater - Opwekking/Zonneboiler) / Efficiency/WarmWater/eWP);

		attribute<Eur_yr> S_H_BeWP         (BebouwingsObject) := GeenGas_H         - KostenBasis_BeWP + Kji_HR;
		attribute<Eur_yr> S_T_BeWP         (BebouwingsObject) := GeenGas_H - S_H_T - KostenBasis_BeWP + Kji_HR;
		attribute<Eur_yr> S_B_BeWP         (BebouwingsObject) := GeenGas_H - S_H_B - KostenBasis_BeWP + Kji_HR;
		
		attribute<Eur_yr> S_H_AeWP         (BebouwingsObject) := GeenGas_H         - KostenBasis_AeWP + Kji_HR;
		attribute<Eur_yr> S_T_AeWP         (BebouwingsObject) := GeenGas_H - S_H_T - KostenBasis_AeWP + Kji_HR;
		attribute<Eur_yr> S_B_AeWP         (BebouwingsObject) := GeenGas_H - S_H_B - KostenBasis_AeWP + Kji_HR;
		attribute<Eur_yr> S_AP_AeWP        (BebouwingsObject) := GeenGas_H - S_H_AP- KostenBasis_AeWP + Kji_HR;

		attribute<Eur_yr>	KostenBasis_EWV	(BebouwingsObject)	:=	ElektriciteitPrijs * 
																	( VermedenGas/RV_AP_vast / Efficiency/RuimteVerwarming/EWV
																	+ VermedenGas/RV_AP_var  / Efficiency/RuimteVerwarming/EWV
																	+ (Functioneel/WarmWater - Opwekking/Zonneboiler) / Efficiency/WarmWater/EWV);

		attribute<Eur_yr> S_H_EWV         (BebouwingsObject) := GeenGas_H         - KostenBasis_EWV + Kji_HR;
		attribute<Eur_yr> S_T_EWV         (BebouwingsObject) := GeenGas_H - S_H_T - KostenBasis_EWV + Kji_HR;
		attribute<Eur_yr> S_B_EWV         (BebouwingsObject) := GeenGas_H - S_H_B - KostenBasis_EWV + Kji_HR;
		attribute<Eur_yr> S_AP_EWV        (BebouwingsObject) := GeenGas_H - S_H_AP- KostenBasis_EWV + Kji_HR;
	}
	container ComfortVerbetering_eg_excl := for_each_nedv(Classifications/SchilSprong/code,
				replace('ComfortVerbetering/@code@  * VermedenKosten_eg_excl/AardgasPrijs', '@code@', Classifications/SchilSprong/code),
				BebouwingsObject, Eur_yr)
	{
		attribute<Eur_yr> S_B_BeWP  (BebouwingsObject) := const(0[Eur_yr], BebouwingsObject);
		attribute<Eur_yr> S_T_BeWP  (BebouwingsObject) := S_T_B + S_B_BeWP;
		attribute<Eur_yr> S_H_BeWP  (BebouwingsObject) := S_H_B + S_B_BeWP;

		attribute<Eur_yr> S_AP_AeWP (BebouwingsObject) := const(0[Eur_yr], BebouwingsObject);
		attribute<Eur_yr> S_B_AeWP  (BebouwingsObject) := S_B_AP + S_AP_AeWP;
		attribute<Eur_yr> S_T_AeWP  (BebouwingsObject) := S_T_AP + S_AP_AeWP;
		attribute<Eur_yr> S_H_AeWP  (BebouwingsObject) := S_H_AP + S_AP_AeWP;

		attribute<Eur_yr> S_AP_EWV (BebouwingsObject) := const(0[Eur_yr], BebouwingsObject);
		attribute<Eur_yr> S_H_EWV  (BebouwingsObject) := S_H_AP + S_AP_EWV;
		attribute<Eur_yr> S_T_EWV  (BebouwingsObject) := S_T_AP + S_AP_EWV;
		attribute<Eur_yr> S_B_EWV  (BebouwingsObject) := S_B_AP + S_AP_EWV;
	}
	container VermedenKosten_m := for_each_nedv(Classifications/SchilSprong/code,
				replace('VermedenGas/@code@  * AardgasPrijs', '@code@', Classifications/SchilSprong/code),
				BebouwingsObject, Eur_yr)
	{
		attribute<Eur_GJ> AardgasPrijs       (BebouwingsObject) := PrijzenAardgas/KGJ_maatschappelijk      [classify(VermedenGas/RV_vast + VermedenGas/RV_var + VermedenGas/WW, PrijzenAardgas/ClassBreak)];
		attribute<Eur_GJ> ElektriciteitPrijs (BebouwingsObject) := PrijzenElektriciteit/KGJ_maatschappelijk[classify(Functioneel/Apparatuur+Functioneel/PompEnergie, PrijzenElektriciteit/ClassBreak)];

		attribute<Eur_yr> K_Pomp             (BebouwingsObject) := Functioneel/PompEnergie * ElektriciteitPrijs;
		attribute<Eur_yr> GeenGas_H          (BebouwingsObject) := (VermedenGas/RV_H_vast + VermedenGas/RV_H_var + VermedenGas/WW)* AardgasPrijs + opbrengsten/VastRechtBijdrage + K_Pomp;
		
		attribute<Eur_yr>	Kmi_HR     (BebouwingsObject) :=	NCW/mr15/AnnualisationFactor * Ki_HR;
		
		attribute<Eur_yr>	KostenBasis_BeWP	(BebouwingsObject)	:=	ElektriciteitPrijs *
																	((Functioneel/RuimteVerwarming_vast / EnergieVraagModellen/Verbeteringen/S_H_B/efficiency_vast [Model_rel]
																	+ Functioneel/RuimteVerwarming_var  / EnergieVraagModellen/Verbeteringen/S_H_B/efficiency_var  [Model_rel])
																	/ Efficiency/RuimteVerwarming/BeWP 
																	+ (Functioneel/WarmWater - Opwekking/Zonneboiler) / Efficiency/WarmWater/eWP);
		attribute<Eur_yr>	KostenBasis_AeWP	(BebouwingsObject)	:=	ElektriciteitPrijs *
																	((Functioneel/RuimteVerwarming_vast / EnergieVraagModellen/Verbeteringen/S_H_AP/efficiency_vast [Model_rel]
																	+ Functioneel/RuimteVerwarming_var  / EnergieVraagModellen/Verbeteringen/S_H_AP/efficiency_var  [Model_rel])
																	/ Efficiency/RuimteVerwarming/AeWP 
																	+ (Functioneel/WarmWater - Opwekking/Zonneboiler) / Efficiency/WarmWater/eWP);

		attribute<Eur_yr> S_H_BeWP            (BebouwingsObject) := GeenGas_H         - KostenBasis_BeWP + Kmi_HR;
		attribute<Eur_yr> S_T_BeWP            (BebouwingsObject) := GeenGas_H - S_H_T - KostenBasis_BeWP + Kmi_HR;
		attribute<Eur_yr> S_B_BeWP            (BebouwingsObject) := GeenGas_H - S_H_B - KostenBasis_BeWP + Kmi_HR;
		
		attribute<Eur_yr> S_H_AeWP            (BebouwingsObject) := GeenGas_H         - KostenBasis_AeWP + Kmi_HR;
		attribute<Eur_yr> S_T_AeWP            (BebouwingsObject) := GeenGas_H - S_H_T - KostenBasis_AeWP + Kmi_HR;
		attribute<Eur_yr> S_B_AeWP            (BebouwingsObject) := GeenGas_H - S_H_B - KostenBasis_AeWP + Kmi_HR;
		attribute<Eur_yr> S_AP_AeWP           (BebouwingsObject) := GeenGas_H - S_H_AP- KostenBasis_AeWP + Kmi_HR;

		attribute<Eur_yr>	KostenBasis_EWV	(BebouwingsObject)	:=	ElektriciteitPrijs * 
																	( VermedenGas/RV_AP_vast / Efficiency/RuimteVerwarming/EWV
																	+ VermedenGas/RV_AP_var  / Efficiency/RuimteVerwarming/EWV
																	+ Functioneel/WarmWater  / Efficiency/WarmWater/EWV);

		attribute<Eur_yr> S_H_EWV            (BebouwingsObject) := GeenGas_H         - KostenBasis_EWV + Kmi_HR;
		attribute<Eur_yr> S_T_EWV            (BebouwingsObject) := GeenGas_H - S_H_T - KostenBasis_EWV + Kmi_HR;
		attribute<Eur_yr> S_B_EWV            (BebouwingsObject) := GeenGas_H - S_H_B - KostenBasis_EWV + Kmi_HR;
		attribute<Eur_yr> S_AP_EWV           (BebouwingsObject) := GeenGas_H - S_H_AP- KostenBasis_EWV + Kmi_HR;
	}
	container ComfortVerbetering_m := for_each_nedv(Classifications/SchilSprong/code,
				replace('ComfortVerbetering/@code@  * VermedenKosten_m/AardgasPrijs', '@code@', Classifications/SchilSprong/code),
				BebouwingsObject, Eur_yr)
	{
		attribute<Eur_yr> S_H_BeWP  (BebouwingsObject) := S_H_B;
		attribute<Eur_yr> S_T_BeWP  (BebouwingsObject) := S_T_B;
		attribute<Eur_yr> S_B_BeWP  (BebouwingsObject) := const(0[Eur_yr], BebouwingsObject);
		
		attribute<Eur_yr> S_AP_AeWP (BebouwingsObject) := const(0[Eur_yr], BebouwingsObject);
		attribute<Eur_yr> S_H_AeWP  (BebouwingsObject) := S_H_AP;
		attribute<Eur_yr> S_T_AeWP  (BebouwingsObject) := S_T_AP;
		attribute<Eur_yr> S_B_AeWP  (BebouwingsObject) := S_B_AP;

		attribute<Eur_yr> S_AP_EWV (BebouwingsObject) := const(0[Eur_yr], BebouwingsObject);
		attribute<Eur_yr> S_H_EWV  (BebouwingsObject) := S_H_AP;
		attribute<Eur_yr> S_T_EWV  (BebouwingsObject) := S_T_AP;
		attribute<Eur_yr> S_B_EWV  (BebouwingsObject) := S_B_AP;
	}
	attribute<float64>	     var_f  (BebouwingsObject) :=	(RuimtelijkeVraagComponent/nrOppunits <=  50[m2] ? 50[m2]  :
															 RuimtelijkeVraagComponent/nrOppunits >= 200[m2] ? 200[m2] :
															 RuimtelijkeVraagComponent/nrOppunits) / RuimtelijkeVraagComponent/nrModelUnits;
	container VerbeterKostenMin_nu := for_each_nedv(Classifications/SchilSprong/code,
				replace('EnergieVraagModellen/Verbeteringen/@code@/kosten_min_var [Model_rel]  * var_f
				+ EnergieVraagModellen/Verbeteringen/@code@/kosten_min_vast [Model_rel]', '@code@', Classifications/SchilSprong/code),
				BebouwingsObject, Eur_ModelUnit)
	{
		attribute<Eur_ModelUnit> LTAS   (BebouwingsObject) := EnergieVraagModellen/Verbeteringen/LTAS/kosten_min[Model_rel];
		attribute<Eur_ModelUnit> EWV    (BebouwingsObject) := Kengetallen/BCkentallen/aandeelEWVopp_min * Kengetallen/BCkentallen/Ki_EWV_m2_min * var_f;
	}
	container VerbeterKostenMax_nu := for_each_nedv(Classifications/SchilSprong/code,
				replace('EnergieVraagModellen/Verbeteringen/@code@/kosten_max_var [Model_rel]  * var_f
				+ EnergieVraagModellen/Verbeteringen/@code@/kosten_max_vast [Model_rel]', '@code@', Classifications/SchilSprong/code),
				BebouwingsObject, Eur_ModelUnit)
	{
		attribute<Eur_ModelUnit> LTAS   (BebouwingsObject) := EnergieVraagModellen/Verbeteringen/LTAS/kosten_max[Model_rel];
		attribute<Eur_ModelUnit> EWV    (BebouwingsObject) := Kengetallen/BCkentallen/aandeelEWVopp_max * Kengetallen/BCkentallen/Ki_EWV_m2_max * var_f;
	}
	container VerbeterKosten_nu := for_each_nedv(Classifications/SchilSprong/code,
				replace('VerbeterKostenMax_nu/@code@ * Schuiven/KostenMax
				       + VerbeterKostenMin_nu/@code@ * Schuiven/KostenMin', '@code@', Classifications/SchilSprong/code),
				BebouwingsObject, Eur_ModelUnit)
	{
		attribute<Eur_ModelUnit> LTAS   (BebouwingsObject) := VerbeterKostenMax_nu/LTAS * Schuiven/KostenMax + VerbeterKostenMin_nu/LTAS * Schuiven/KostenMin;
		attribute<Eur_ModelUnit> EWV    (BebouwingsObject) := VerbeterKostenMax_nu/EWV  * Schuiven/KostenMax + VerbeterKostenMin_nu/EWV  * Schuiven/KostenMin;
	}
	container VentilatieKosten_eg := for_each_nedv(Classifications/SchilSprong/code,
				replace('ExtraVentilatie/@code@ * ElektriciteitPrijs', '@code@', Classifications/SchilSprong/code),
				BebouwingsObject, Eur_yr)
	{
		attribute<Eur_GJ>	ElektriciteitPrijs (BebouwingsObject)	:=	PrijzenElektriciteit/KGJ_eindgebruik_excl[classify(Functioneel/Apparatuur+Functioneel/PompEnergie, PrijzenElektriciteit/ClassBreak)];
		attribute<Eur_yr>	S_H_BeWP           (BebouwingsObject)	:=	S_H_B;
		attribute<Eur_yr>	S_T_BeWP           (BebouwingsObject)	:=	S_T_B;
		attribute<Eur_yr>	S_B_BeWP           (BebouwingsObject)	:=	const(0[Eur_yr], BebouwingsObject);
		attribute<Eur_yr>	S_H_AeWP           (BebouwingsObject)	:=	S_H_AP;
		attribute<Eur_yr>	S_T_AeWP           (BebouwingsObject)	:=	S_T_AP;
		attribute<Eur_yr>	S_B_AeWP           (BebouwingsObject)	:=	S_B_AP;
		attribute<Eur_yr>	S_AP_AeWP          (BebouwingsObject)	:=	const(0[Eur_yr], BebouwingsObject);
		attribute<Eur_yr>	S_H_EWV            (BebouwingsObject)	:=	S_H_AP;
		attribute<Eur_yr>	S_T_EWV            (BebouwingsObject)	:=	S_T_AP;
		attribute<Eur_yr>	S_B_EWV            (BebouwingsObject)	:=	S_B_AP;
		attribute<Eur_yr>	S_AP_EWV           (BebouwingsObject)	:=	const(0[Eur_yr], BebouwingsObject);
	}
	container VentilatieKosten_m := for_each_nedv(Classifications/SchilSprong/code,
				replace('ExtraVentilatie/@code@ * ElektriciteitPrijs', '@code@', Classifications/SchilSprong/code),
				BebouwingsObject, Eur_yr)
	{
		attribute<Eur_GJ>	ElektriciteitPrijs (BebouwingsObject)	:=	PrijzenElektriciteit/KGJ_maatschappelijk[classify(Functioneel/Apparatuur+Functioneel/PompEnergie, PrijzenElektriciteit/ClassBreak)];
		attribute<Eur_yr>	S_H_BeWP           (BebouwingsObject)	:=	S_H_B;
		attribute<Eur_yr>	S_T_BeWP           (BebouwingsObject)	:=	S_T_B;
		attribute<Eur_yr>	S_B_BeWP           (BebouwingsObject)	:=	const(0[eur_yr], BebouwingsObject);
		attribute<Eur_yr>	S_H_AeWP           (BebouwingsObject)	:=	S_H_AP;
		attribute<Eur_yr>	S_T_AeWP           (BebouwingsObject)	:=	S_T_AP;
		attribute<Eur_yr>	S_B_AeWP           (BebouwingsObject)	:=	S_B_AP;
		attribute<Eur_yr>	S_AP_AeWP          (BebouwingsObject)	:=	const(0[eur_yr], BebouwingsObject);
		attribute<Eur_yr>	S_H_EWV            (BebouwingsObject)	:=	S_H_AP;
		attribute<Eur_yr>	S_T_EWV            (BebouwingsObject)	:=	S_T_AP;
		attribute<Eur_yr>	S_B_EWV            (BebouwingsObject)	:=	S_B_AP;
		attribute<Eur_yr>	S_AP_EWV           (BebouwingsObject)	:=	const(0[eur_yr], BebouwingsObject);
	}
	
	container VerbeterKosten_i
	{
		attribute<Eur_ModelUnit> S_H_T    (BebouwingsObject) := VerbeterKosten_nu/S_H_T   * LeerCurves/Cmin/Curve;
		attribute<Eur_ModelUnit> S_H_B    (BebouwingsObject) := VerbeterKosten_nu/S_H_B   * LeerCurves/Bpls/Curve;
		attribute<Eur_ModelUnit> S_H_AP   (BebouwingsObject) := VerbeterKosten_nu/S_H_AP  * LeerCurves/Verder/Curve;
		attribute<Eur_ModelUnit> S_T_B    (BebouwingsObject) := VerbeterKosten_nu/S_T_B   * LeerCurves/Bpls/Curve;
		attribute<Eur_ModelUnit> S_T_AP   (BebouwingsObject) := VerbeterKosten_nu/S_T_AP  * LeerCurves/Verder/Curve;
		attribute<Eur_ModelUnit> S_B_AP   (BebouwingsObject) := VerbeterKosten_nu/S_B_AP  * LeerCurves/Verder/Curve;

		// eWP (S_AP_eWP) is vanaf hier incl LTAS (L); S_AP_eWP en L zijn wel nog langs dezelfde leercurve gelegd.
		attribute<Eur_ModelUnit> LTAS     (BebouwingsObject) := VerbeterKosten_nu/LTAS    * Leercurves/LTAS/Curve;
		
		container eWPkosten_S1
		{
			attribute<string>        Variant_S1       (BebouwingsObject) :=		/Resultaten/StartJaar/PlanRegioResults/Vergelijking/meerkosten/Strategie_1/Hoofdindicatoren/Scode[planregio_rel];
			
			attribute<ratio>         LuchtBodemSchuif (BebouwingsObject) :=		Variant_S1 == 's1a'? 1.0[Ratio] : Variant_S1 == 's1b'? 0.0[Ratio] : 0.5[Ratio];
			attribute<Ratio>         R_lucht          (BebouwingsObject) :=		LuchtBodemSchuif;
			attribute<Ratio>         R_bodem          (BebouwingsObject) :=		1.0 - R_lucht;
			
			attribute<Eur_aansl>     Ki_w_eWP_vast    (BebouwingsObject) :=		LeerCurves/eWPlw/Curve * (( R_lucht * (Schuiven/KostenMin * Kengetallen/BCkentallen/Ki_w_LWP_vast_min + Schuiven/KostenMax * Kengetallen/BCkentallen/Ki_w_LWP_vast_max))+
																										 (  R_bodem * (Schuiven/KostenMin * Kengetallen/BCkentallen/Ki_w_BWP_vast_min + Schuiven/KostenMax * Kengetallen/BCkentallen/Ki_w_BWP_vast_max)));
			attribute<Eur_kw>        Ki_w_eWP_var     (BebouwingsObject) :=		LeerCurves/eWPlw/Curve * (( R_lucht * (Schuiven/KostenMin * Kengetallen/BCkentallen/Ki_w_LWP_var_min  + Schuiven/KostenMax * Kengetallen/BCkentallen/Ki_w_LWP_var_max))+
																										 (  R_bodem * (Schuiven/KostenMin * Kengetallen/BCkentallen/Ki_w_BWP_var_min  + Schuiven/KostenMax * Kengetallen/BCkentallen/Ki_w_BWP_var_max)));
			attribute<Eur_aansl>     Ki_u_eWP_vast    (BebouwingsObject) :=		LeerCurves/eWPlw/Curve * (( R_lucht * (Schuiven/KostenMin * Kengetallen/BCkentallen/Ki_u_LWP_vast_min + Schuiven/KostenMax * Kengetallen/BCkentallen/Ki_u_LWP_vast_max))+
																										 (  R_bodem * (Schuiven/KostenMin * Kengetallen/BCkentallen/Ki_u_BWP_vast_min + Schuiven/KostenMax * Kengetallen/BCkentallen/Ki_u_BWP_vast_max)));
			attribute<Eur_kw>        Ki_u_eWP_var     (BebouwingsObject) :=		LeerCurves/eWPlw/Curve * (( R_lucht * (Schuiven/KostenMin * Kengetallen/BCkentallen/Ki_u_LWP_var_min  + Schuiven/KostenMax * Kengetallen/BCkentallen/Ki_u_LWP_var_max))+
																										 (  R_bodem * (Schuiven/KostenMin * Kengetallen/BCkentallen/Ki_u_BWP_var_min  + Schuiven/KostenMax * Kengetallen/BCkentallen/Ki_u_BWP_var_max)));
		}
		
		attribute<Eur_ModelUnit> AewP_org (BebouwingsObject) := ((BCname == 'BestaandeWoning') || (BCname == 'NieuwbouwWoning') ?
																( BC_kentallen/Ki_w_eWP_vast * RuimtelijkeVraagComponent/nrAansluitingen
																+ BC_kentallen/Ki_w_eWP_var  * RuimtelijkeVraagComponent/AansluitCapaciteit/eWP) : 
																( BC_kentallen/Ki_u_eWP_vast * RuimtelijkeVraagComponent/nrAansluitingen
																+ BC_kentallen/Ki_u_eWP_var  * RuimtelijkeVraagComponent/AansluitCapaciteit/eWP)
																) / RuimtelijkeVraagComponent/nrModelUnits;
		attribute<Eur_ModelUnit> AewP_S1  (BebouwingsObject) := ((BCname == 'BestaandeWoning') || (BCname == 'NieuwbouwWoning') ?
																( eWPkosten_S1/Ki_w_eWP_vast * RuimtelijkeVraagComponent/nrAansluitingen
																+ eWPkosten_S1/Ki_w_eWP_var  * RuimtelijkeVraagComponent/AansluitCapaciteit/eWP) : 
																( eWPkosten_S1/Ki_u_eWP_vast * RuimtelijkeVraagComponent/nrAansluitingen
																+ eWPkosten_S1/Ki_u_eWP_var  * RuimtelijkeVraagComponent/AansluitCapaciteit/eWP)
																) / RuimtelijkeVraagComponent/nrModelUnits;
			
		attribute<Eur_ModelUnit> AeWP     (BebouwingsObject) :=	= Schuiven/LuchtBodemAlsS1 ? 'AewP_S1' : 'AewP_org';
// 		
// 		attribute<Eur_ModelUnit> AeWP     (BebouwingsObject) := ((BCname == 'BestaandeWoning') || (BCname == 'NieuwbouwWoning') ?
// 																( BC_kentallen/Ki_w_eWP_vast * RuimtelijkeVraagComponent/nrAansluitingen
// 																+ BC_kentallen/Ki_w_eWP_var  * RuimtelijkeVraagComponent/AansluitCapaciteit/eWP) : 
// 																( BC_kentallen/Ki_u_eWP_vast * RuimtelijkeVraagComponent/nrAansluitingen
// 																+ BC_kentallen/Ki_u_eWP_var  * RuimtelijkeVraagComponent/AansluitCapaciteit/eWP)	
// 																) / RuimtelijkeVraagComponent/nrModelUnits;
		
		attribute<Eur_ModelUnit> BeWP     (BebouwingsObject) := AeWP;
		attribute<Eur_ModelUnit> EWV      (BebouwingsObject) := VerbeterKosten_nu/EWV     * Leercurves/EWV/Curve;

		attribute<Eur_ModelUnit> S_AP_AeWP(BebouwingsObject) := AeWP+ LTAS;
		attribute<Eur_ModelUnit> S_B_AeWP (BebouwingsObject) := S_B_AP  + S_AP_AeWP;
		attribute<Eur_ModelUnit> S_T_AeWP (BebouwingsObject) := S_T_AP  + S_AP_AeWP;
		attribute<Eur_ModelUnit> S_H_AeWP (BebouwingsObject) := S_H_AP + S_AP_AeWP;

		attribute<Eur_ModelUnit> S_B_BeWP (BebouwingsObject) := BeWP + LTAS ;
		attribute<Eur_ModelUnit> S_H_BeWP (BebouwingsObject) := S_H_B + S_B_BeWP;
		attribute<Eur_ModelUnit> S_T_BeWP (BebouwingsObject) := S_T_B + S_B_BeWP;

		attribute<Eur_ModelUnit> S_AP_EWV (BebouwingsObject) := EWV;
		attribute<Eur_ModelUnit> S_H_EWV  (BebouwingsObject) := S_H_AP + S_AP_EWV;
		attribute<Eur_ModelUnit> S_T_EWV  (BebouwingsObject) := S_T_AP  + S_AP_EWV;
		attribute<Eur_ModelUnit> S_B_EWV  (BebouwingsObject) := S_B_AP  + S_AP_EWV;
	}
	container GebouwVerbetering_j := for_each_nedv(Classifications/SchilSprong/code,
				replace('VerbeterKosten_i/@code@ * NcwRefs/_30/AnnualisationFactor * RuimtelijkeVraagComponent/nrModelUnits', '@code@', Classifications/SchilSprong/code),
				BebouwingsObject, Eur_yr)
	{
		attribute<Eur_yr> S_H_BeWP  (BebouwingsObject):= S_H_B;
		attribute<Eur_yr> S_T_BeWP  (BebouwingsObject):= S_T_B;
		attribute<Eur_yr> S_B_BeWP  (BebouwingsObject):= const(0[Eur_yr], BebouwingsObject);

		attribute<Eur_yr> S_AP_AeWP (BebouwingsObject):= const(0[Eur_yr], BebouwingsObject);
		attribute<Eur_yr> S_H_AeWP  (BebouwingsObject):= S_H_AP;
		attribute<Eur_yr> S_T_AeWP  (BebouwingsObject):= S_T_AP;
		attribute<Eur_yr> S_B_AeWP  (BebouwingsObject):= S_B_AP;

		attribute<Eur_yr> S_AP_EWV (BebouwingsObject):= const(0[Eur_yr], BebouwingsObject);
		attribute<Eur_yr> S_H_EWV  (BebouwingsObject):= S_H_AP;
		attribute<Eur_yr> S_T_EWV  (BebouwingsObject):= S_T_AP;
		attribute<Eur_yr> S_B_EWV  (BebouwingsObject):= S_B_AP;
	}
	container AnnualisationFactor_S1
		{
			attribute<string>        Variant_S1       (BebouwingsObject) :=		/Resultaten/StartJaar/PlanRegioResults/Vergelijking/meerkosten/Strategie_1/Hoofdindicatoren/Scode[planregio_rel];
			attribute<ratio>         LuchtBodemSchuif (BebouwingsObject) :=		Variant_S1 == 's1a'? 1.0[Ratio] : Variant_S1 == 's1b'? 0.0[Ratio] : 0.5[Ratio];
			attribute<Ratio>         R_lucht          (BebouwingsObject) :=		LuchtBodemSchuif;
			attribute<Ratio>         R_bodem          (BebouwingsObject) :=		1.0 - R_lucht;
			
			attribute<Ratio> fractie_afschrijftermijn_30jaar (BebouwingsObject) :=	R_lucht * Kengetallen/BCkentallen/R_LWP_afschrijf_30 + R_bodem * Kengetallen/BCkentallen/R_BWP_afschrijf_30;
			attribute<Ratio> fractie_afschrijftermijn_15jaar (BebouwingsObject) :=	R_lucht * Kengetallen/BCkentallen/R_LWP_afschrijf_15 + R_bodem * Kengetallen/BCkentallen/R_BWP_afschrijf_15;
			attribute<_yr>   eWP_AnnualisationFactor_mr      (BebouwingsObject) :=	fractie_afschrijftermijn_30jaar * NCW/mr30/AnnualisationFactor    + fractie_afschrijftermijn_15jaar * NCW/mr15/AnnualisationFactor;
			attribute<_yr>   eWP_AnnualisationFactor_eg      (BebouwingsObject) :=	fractie_afschrijftermijn_30jaar * NcwRefs/_30/AnnualisationFactor + fractie_afschrijftermijn_15jaar * NcwRefs/_15/AnnualisationFactor;
		}
	container LokaleOpwekking_j := for_each_nedv(Classifications/SchilSprong/code,
				'const(0[Eur_yr], BebouwingsObject)',
				BebouwingsObject, Eur_yr)
	{
		attribute<_yr> eWP_AnnualisationFactor_eg (BebouwingsObject) :=		= Schuiven/LuchtBodemAlsS1 ? 'AnnualisationFactor_S1/eWP_AnnualisationFactor_eg' : 'const(BC_kentallen/eWP_AnnualisationFactor_eg, BebouwingsObject)';
		
		attribute<Eur_yr> LTAS     (BebouwingsObject) := RuimtelijkeVraagComponent/nrModelUnits * VerbeterKosten_i/LTAS * NcwRefs/_30/AnnualisationFactor;
		attribute<Eur_yr> BeWP     (BebouwingsObject) := RuimtelijkeVraagComponent/nrModelUnits * VerbeterKosten_i/BeWP * eWP_AnnualisationFactor_eg;
		attribute<Eur_yr> AeWP     (BebouwingsObject) := RuimtelijkeVraagComponent/nrModelUnits * VerbeterKosten_i/AeWP * eWP_AnnualisationFactor_eg;
		attribute<Eur_yr> EWV      (BebouwingsObject) := RuimtelijkeVraagComponent/nrModelUnits * VerbeterKosten_i/EWV  * NcwRefs/_15/AnnualisationFactor;

		attribute<Eur_yr> S_B_BeWP (BebouwingsObject) := BeWP + LTAS;
		attribute<Eur_yr> S_H_BeWP (BebouwingsObject) := S_B_BeWP;
		attribute<Eur_yr> S_T_BeWP (BebouwingsObject) := S_B_BeWP;
		
		attribute<Eur_yr> S_AP_AeWP(BebouwingsObject) := AeWP + LTAS;
		attribute<Eur_yr> S_H_AeWP (BebouwingsObject) := S_AP_AeWP;
		attribute<Eur_yr> S_T_AeWP (BebouwingsObject) := S_AP_AeWP;
		attribute<Eur_yr> S_B_AeWP (BebouwingsObject) := S_AP_AeWP;

		attribute<Eur_yr> S_AP_EWV (BebouwingsObject) := EWV;
		attribute<Eur_yr> S_H_EWV  (BebouwingsObject) := S_AP_EWV;
		attribute<Eur_yr> S_T_EWV  (BebouwingsObject) := S_AP_EWV;
		attribute<Eur_yr> S_B_EWV  (BebouwingsObject) := S_AP_EWV;
	}
	container LokaleOpwekking_eg := LokaleOpwekking_j
	{
		attribute<Eur_yr> BeWP     (BebouwingsObject) := RuimtelijkeVraagComponent/nrModelUnits * VerbeterKosten_i/BeWP * LokaleOpwekking_j/eWP_AnnualisationFactor_eg - S_ISDE;
		attribute<Eur_yr> AeWP     (BebouwingsObject) := RuimtelijkeVraagComponent/nrModelUnits * VerbeterKosten_i/AeWP * LokaleOpwekking_j/eWP_AnnualisationFactor_eg - S_ISDE;
	}
	attribute<Eur_yr>	Kj_oh_HR   (BebouwingsObject) := Ki_HR * Kengetallen/Onderhoud/R_LO_onderhoud;
	container OnderhoudAdministratie_j := for_each_nedv(Classifications/SchilSprong/code,
				replace('VerbeterKosten_i/@code@ * (Kengetallen/Onderhoud/R_GV_onderhoud + Kengetallen/Onderhoud/R_GV_admin) *
				 RuimtelijkeVraagComponent/nrModelUnits', '@code@', Classifications/SchilSprong/code),
				BebouwingsObject, Eur_yr)
	{
		attribute<Eur_yr> LTAS     (BebouwingsObject) := VerbeterKosten_i/LTAS * (Kengetallen/Onderhoud/R_LO_onderhoud     + Kengetallen/Onderhoud/R_LO_admin)     * RuimtelijkeVraagComponent/nrModelUnits;
		attribute<Eur_yr> BeWP     (BebouwingsObject) := VerbeterKosten_i/BeWP * (Kengetallen/Onderhoud/R_LO_EWP_onderhoud + Kengetallen/Onderhoud/R_LO_EWP_admin) * RuimtelijkeVraagComponent/nrModelUnits;
		attribute<Eur_yr> AeWP     (BebouwingsObject) := VerbeterKosten_i/AeWP * (Kengetallen/Onderhoud/R_LO_EWP_onderhoud + Kengetallen/Onderhoud/R_LO_EWP_admin) * RuimtelijkeVraagComponent/nrModelUnits;
		attribute<Eur_yr> EWV      (BebouwingsObject) := VerbeterKosten_i/EWV  * (Kengetallen/Onderhoud/R_LO_onderhoud     + Kengetallen/Onderhoud/R_LO_admin)     * RuimtelijkeVraagComponent/nrModelUnits;

		attribute<Eur_yr> S_B_BeWP (BebouwingsObject) := BeWP + LTAS - Kj_oh_HR;
		attribute<Eur_yr> S_H_BeWP (BebouwingsObject) := S_H_B + S_B_BeWP - Kj_oh_HR;
		attribute<Eur_yr> S_T_BeWP (BebouwingsObject) := S_T_B + S_B_BeWP - Kj_oh_HR;
		
		attribute<Eur_yr> S_AP_AeWP(BebouwingsObject) := AeWP + LTAS - Kj_oh_HR;
		attribute<Eur_yr> S_H_AeWP (BebouwingsObject) := S_H_AP + S_AP_AeWP - Kj_oh_HR;
		attribute<Eur_yr> S_T_AeWP (BebouwingsObject) := S_T_AP  + S_AP_AeWP - Kj_oh_HR;
		attribute<Eur_yr> S_B_AeWP (BebouwingsObject) := S_B_AP  + S_AP_AeWP - Kj_oh_HR;

		attribute<Eur_yr> S_AP_EWV (BebouwingsObject) := EWV - Kj_oh_HR;
		attribute<Eur_yr> S_H_EWV  (BebouwingsObject) := S_H_AP + S_AP_EWV - Kj_oh_HR;
		attribute<Eur_yr> S_T_EWV  (BebouwingsObject) := S_T_AP  + S_AP_EWV - Kj_oh_HR;
		attribute<Eur_yr> S_B_EWV  (BebouwingsObject) := S_B_AP  + S_AP_EWV - Kj_oh_HR;
	}
	
	container VerbeterKosten_m := for_each_nedv(Classifications/SchilSprong/code,
				replace('VerbeterKosten_i/@code@ * NCW/mr30/AnnualisationFactor *
				 RuimtelijkeVraagComponent/nrModelUnits', '@code@', Classifications/SchilSprong/code),
				BebouwingsObject, Eur_yr)
	{
		attribute<_yr> eWP_AnnualisationFactor_mr (BebouwingsObject) :=		= Schuiven/LuchtBodemAlsS1 ? 'AnnualisationFactor_S1/eWP_AnnualisationFactor_mr' : 'const(BC_kentallen/eWP_AnnualisationFactor_mr, BebouwingsObject)';
		
		attribute<Eur_yr> LTAS     (BebouwingsObject) := RuimtelijkeVraagComponent/nrModelUnits * VerbeterKosten_i/LTAS * NCW/mr30/AnnualisationFactor;
		attribute<Eur_yr> BeWP     (BebouwingsObject) := RuimtelijkeVraagComponent/nrModelUnits * VerbeterKosten_i/BeWP * eWP_AnnualisationFactor_mr;
		attribute<Eur_yr> AeWP     (BebouwingsObject) := RuimtelijkeVraagComponent/nrModelUnits * VerbeterKosten_i/AeWP * eWP_AnnualisationFactor_mr;
		attribute<Eur_yr> EWV      (BebouwingsObject) := RuimtelijkeVraagComponent/nrModelUnits * VerbeterKosten_i/EWV  * NCW/mr15/AnnualisationFactor;

		attribute<Eur_yr> S_B_BeWP (BebouwingsObject) := BeWP + LTAS;
		attribute<Eur_yr> S_H_BeWP (BebouwingsObject) := S_H_B + S_B_BeWP;
		attribute<Eur_yr> S_T_BeWP (BebouwingsObject) := S_T_B + S_B_BeWP;
		
		attribute<Eur_yr> S_AP_AeWP(BebouwingsObject) := AeWP + LTAS;
		attribute<Eur_yr> S_H_AeWP (BebouwingsObject) := S_H_AP + S_AP_AeWP;
		attribute<Eur_yr> S_T_AeWP (BebouwingsObject) := S_T_AP + S_AP_AeWP;
		attribute<Eur_yr> S_B_AeWP (BebouwingsObject) := S_B_AP + S_AP_AeWP;

		attribute<Eur_yr> S_AP_EWV (BebouwingsObject) := EWV;
		attribute<Eur_yr> S_H_EWV  (BebouwingsObject) := S_H_AP + S_AP_EWV;
		attribute<Eur_yr> S_T_EWV  (BebouwingsObject) := S_T_AP + S_AP_EWV;
		attribute<Eur_yr> S_B_EWV  (BebouwingsObject) := S_B_AP + S_AP_EWV;
	}
	container KanSpringen := for_each_nedv(
		 Classifications/LabelSprong/code
		,MakeDefined(Classifications/LabelSprong/code_xtra+' &&' , '') 
			+'Toepasbaar/'+Classifications/LabelSprong/code+' 
			&& IsDefined(Classifications/combines/LabelChange/Label_na[value(uint32(EnergieLabel/LastValue)*#Classifications/LabelSprong 
				+ '+string(ID(Classifications/LabelSprong))+'
				, Classifications/combines/LabelChange)]
				)'
		,BebouwingsObject
		,bool)
	{
		attribute<bool> BeWP (BebouwingsObject) := (OpwekkingsOpties/org_capaciteit/hWP == 0[Ratio]) && (OpwekkingsOpties/org_capaciteit/mWKK == 0[Ratio]) 
			&& not(Classifications/WarmteOptie/isGebiedsOptie[WarmteAllocatie_org]);
		attribute<bool> AeWP (BebouwingsObject) := BeWP;
		attribute<bool> EWV (BebouwingsObject)  := BeWP;
	}

	attribute<Classifications/LabelSprong> LabelSprongFirst (BebouwingsObject) :=
		='value(switch('
			+AsItemList('case(KanSpringen/'+Classifications/LabelSprong/code+', '+string(ID(Classifications/LabelSprong))+' )')+
		',(0 / 0))'+
		',Classifications/LabelSprong)'
	;

	container Rentabiliteit_m :=
		for_each_nedv(
			 Classifications/LabelSprong/code
			,replace(
				'( VermedenKosten_m/@ '
				'+ ComfortVerbetering_m/@ '
				'- VerbeterKosten_m/@'
				'- VentilatieKosten_m/@'
				'- OnderhoudAdministratie_j/@'
				') * float64(KanSpringen/@)'
				, '@'
				, Classifications/LabelSprong/code
			)
			, BebouwingsObject
			, Eur_yr
		);
		
	attribute<Classifications/LabelSprong> LabelSprong_m (BebouwingsObject) :=
		='value('
			'argmax('
				'0[Eur_yr],'
				+AsItemList( 'MakeDefined(Rentabiliteit_m/'+Classifications/LabelSprong/code+',0[Eur_yr])' )
			+')-1'
		', Classifications/LabelSprong)';

	parameter<float64>	S_gv   := (1.0 - EIA_Opties/Rs_GebouwVerbetering) * (1.0 - EEA_Opties/Rs_GebouwVerbetering),	Descr = "aandeel subsidie van investering op gebouwverbetering";
	parameter<float64>	S_lo   := (1.0 - EIA_Opties/Rs_LokaleOpwekking  ) * (1.0 - EEA_Opties/Rs_LokaleOpwekking),		Descr = "aandeel subsidie van investering op loale opwekking";
	parameter<Eur_yr>	S_ISDE := EIA_Opties/ISDE_eWP * BC_kentallen/eWP_AnnualisationFactor_eg,						Descr = "vast bedrag subsidie op eWP";

	container Rentabiliteit_eg := 
		for_each_nedv(
			 Classifications/LabelSprong/code
			,replace(
				'( (VermedenKosten_eg_excl/@ + ComfortVerbetering_eg_excl/@) * EIA_Opties/R_SplitIncentiveFactor * BTW_Factor'
				'- GebouwVerbetering_j/@ * S_gv                                   * BTW_Factor_gv'
				'- LokaleOpwekking_eg/@   * S_lo                                   * BTW_Factor'
				'+ S_ISDE                                                         * BTW_Factor'
				'- VentilatieKosten_eg/@                                          * BTW_Factor'
				'- OnderhoudAdministratie_j/@ * (1.0 - EEA_Opties/S_OenM) * BTW_Factor'
				') * float64(KanSpringen/@)'
				, '@'
				, Classifications/LabelSprong/code
			)
			, BebouwingsObject
			, Eur_yr
		);

	attribute<Classifications/LabelSprong> LabelSprong_eg (BebouwingsObject) :=
		='value('
			'argmax('
				'0[Eur_yr],'
				+AsItemList( 'MakeDefined(Rentabiliteit_eg/'+Classifications/LabelSprong/code+',0[Eur_yr])' )
			+')-1'
		', Classifications/LabelSprong)';

	attribute<Classifications/LabelSprong> LabelSprong_opgelegd (BebouwingsObject) := 
		= BCname = 'BestaandeWoning'
			? 'rlookup(Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/labelsprong_opgelegd/' + classifications/zichtjaar/name[zichtjaar_rel] +', Classifications/LabelSprong/code)'
			: 'const(0 / 0, BebouwingsObject, Classifications/LabelSprong)';
	
	attribute<Classifications/LabelSprong> LabelSprong_rendabel (BebouwingsObject) :=
			= LocatieSpecifiekeOpties/Verbeteringen/SpringMeestRendabel
				? 'LabelSprong_eg'
				: LocatieSpecifiekeOpties/Verbeteringen/SpringMaatschappelijk
					? 'LabelSprong_m'
					: 'LabelSprongFirst';

	attribute<Classifications/LabelSprong> LabelSprong (BebouwingsObject) := MakeDefined(LabelSprong_opgelegd, LabelSprong_rendabel);

	attribute<bool> KanVerbeteren (BebouwingsObject) := IsDefined(LabelSprong);
	attribute<bool> AeWP          (BebouwingsObject) := NaarEnergieLabel == Classifications/EnergieLabel/V/AeWP;
	attribute<bool> BeWP          (BebouwingsObject) := NaarEnergieLabel == Classifications/EnergieLabel/V/BeWP;
	attribute<bool> eWP           (BebouwingsObject) := AeWP || BeWP;
	attribute<bool> eWP_Nieuw     (BebouwingsObject) := KanVerbeteren && eWP;
	attribute<bool> EWV           (BebouwingsObject) := NaarEnergieLabel == Classifications/EnergieLabel/V/EWV;
	attribute<bool> EWV_Nieuw     (BebouwingsObject) := KanVerbeteren && EWV;

	attribute<Classifications/EnergieLabel> NaarEnergieLabel (BebouwingsObject) :=
		KanVerbeteren
			? Classifications/combines/LabelChange/Label_na[ value(uint32(EnergieLabel/LastValue)*#Classifications/LabelSprong + uint32(LabelSprong),
			 Classifications/combines/LabelChange) ] 
			: EnergieLabel/LastValue;

	//specifieke catch voor foutieve toerekening schilverbeteringkosten bij sprong B naar BeWP of A+ naar BewP
	attribute<bool> GeenVerbeteringNodigB (BebouwingsObject) :=	(NaarEnergieLabel == Classifications/energielabel/V/BeWP ||
																NaarEnergieLabel == Classifications/energielabel/V/LabelB)
																&& EnergieLabel/LastValue <= Classifications/energielabel/V/LabelB;
																
	attribute<bool> GeenVerbeteringNodigA (BebouwingsObject) :=	(NaarEnergieLabel == Classifications/energielabel/V/AeWP ||
																NaarEnergieLabel == Classifications/energielabel/V/Aplus)
																&& EnergieLabel/LastValue <= Classifications/energielabel/V/Aplus;
																
	attribute<bool> GeenVerbeteringNodig (BebouwingsObject) :=	GeenVerbeteringNodigA || GeenVerbeteringNodigB;
	
	attribute<Eur_ModelUnit> kosten_min (BebouwingsObject) := GeenVerbeteringNodig ? 0.0[eur_modelunit] : //specifieke catch voor foutieve toerekening schilverbeteringkosten bij sprong B naar BeWP of A+ naar BewP
		MakeDefined(
			merge(LabelSprong, Eur_ModelUnit, 
				Sprongen/VerbeterKostenMin_nu/S_H_T,		// S_H_T
				Sprongen/VerbeterKostenMin_nu/S_H_B,		// S_H_B
				Sprongen/VerbeterKostenMin_nu/S_H_AP,		// S_H_AP
				Sprongen/VerbeterKostenMin_nu/S_T_B,		// S_T_B
				Sprongen/VerbeterKostenMin_nu/S_T_AP,		// S_T_AP
				Sprongen/VerbeterKostenMin_nu/S_B_AP,		// S_B_AP
				Sprongen/VerbeterKostenMin_nu/S_H_B,		// S_H_BeWP
				Sprongen/VerbeterKostenMin_nu/S_T_B,		// S_T_BeWP
				const(0[Eur_ModelUnit], BebouwingsObject),	// S_B_BeWP - geen schilsprong, alleen installatie
				Sprongen/VerbeterKostenMin_nu/S_H_AP,		// S_H_AeWP
				Sprongen/VerbeterKostenMin_nu/S_T_AP,		// S_T_AeWP
				Sprongen/VerbeterKostenMin_nu/S_B_AP,		// S_B_AeWP
				const(0[Eur_ModelUnit], BebouwingsObject),	// S_AP_AeWP - geen schilsprong, alleen installatie
				Sprongen/VerbeterKostenMin_nu/S_H_AP,		// S_H_EWV
				Sprongen/VerbeterKostenMin_nu/S_T_AP,		// S_T_EWV
				Sprongen/VerbeterKostenMin_nu/S_B_AP,		// S_B_EWV
				const(0[Eur_ModelUnit], BebouwingsObject)	// S_AP_EWV - geen schilsprong, alleen installatie
			)
		,	0[Eur_ModelUnit]
		);
	attribute<Eur_ModelUnit> kosten_max (BebouwingsObject) :=  GeenVerbeteringNodig ? 0.0[eur_modelunit] : //specifieke catch voor foutieve toerekening schilverbeteringkosten bij sprong B naar BeWP of A+ naar BewP
		MakeDefined(
			merge(LabelSprong, Eur_ModelUnit, 
				Sprongen/VerbeterKostenMax_nu/S_H_T,		// S_H_T
				Sprongen/VerbeterKostenMax_nu/S_H_B,		// S_H_B
				Sprongen/VerbeterKostenMax_nu/S_H_AP,		// S_H_AP
				Sprongen/VerbeterKostenMax_nu/S_T_B,		// S_T_B
				Sprongen/VerbeterKostenMax_nu/S_T_AP,		// S_T_AP
				Sprongen/VerbeterKostenMax_nu/S_B_AP,		// S_B_AP
				Sprongen/VerbeterKostenMax_nu/S_H_B,		// S_H_BeWP
				Sprongen/VerbeterKostenMax_nu/S_T_B,		// S_T_BeWP
				const(0[Eur_ModelUnit], BebouwingsObject),	// S_B_BeWP - geen schilsprong, alleen installatie
				Sprongen/VerbeterKostenMax_nu/S_H_AP,		// S_H_AeWP
				Sprongen/VerbeterKostenMax_nu/S_T_AP,		// S_T_AeWP
				Sprongen/VerbeterKostenMax_nu/S_B_AP,		// S_B_AeWP
				const(0[Eur_ModelUnit], BebouwingsObject),	// S_AP_AeWP - geen schilsprong, alleen installatie
				Sprongen/VerbeterKostenMax_nu/S_H_AP,		// S_H_EWV
				Sprongen/VerbeterKostenMax_nu/S_T_AP,		// S_T_EWV
				Sprongen/VerbeterKostenMax_nu/S_B_AP,		// S_B_EWV
				const(0[Eur_ModelUnit], BebouwingsObject)	// S_AP_EWV - geen schilsprong, alleen installatie
			)
		,	0[Eur_ModelUnit]
		);
	attribute<Eur_ModelUnit> kosten_sprong_nu(BebouwingsObject) := kosten_max * LocatieSpecifiekeOpties/Kosten/VerbeterMinMaxSchuif + kosten_min * (1.0 - LocatieSpecifiekeOpties/Kosten/VerbeterMinMaxSchuif);

	attribute<Eur_ModelUnit> Ki_AeWP         (BebouwingsObject) := Sprongen/AeWP ? Verbeterkosten_i/S_AP_AeWP : 0[Eur_ModelUnit];
	attribute<Eur_ModelUnit> Ki_BeWP         (BebouwingsObject) := Sprongen/BeWP ? Verbeterkosten_i/S_B_BeWP  : 0[Eur_ModelUnit];
	attribute<Eur_ModelUnit> Ki_eWP          (BebouwingsObject) := Ki_AeWP + Ki_BeWP;
	attribute<Eur_ModelUnit> Ki_EWV          (BebouwingsObject) := Sprongen/EWV  ? Verbeterkosten_i/S_AP_EWV  : 0[Eur_ModelUnit];

	attribute<Ratio>         SprongCurve     (BebouwingsObject) := (NaarEnergieLabel >= Classifications/EnergieLabel/V/LabelC) ?	Leercurves/Cmin/Curve
																		:	(NaarEnergieLabel >= Classifications/EnergieLabel/V/LabelB) ?	Leercurves/Bpls/Curve
																		:																	Leercurves/Verder/Curve;
	attribute<Eur_ModelUnit> kosten_sprong   (BebouwingsObject) := kosten_sprong_nu * SprongCurve;

	attribute<Eur_ModelUnit> Ki_gv           (BebouwingsObject) := kosten_sprong + StartingStateComponent/Sprongen/Ki_gv[StartingState_rel]; // Ki_eWP en Ki_EWV worden in sectie kosten apart opgenomen.
	
	attribute<Eur_yr> Vermeden_excl (BebouwingsObject) :=
		MakeDefined(
			merge(LabelSprong, Eur_yr, 
				VermedenKosten_eg_excl/S_H_T,
				VermedenKosten_eg_excl/S_H_B,
				VermedenKosten_eg_excl/S_H_AP,
				VermedenKosten_eg_excl/S_T_B,
				VermedenKosten_eg_excl/S_T_AP,
				VermedenKosten_eg_excl/S_B_AP,
				VermedenKosten_eg_excl/S_H_BeWP,
				VermedenKosten_eg_excl/S_T_BeWP,
				VermedenKosten_eg_excl/S_B_BeWP,
				VermedenKosten_eg_excl/S_H_AeWP,
				VermedenKosten_eg_excl/S_T_AeWP,
				VermedenKosten_eg_excl/S_B_AeWP,
				VermedenKosten_eg_excl/S_AP_AeWP,
				VermedenKosten_eg_excl/S_H_EWV,
				VermedenKosten_eg_excl/S_T_EWV,
				VermedenKosten_eg_excl/S_B_EWV,
				VermedenKosten_eg_excl/S_AP_EWV
			)
		,	0[Eur_yr]
		);

	attribute<Eur_yr> Comfort_excl (BebouwingsObject) :=
		MakeDefined(
			merge(LabelSprong, Eur_yr, 
				ComfortVerbetering_eg_excl/S_H_T,
				ComfortVerbetering_eg_excl/S_H_B,
				ComfortVerbetering_eg_excl/S_H_AP,
				ComfortVerbetering_eg_excl/S_T_B,
				ComfortVerbetering_eg_excl/S_T_AP,
				ComfortVerbetering_eg_excl/S_B_AP,
				ComfortVerbetering_eg_excl/S_H_BeWP,
				ComfortVerbetering_eg_excl/S_T_BeWP,
				ComfortVerbetering_eg_excl/S_B_BeWP,
				ComfortVerbetering_eg_excl/S_H_AeWP,
				ComfortVerbetering_eg_excl/S_T_AeWP,
				ComfortVerbetering_eg_excl/S_B_AeWP,
				ComfortVerbetering_eg_excl/S_AP_AeWP,
				ComfortVerbetering_eg_excl/S_H_EWV,
				ComfortVerbetering_eg_excl/S_T_EWV,
				ComfortVerbetering_eg_excl/S_B_EWV,
				ComfortVerbetering_eg_excl/S_AP_EWV
			)
		,	0[Eur_yr]
		);

	attribute<Eur_yr> Incentive_eigenaar_excl (BebouwingsObject) := (Vermeden_excl + Comfort_excl) * EIA_Opties/R_SplitIncentiveFactor;

	attribute<Eur_yr> Kj_OnderhoudAdministratie (BebouwingsObject) := RuimtelijkeVraagComponent/nrModelUnits * 
		add(
			Ki_gv  * (Kengetallen/Onderhoud/R_GV_onderhoud     + Kengetallen/Onderhoud/R_GV_admin)
		,	Ki_eWP * (Kengetallen/Onderhoud/R_LO_EWP_onderhoud + Kengetallen/Onderhoud/R_LO_EWP_admin)
		, 	Ki_EWV * (Kengetallen/Onderhoud/R_LO_onderhoud     + Kengetallen/Onderhoud/R_LO_admin)
		);

	container subsidie
	{
		attribute<Eur>		EIA30  (BebouwingsObject)	:=	RuimtelijkeVraagComponent/nrModelUnits * (Ki_gv  * EIA_Opties/Rs_GebouwVerbetering + Ki_EWV * EIA_Opties/Rs_LokaleOpwekking);
		attribute<Eur>		EIA15  (BebouwingsObject)	:=	RuimtelijkeVraagComponent/nrModelUnits * (Ki_eWP  * EIA_Opties/Rs_LokaleOpwekking)
																+ (Ki_eWP > 0.0 [Eur] ? EIA_Opties/ISDE_eWP : 0.0 [Eur]);
		attribute<Eur_yr>	EEA    (BebouwingsObject)	:=	(Kj_OnderhoudAdministratie * EEA_Opties/S_OenM) + RuimtelijkeVraagComponent/nrModelUnits * add(
																								Ki_gv  * NcwRefs/_30/AnnualisationFactor * EEA_Opties/Rs_GebouwVerbetering,
																								Ki_EWV * NcwRefs/_30/AnnualisationFactor * EEA_Opties/Rs_LokaleOpwekking,
																								Ki_eWP * NcwRefs/_15/AnnualisationFactor * EEA_Opties/Rs_LokaleOpwekking);
	}
	attribute<Yr> TVT (BebouwingsObject) := Ki_gv * RuimtelijkeVraagComponent/nrModelUnits / Vermeden_excl;
}
