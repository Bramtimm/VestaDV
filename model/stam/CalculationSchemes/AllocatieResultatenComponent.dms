//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template AllocatieResultatenComponent
{
	// begin case parameters
	container BCdata;
	attribute<Classifications/WarmteOptie> WarmteAllocatie (BebouwingsObject);
	attribute<Eur_yr>                      KoudeAllocatie  (BebouwingsObject);
	attribute<Eur_yr>                      Om_Comfort      (BebouwingsObject);
	parameter<string>                      BebouwingsComponent_name;
	// end case parameters

	container                                         RuimtelijkeVraagComponent                           := BCdata/RuimtelijkeVraagComponent;
	container                                         VraagKentallen                                      := BCdata/VraagKentallen;
	unit<uint32>                                      BebouwingsObject                                    := BCdata/BebouwingsObject;
	unit<uint32>                                      PlanRegio                                           := Invoer/SpecifiekeInstellingen/PlanRegio;
	attribute<Classifications/WoningtypeBestaand>     BebouwingsType                   (BebouwingsObject) := BebouwingsObject/BebouwingsType;
	attribute<PlanRegio>                              PlanRegio_BebouwingsObject_rel   (BebouwingsObject) := point_in_polygon(BebouwingsObject/point, PlanRegio/Geometry);
	attribute<bool>                                   VeroorzaaktGrondroering          (BebouwingsObject) := Classifications/WarmteOptie/isGebiedsOptie[WarmteAllocatie];
	attribute<bool>                                   GrondroeringInPlanRegio          (PlanRegio)        := sum(VeroorzaaktGrondroering ? 1 : 0, PlanRegio_BebouwingsObject_rel) > 0;
 
	attribute<nrAansl>   nrAsl_e_app  (PlanRegio) := sum(BCdata/results/Aansluitingen/Enet_app, BCdata/Planregio_rel);
	attribute<nrAansl>   nrAsl_e_ewp  (PlanRegio) := sum(BCdata/results/Aansluitingen/Enet_ewp, BCdata/Planregio_rel);
	attribute<nrAansl>   nrAsl_e_hwp  (PlanRegio) := sum(BCdata/results/Aansluitingen/Enet_hwp, BCdata/Planregio_rel);
	
	attribute<kw> CapaciteitsvraagE (PlanRegio) :=  sum(BCdata/RuimtelijkeVraagComponent/AansluitCapaciteit/GTF_Enet * 
		( BCdata/RuimtelijkeVraagComponent/AansluitCapaciteit/ASW_Eapp * float64(BCdata/results/Aansluitingen/Enet_app > 0.0[nrAansl])
		+ BCdata/RuimtelijkeVraagComponent/AansluitCapaciteit/ASW_Ehwp * float64(BCdata/results/Aansluitingen/Enet_ewp > 0.0[nrAansl])
		+ BCdata/RuimtelijkeVraagComponent/AansluitCapaciteit/ASW_Eewp * float64(BCdata/results/Aansluitingen/Enet_hwp > 0.0[nrAansl]) ), BCdata/Planregio_rel);

	container Aandelen := for_each_nedv(Classifications/GebiedsOptie/name, 'WarmteAllocatie == Classifications/WarmteOptie/V/'+Classifications/GebiedsOptie/name+'', BebouwingsObject, bool);

	container MeterVraag := for_each_nedv(Classifications/GebiedsOptie/name, 'float64(Aandelen/'+Classifications/GebiedsOptie/name+') * BCdata/WarmteVraag/deelnemers/Verbruik', BebouwingsObject, GJ_yr)
	{
		attribute<GJ_yr> Aardgas       (BebouwingsObject) := BCdata/results/Metervraag/gas * float64(not(Classifications/WarmteOptie/isGebiedsOptie[WarmteAllocatie]));
		attribute<GJ_yr> Elektriciteit (BebouwingsObject) := BCdata/results/Metervraag/e;
		attribute<GJ_yr> Waterstof     (BebouwingsObject) := const(0.0[gj_yr], BebouwingsObject); //TODO: vraag opnemen, bijv. BCdata/results/Metervraag/Vj_H2;
		attribute<GJ_yr> Pellets       (BebouwingsObject) := const(0.0[gj_yr], BebouwingsObject); //TODO: vraag opnemen, bijv. BCdata/results/Metervraag/Vj_pellets;
		attribute<GJ_yr> Biomassa      (BebouwingsObject) := const(0.0[gj_yr], BebouwingsObject); //TODO: vraag opnemen, bijv. BCdata/results/Metervraag/Vj_biomassa;
		attribute<GJ_yr> Kolen         (BebouwingsObject) := const(0.0[gj_yr], BebouwingsObject); //TODO: vraag opnemen, bijv. BCdata/results/Metervraag/Vj_kolen;
		attribute<GJ_yr> Wind          (BebouwingsObject) := const(0.0[gj_yr], BebouwingsObject); //TODO: vraag opnemen, bijv. BCdata/results/Metervraag/Vj_wind;
		attribute<GJ_yr> Zon           (BebouwingsObject) := const(0.0[gj_yr], BebouwingsObject); //TODO: vraag opnemen, bijv. BCdata/results/Metervraag/Vj_zon;
		attribute<GJ_yr> Koude         (BebouwingsObject) := BCdata/results/Functioneel/Vj_K * float64(Aandelen/WKO);
		attribute<GJ_yr> Warmte_LT     (BebouwingsObject) := BCdata/WarmteVraag/deelnemers/Verbruik *
			( float64(WarmteAllocatie == Classifications/WarmteOptie/V/Lt15_30)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/Lt15_50)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/Lt30_30)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/Lt30_50)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/TEO)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/WKO));
		attribute<GJ_yr> Warmte_MT     (BebouwingsObject) := BCdata/WarmteVraag/deelnemers/Verbruik *
			( float64(WarmteAllocatie == Classifications/WarmteOptie/V/Restwarmte)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/Geothermie)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/WijkWKK)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/BioWKK)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/Lt15_70)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/Lt30_70)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/BuurtWKO));
		attribute<GJ_yr> GebiedsOptie  (BebouwingsObject) := ='add('+AsItemList(Classifications/GebiedsOptie/name)+')';
	}

	container AardGas 
	{
		attribute<bool>    heeft_gas        (BebouwingsObject) := Metervraag/Aardgas > 0.0[GJ_yr];
		attribute<nrAansl> nrAansl_gas      (BebouwingsObject) := float64(heeft_gas) * RuimtelijkeVraagComponent/nrAansluitingen;
		attribute<Eur>     AansluitBijdrage (BebouwingsObject) := BCdata/Opbrengsten/AansluitBijdrageG   * float64(heeft_gas);
		attribute<Eur_yr>  VastRecht        (BebouwingsObject) := BCdata/Opbrengsten/VastRechtBijdrageG  * float64(heeft_gas);

		unit<uint8> ggk := BCdata/PrijzenAardgas; // gebruiksgrootte klasse
		attribute<ggk>    ggk_rel          (BebouwingsObject) := classify(MeterVraag/AardGas, ggk/ClassBreak);
		attribute<Eur_yr> eindgebruik_excl (BebouwingsObject) := MeterVraag/AardGas * ggk/KGJ_eindgebruik_excl[ggk_rel];
		attribute<Eur_yr> maatschappelijk  (BebouwingsObject) := MeterVraag/AardGas * ggk/KGJ_maatschappelijk [ggk_rel];
		attribute<Eur_yr> netwerk          (BebouwingsObject) := MeterVraag/AardGas * ggk/KGJ_netwerk         [ggk_rel];
		attribute<Eur_yr> EnergieHeffing   (BebouwingsObject) := MeterVraag/AardGas * ggk/KGJ_EnergieHeffing  [ggk_rel];
		attribute<Eur_yr> CO2Heffing       (BebouwingsObject) := MeterVraag/AardGas * ggk/KGJ_CO2Heffing      [ggk_rel];
	}
	
	container Kosten
	{
		attribute<Eur>	Ki_HR              (BebouwingsObject) :=	WarmteAllocatie == 0[Classifications/WarmteOptie] ? BcData/Sprongen/Ki_HR : 0[eur]; // wel gas? dan kosten hr ketel
		attribute<Eur>	Ki_HR_afschrijving (BebouwingsObject) :=	WarmteAllocatie != 0[Classifications/WarmteOptie] ? Kengetallen/constanten/afschrijving_resterend * BcData/Sprongen/Ki_HR : 0[eur]; //geen gas? dan afschrijving op ketel
		attribute<Eur>	Oi_HR              (BebouwingsObject) :=	WarmteAllocatie != 0[Classifications/WarmteOptie] ? BcData/Sprongen/Ki_HR : 0[eur]; //geen gas? dan 1 hr ketel aan opbrengsten
	}
	container Vastrecht
	{	
		attribute<Eur_yr>	Kj_Vastrecht_MT    (BebouwingsObject) :=
			  float64(WarmteAllocatie == Classifications/WarmteOptie/V/Restwarmte)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/Geothermie)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/WijkWKK)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/BioWKK)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/WaterstofHR)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/WaterstofWP)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/Lt15_70)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/Lt30_70)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/BuurtWKO)
			* BCdata/Opbrengsten/VastRechtMT_D;
			
		attribute<Eur_yr>	Kj_Vastrecht_LT    (BebouwingsObject) :=
			  float64(WarmteAllocatie == Classifications/WarmteOptie/V/Lt15_30)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/Lt15_50)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/Lt30_30)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/Lt30_50)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/TEO)
			+ float64(WarmteAllocatie == Classifications/WarmteOptie/V/WKO)
			* BCdata/Opbrengsten/VastRechtLT_D;
			
		attribute<Eur_yr>	Kj_Vastrecht_K     (BebouwingsObject) :=
			  float64(WarmteAllocatie == Classifications/WarmteOptie/V/WKO)
			* BCdata/Opbrengsten/VastRechtK_D;
			
		attribute<Eur_yr>	Kj_Vastrecht       (BebouwingsObject) :=	Kj_Vastrecht_MT + Kj_Vastrecht_LT + Kj_Vastrecht_K;
	}
	
	attribute<nrAansl> aant_g_aansl_per_planregio        (PlanRegio) := sum(BCdata/results/Aansluitingen/Gnet, PlanRegio_BebouwingsObject_rel);
	attribute<nrAansl> aant_g_aansl_hoogb_per_planregio  (PlanRegio) := sum(BCdata/results/Aansluitingen/Gnet * float64(BCdata/RuimtelijkeVraagComponent/IsMeergezins), PlanRegio_BebouwingsObject_rel);
	attribute<nrAansl> aant_g_aansl_laagb_per_planregio  (PlanRegio) := sum(BCdata/results/Aansluitingen/Gnet * float64(!BCdata/RuimtelijkeVraagComponent/IsMeergezins), PlanRegio_BebouwingsObject_rel);
	
	container Elektriciteit
	{
		attribute<Eur>    AansluitBijdrage (BebouwingsObject) := BCdata/Opbrengsten/AansluitBijdrageE;
		attribute<Eur_yr> VastRecht        (BebouwingsObject) := BCdata/Opbrengsten/VastRechtBijdrageE;
		attribute<Eur_yr> Heffingskorting  (BebouwingsObject) := BCdata/Opbrengsten/HeffingskortingE;

		unit<uint8> ggk := BCdata/PrijzenElektriciteit; // gebruiksgrootte klasse
		attribute<ggk>    ggk_rel          (BebouwingsObject) := classify(MeterVraag/Elektriciteit, ggk/ClassBreak);
		attribute<Eur_yr> eindgebruik_excl (BebouwingsObject) := MeterVraag/Elektriciteit * ggk/KGJ_eindgebruik_excl[ggk_rel];
		attribute<Eur_yr> maatschappelijk  (BebouwingsObject) := MeterVraag/Elektriciteit * ggk/KGJ_maatschappelijk [ggk_rel];
		attribute<Eur_yr> netwerk          (BebouwingsObject) := MeterVraag/Elektriciteit * ggk/KGJ_netwerk         [ggk_rel];
		attribute<Eur_yr> EnergieHeffing   (BebouwingsObject) := MeterVraag/Elektriciteit * ggk/KGJ_EnergieHeffing  [ggk_rel] - Heffingskorting;
		attribute<Eur_yr> CO2Heffing       (BebouwingsObject) := MeterVraag/Elektriciteit * ggk/KGJ_CO2Heffing      [ggk_rel];
	}
	container CO2
	{
		attribute<KG_yr> AardGas           (BebouwingsObject) := MeterVraag/AardGas       * prijzen/AardGas/CO2_GJ;
		attribute<KG_yr> Elektriciteit     (BebouwingsObject) := MeterVraag/Elektriciteit * prijzen/Elektriciteit/CO2_GJ;
	}
}

